{"version":3,"file":"animations-CVR8sjCB.js","sources":["../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/utils/mix.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../../node_modules/framer-motion/dist/es/utils/memo.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/debug/record.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React.createElement","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","useConstant","init","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","constructor","this","order","scheduled","add","process","push","remove","index","splice","delete","clear","stepsOrder","schedule","frame","cancel","cancelFrame","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","now","createRenderBatcher","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","makeTargetAnimatable","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","useIsMounted","PopChildMeasure","React.Component","childRef","sizeRef","offsetHeight","offsetWidth","offsetTop","offsetLeft","PopChild","dataset","motionPopId","head","appendChild","sheet","insertRule","removeChild","React.cloneElement","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","childId","isComplete","_","React.useEffect","getChildKey","AnimatePresence","exitBeforeEnter","forceRender","forcedRenderCount","setForcedRenderCount","useState","useForceUpdate","filteredChildren","filtered","Children","isValidElement","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","updateChildLookup","React.Fragment","presentKeys","targetKeys","numPresent","component","insertionIndex","exitingComponent","onExit","leftOverKeys","childKey","leftOverKey","presentChild","presentChildKey","cloneElement"],"mappings":"gDAKA,MAAMA,EAAsBC,EAAAA,cAAc,CACtCC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,UCNbC,EAAgBL,EAAAA,cAAc,ICG9BM,EAAkBN,EAAAA,cAAc,MCLhCO,EAAgC,oBAAbC,SCGnBC,EAA4BF,EAAYG,EAAAA,gBAAkBC,EAAAA,UCD1DC,EAAcZ,EAAAA,cAAc,CAAEa,QAAQ,ICCtCC,EAAeC,GAAQA,EAAIC,QAAQ,kBAAmB,SAASC,cCA/DC,EAA+B,QAAUJ,EADjB,kBCF9B,SAASK,EAAYC,GACjB,OAAQA,GACW,iBAARA,GACPC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAK,UAClD,CCDA,SAASK,EAAeC,GACpB,MAAoB,iBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CCLA,SAASG,EAAoBH,GACzB,OAAc,OAANA,GACS,iBAANA,GACY,mBAAZA,EAAEI,KACjB,CCJA,MAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsBC,GAC3B,OAAQL,EAAoBK,EAAMC,UAC9BH,EAAaI,KAAMC,GAASZ,EAAeS,EAAMG,IACzD,CACA,SAASC,EAAcJ,GACnB,OAAOK,QAAQN,EAAsBC,IAAUA,EAAMM,SACzD,CCNA,SAASC,EAAuBP,GAC5B,MAAMQ,QAAEA,UAASP,GCFrB,SAAgCD,EAAOS,GACnC,GAAIV,EAAsBC,GAAQ,CAC9B,MAAMQ,QAAEA,EAAAP,QAASA,GAAYD,EAC7B,MAAO,CACHQ,SAAqB,IAAZA,GAAqBjB,EAAeiB,GACvCA,OACA,EACNP,QAASV,EAAeU,GAAWA,OAAU,EAErD,CACA,OAAyB,IAAlBD,EAAMU,QAAoBD,EAAU,CAAA,CAC/C,CDTiCE,CAAuBX,EAAOY,EAAAA,WAAWzC,IACtE,OAAO0C,UAAQ,KAAA,CAASL,UAASP,YAAY,CAACa,EAA0BN,GAAUM,EAA0Bb,IAChH,CACA,SAASa,EAA0BC,GAC/B,OAAOtB,MAAMC,QAAQqB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,MAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAA,EAC3B,IAAA,MAAWC,MAAOX,EACdU,EAAmBC,IAAO,CACtBC,UAAY7B,GAAUiB,EAAaW,IAAK1B,KAAMC,KAAWH,EAAMG,KCrBvE,MAAM2B,EAAqBhE,EAAAA,cAAc,ICGnCiE,EAA2BjE,EAAAA,cAAc,ICLzCkE,EAAwBC,OAAOC,IAAI,yBCuBzC,SAASC,GAAwBC,kBAAAA,EAAAA,oBAAmBC,YAAqBC,EAAAC,eAAWA,EAAAC,UAAgBA,IAChGJ,GCtBJ,SAAsBK,GAClB,IAAA,MAAWb,KAAOa,EACdd,EAAmBC,GAAO,IACnBD,EAAmBC,MACnBa,EAASb,GAGxB,CDeyBc,CAAaN,GA2ClC,MAAMO,EAAsBC,EAAAA,WA1C5B,SAAyB5C,EAAO6C,GAK5B,IAAIC,EACJ,MAAMC,EAAiB,IAChBnC,EAAAA,WAAW/C,MACXmC,EACHgD,SAAUC,EAAYjD,KAEpB/B,SAAEA,GAAa8E,EACftC,EAAUF,EAAuBP,GACjCkD,EAAcX,EAAevC,EAAO/B,GAC1C,IAAKA,GAAYI,EAAW,CAOxBoC,EAAQ0C,cEtCpB,SAA0BX,EAAWU,EAAalD,EAAOqC,GACrD,MAAQc,cAAeC,GAAWxC,EAAAA,WAAWzC,GACvCkF,EAAczC,EAAAA,WAAWlC,GACzB4E,EAAkB1C,EAAAA,WAAWxC,GAC7BmF,EAAsB3C,EAAAA,WAAW/C,GAAqBK,cACtDsF,EAAmBC,EAAAA,SAIzBpB,EAAsBA,GAAuBgB,EAAYK,UACpDF,EAAiBG,SAAWtB,IAC7BmB,EAAiBG,QAAUtB,EAAoBG,EAAW,CACtDU,cACAE,SACApD,QACAsD,kBACAM,wBAAuBN,IACW,IAA5BA,EAAgB9C,QAEtB+C,yBAGR,MAAMJ,EAAgBK,EAAiBG,QACvCE,EAAAA,mBAAmB,KACfV,GAAiBA,EAAcW,OAAO9D,EAAOsD,KAMjD,MAAMS,EAAeN,EAAAA,OAAOpD,QAAQL,EAAMhB,KAAkCgF,OAAOC,kBAgCnF,OA/BA1F,EAA0B,KACjB4E,IAELA,EAAce,SAWVH,EAAaJ,SAAWR,EAAcgB,gBACtChB,EAAcgB,eAAeC,oBAGrC3F,EAAAA,UAAU,KACD0E,IAELA,EAAckB,kBACTN,EAAaJ,SAAWR,EAAcgB,gBACvChB,EAAcgB,eAAeC,iBAE7BL,EAAaJ,UACbI,EAAaJ,SAAU,EAEvBK,OAAOC,iBAAkB,MAG1Bd,CACX,CFzBoCmB,CAAiB9B,EAAWU,EAAaH,EAAgBV,GAKjF,MAAMkC,EAA2B3D,EAAAA,WAAWmB,GACtCyC,EAAW5D,EAAAA,WAAWlC,GAAaC,OACrC8B,EAAQ0C,gBACRL,EAAgBrC,EAAQ0C,cAAcT,aAEtCK,EAAgByB,EAAUpC,EAAmBmC,GAErD,CAKA,OAAQE,EAAAA,cAAoBtG,EAAcuG,SAAU,CAAEC,MAAOlE,GACzDqC,GAAiBrC,EAAQ0C,cAAiBsB,EAAAA,cAAoB3B,EAAe,CAAEK,cAAe1C,EAAQ0C,iBAAkBJ,IAAqB,KAC7IT,EAAUE,EAAWxC,EG1DjC,SAAsBkD,EAAaC,EAAeN,GAC9C,OAAO+B,EAAAA,YAAaC,IAChBA,GAAY3B,EAAY4B,OAAS5B,EAAY4B,MAAMD,GAC/C1B,IACA0B,EACM1B,EAAc2B,MAAMD,GACpB1B,EAAc4B,WAEpBlC,IAC2B,mBAAhBA,EACPA,EAAYgC,GAEP5F,EAAY4D,KACjBA,EAAYc,QAAUkB,KASlC,CAAC1B,GACL,CHmCwC6B,CAAa9B,EAAazC,EAAQ0C,cAAeN,GAAcK,EAAajF,EAAUwC,EAAQ0C,eAClI,GAGA,OADAR,EAAoBX,GAAyBQ,EACtCG,CACX,CACA,SAASM,GAAYD,SAAEA,IACnB,MAAMiC,EAAgBrE,EAAAA,WAAWkB,GAAoBoD,GACrD,OAAOD,QAA8B,IAAbjC,EAClBiC,EAAgB,IAAMjC,EACtBA,CACV,CI5DA,SAASmC,EAAkBC,GACvB,SAASC,EAAO7C,EAAW8C,EAA8B,IACrD,OAAOnD,EAAsBiD,EAAa5C,EAAW8C,GACzD,CACA,GAAqB,oBAAVC,MACP,OAAOF,EAMX,MAAMG,MAAqBC,IAC3B,OAAO,IAAIF,MAAMF,EAAQ,CAMrBK,IAAK,CAACC,EAAS/D,KAIN4D,EAAeI,IAAIhE,IACpB4D,EAAeK,IAAIjE,EAAKyD,EAAOzD,IAE5B4D,EAAeE,IAAI9D,KAGtC,CCxCA,MAAMkE,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAevD,GACpB,MAKqB,iBAAdA,IAIHA,EAAUwD,SAAS,SAOvBF,EAAqBG,QAAQzD,IAAa,GAItC,QAAQ0D,KAAK1D,GAIrB,CC3BA,MAAM2D,EAAkB,CAAA,ECGxB,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoB3E,GAAOF,OAAAA,EAAAA,SAAQsB,IACxC,OAAQqD,EAAeT,IAAIhE,IACvBA,EAAI4E,WAAW,YACb9E,QAAuB,IAAbsB,OACLmD,EAAgBvE,IAAgB,YAARA,EACvC,CCRA,MAAM6E,EAAiB9B,GAAUtE,QAAQsE,GAASA,EAAM+B,aCElDC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBZ,EAAmBa,OCRzC,MAAMC,EAAyBC,GAAWvF,GAAuB,iBAARA,GAAoBA,EAAI4E,WAAWW,GACtFC,EAAoBF,EAAsB,MAC1CG,EAAqBH,EAAsB,UCC3CI,EAAiB,CAAC3C,EAAO4C,IACpBA,GAAyB,iBAAV5C,EAChB4C,EAAKC,UAAU7C,GACfA,ECNJ8C,EAAQ,CAACC,EAAKC,EAAKnI,IAAMoI,KAAKF,IAAIE,KAAKD,IAAInI,EAAGkI,GAAMC,GCEpDE,EAAS,CACX3B,KAAO1G,GAAmB,iBAANA,EACpBsI,MAAOC,WACPP,UAAYhI,GAAMA,GAEhBwI,EAAQ,IACPH,EACHL,UAAYhI,GAAMiI,EAAM,EAAG,EAAGjI,IAE5ByI,EAAQ,IACPJ,EACHK,QAAS,GCPPC,EAAY3I,GAAMoI,KAAKQ,MAAU,IAAJ5I,GAAc,IAC3C6I,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,EAAShJ,GACd,MAAoB,iBAANA,CAClB,CCVA,MAAMiJ,EAAkBC,IAAA,CACpBxC,KAAO1G,GAAMgJ,EAAShJ,IAAMA,EAAEmJ,SAASD,IAAiC,IAAxBlJ,EAAEoJ,MAAM,KAAK3B,OAC7Da,MAAOC,WACPP,UAAYhI,GAAM,GAAGA,IAAIkJ,MAEvBG,EAAUJ,EAAe,OACzBK,EAAUL,EAAe,KACzBM,EAAKN,EAAe,MACpBO,EAAKP,EAAe,MACpBQ,GAAKR,EAAe,MACpBS,GAAqB,IACpBJ,EACHhB,MAAQtI,GAAMsJ,EAAQhB,MAAMtI,GAAK,IACjCgI,UAAYhI,GAAMsJ,EAAQtB,UAAc,IAAJhI,ICblC2J,GAAM,IACLtB,EACHL,UAAWI,KAAKQ,OCAdgB,GAAmB,CAErBC,YAAaN,EACbO,eAAgBP,EAChBQ,iBAAkBR,EAClBS,kBAAmBT,EACnBU,gBAAiBV,EACjBW,aAAcX,EACdY,OAAQZ,EACRa,oBAAqBb,EACrBc,qBAAsBd,EACtBe,wBAAyBf,EACzBgB,uBAAwBhB,EAExBiB,MAAOjB,EACPkB,SAAUlB,EACVmB,OAAQnB,EACRoB,UAAWpB,EACXqB,KAAMrB,EACNsB,IAAKtB,EACLuB,MAAOvB,EACPwB,OAAQxB,EACRyB,KAAMzB,EAEN0B,QAAS1B,EACT2B,WAAY3B,EACZ4B,aAAc5B,EACd6B,cAAe7B,EACf8B,YAAa9B,EACb+B,OAAQ/B,EACRgC,UAAWhC,EACXiC,YAAajC,EACbkC,aAAclC,EACdmC,WAAYnC,EAEZoC,OAAQtC,EACRuC,QAASvC,EACTwC,QAASxC,EACTyC,QAASzC,EACTZ,QACAsD,OAAQtD,EACRuD,OAAQvD,EACRwD,OAAQxD,EACRyD,KAAM7C,EACN8C,MAAO9C,EACP+C,MAAO/C,EACPgD,SAAU9C,EACV+C,WAAY/C,EACZgD,WAAYhD,EACZiD,WAAYjD,EACZnC,EAAGmC,EACHlC,EAAGkC,EACHjC,EAAGiC,EACHkD,YAAalD,EACbhC,qBAAsBgC,EACtBmD,QAASlE,EACTmE,QAASjD,GACTkD,QAASlD,GACTmD,QAAStD,EAETuD,OAAQnD,GAERoD,YAAavE,EACbwE,cAAexE,EACfyE,WAAYtD,IC9DhB,SAASuD,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,MAAMC,MAAEA,EAAAC,KAAOA,EAAAxF,UAAMA,EAAAyF,gBAAWA,GAAoBN,EAEpD,IAAIO,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAA,MAAWxL,KAAOgL,EAAc,CAC5B,MAAMjI,EAAQiI,EAAahL,GAI3B,GAAIwF,EAAkBxF,GAAM,CACxBoL,EAAKpL,GAAO+C,EACZ,QACJ,CAEA,MAAM0I,EAAYjE,GAAiBxH,GAC7B0L,EAAchG,EAAe3C,EAAO0I,GAC1C,GAAIhH,EAAeT,IAAIhE,GAAM,CAKzB,GAHAsL,GAAe,EACf1F,EAAU5F,GAAO0L,GAEZF,EACD,SAEAzI,KAAW0I,EAAUnF,SAAW,KAChCkF,GAAkB,EAC1B,MACSxL,EAAI4E,WAAW,WAEpB2G,GAAqB,EACrBF,EAAgBrL,GAAO0L,GAGvBP,EAAMnL,GAAO0L,CAErB,CAiBA,GAhBKV,EAAapF,YACV0F,GAAgBJ,EAChBC,EAAMvF,UTtClB,SAAwBA,GAAW+F,2BAAEA,GAA6B,qBAAMC,GAAqB,GAASC,EAAoBX,GAEtH,IAAIY,EAAkB,GAKtB,IAAA,IAASC,EAAI,EAAGA,EAAI3G,EAAe2G,IAAK,CACpC,MAAM/L,EAAMwE,EAAmBuH,QACR,IAAnBnG,EAAU5F,KAEV8L,GAAmB,GADG/G,EAAe/E,IAAQA,KACN4F,EAAU5F,OAEzD,CAaA,OAZI2L,IAA+B/F,EAAUV,IACzC4G,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9Bd,EACAY,EAAkBZ,EAAkBtF,EAAWiG,EAAqB,GAAKC,GAEpEF,GAAsBC,IAC3BC,EAAkB,QAEfA,CACX,CSW8BG,CAAelB,EAAMnF,UAAWqF,EAASO,EAAiBN,GAEvEC,EAAMvF,YAKXuF,EAAMvF,UAAY,SAOtB2F,EAAoB,CACpB,MAAMhB,QAAEA,EAAU,MAAAC,QAAOA,EAAU,MAAAC,QAAOA,EAAU,GAAOY,EAC3DF,EAAME,gBAAkB,GAAGd,KAAWC,KAAWC,GACrD,CACJ,CCvEA,MAAMyB,GAAwB,KAAA,CAC1Bf,MAAO,CAAA,EACPvF,UAAW,CAAA,EACXyF,gBAAiB,CAAA,EACjBD,KAAM,CAAA,ICEV,SAASe,GAAkBC,EAAQC,EAAQjO,GACvC,IAAA,MAAW4B,KAAOqM,EACTxH,EAAcwH,EAAOrM,KAAU2E,EAAoB3E,EAAK5B,KACzDgO,EAAOpM,GAAOqM,EAAOrM,GAGjC,CAQA,SAASsM,GAASlO,EAAOkD,EAAajF,GAClC,MACM8O,EAAQ,CAAA,EAMd,OAFAgB,GAAkBhB,EALA/M,EAAM+M,OAAS,CAAA,EAKG/M,GACpCb,OAAOgP,OAAOpB,EAdlB,UAAgCD,kBAAEA,GAAqB5J,EAAajF,GAChE,OAAO4C,EAAAA,QAAQ,KACX,MAAM8L,EDfgB,CAC1BI,MAAO,CAAA,EACPvF,UAAW,CAAA,EACXyF,gBAAiB,CAAA,EACjBD,KAAM,CAAA,GCaF,OADAN,GAAgBC,EAAOzJ,EAAa,CAAEqK,4BAA6BtP,GAAY6O,GACxE3N,OAAOgP,OAAO,CAAA,EAAIxB,EAAMK,KAAML,EAAMI,QAC5C,CAAC7J,GACR,CAQyBkL,CAAuBpO,EAAOkD,EAAajF,IACzD+B,EAAMqO,gBAAkBrO,EAAMqO,gBAAgBtB,GAASA,CAClE,CACA,SAASuB,GAAatO,EAAOkD,EAAajF,GAEtC,MAAMsQ,EAAY,CAAA,EACZxB,EAAQmB,GAASlO,EAAOkD,EAAajF,GAoB3C,OAnBI+B,EAAMoB,OAA+B,IAAvBpB,EAAMwO,eAEpBD,EAAUE,WAAY,EAEtB1B,EAAM2B,WACF3B,EAAM4B,iBACF5B,EAAM6B,mBACF,OAEZ7B,EAAM8B,aACa,IAAf7O,EAAMoB,KACA,OACA,QAAsB,MAAfpB,EAAMoB,KAAe,IAAM,WAEzB,IAAnBpB,EAAM8O,WACL9O,EAAM+O,OAAS/O,EAAMgP,YAAchP,EAAMiP,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUxB,MAAQA,EACXwB,CACX,CChDA,MAAMW,OAAuB5I,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAAS6I,GAAkBvN,GACvB,OAAQA,EAAI4E,WAAW,UAClB5E,EAAI4E,WAAW,SAAmB,cAAR5E,GAC3BA,EAAI4E,WAAW,WACf5E,EAAI4E,WAAW,UACf5E,EAAI4E,WAAW,UACf5E,EAAI4E,WAAW,aACf0I,GAAiBtJ,IAAIhE,EAC7B,CCrDA,IAAIwN,GAAiBxN,IAASuN,GAAkBvN,GAoBhD,KAnBiCyN,GAyBLC,QAAQ,0BAA0BpH,WArB1DkH,GAAiBxN,GAAQA,EAAI4E,WAAW,OAAS2I,GAAkBvN,GAAOyN,GAAYzN,GAsB1F,CAAA,MACO2N,IAEP,CA7BA,IAAiCF,GCDjC,SAASG,GAAWC,EAAQC,EAAQtF,GAChC,MAAyB,iBAAXqF,EACRA,EACA1G,EAAGvB,UAAUkI,EAAStF,EAAOqF,EACvC,CCJA,MAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mBCDX,SAASE,GAAcnD,GAAOoD,MAAEA,EAAAC,MAAOA,EAAAC,UAAOA,EAAA9D,QAAWA,EAAAC,QAASA,EAAA8D,WAASA,EAAAC,YAAYA,EAAc,EAAAC,WAAGA,EAAa,KAElHC,GAAUxD,EAASyD,EAAUxD,GAM5B,GALAJ,GAAgBC,EAAO0D,EAAQxD,EAASC,GAKpCwD,EAIA,YAHI3D,EAAMI,MAAMwD,UACZ5D,EAAM6D,MAAMD,QAAU5D,EAAMI,MAAMwD,UAI1C5D,EAAM6D,MAAQ7D,EAAMI,MACpBJ,EAAMI,MAAQ,CAAA,EACd,MAAMyD,MAAEA,EAAAzD,MAAOA,EAAA0D,WAAOA,GAAe9D,EAKjC6D,EAAMhJ,YACFiJ,IACA1D,EAAMvF,UAAYgJ,EAAMhJ,kBACrBgJ,EAAMhJ,WAGbiJ,SACa,IAAZtE,QAAqC,IAAZC,GAAyBW,EAAMvF,aACzDuF,EAAME,gBFzBd,SAAgCwD,EAAYtE,EAASC,GAGjD,MAAO,GAFWoD,GAAWrD,EAASsE,EAAW7J,EAAG6J,EAAWzG,UAC7CwF,GAAWpD,EAASqE,EAAW5J,EAAG4J,EAAWvG,SAEnE,CEqBgCwG,CAAuBD,OAAwB,IAAZtE,EAAwBA,EAAU,QAAiB,IAAZC,EAAwBA,EAAU,UAG1H,IAAV2D,IACAS,EAAM5J,EAAImJ,QACA,IAAVC,IACAQ,EAAM3J,EAAImJ,QACI,IAAdC,IACAO,EAAMvI,MAAQgI,QAEC,IAAfC,GD7BR,SAAsBM,EAAOvJ,EAAQ0J,EAAU,EAAGjB,EAAS,EAAGkB,GAAc,GAExEJ,EAAMN,WAAa,EAGnB,MAAMW,EAAOD,EAAcjB,GAAWE,GAEtCW,EAAMK,EAAKnB,QAAU3G,EAAGvB,WAAWkI,GAEnC,MAAMQ,EAAanH,EAAGvB,UAAUP,GAC1BkJ,EAAcpH,EAAGvB,UAAUmJ,GACjCH,EAAMK,EAAKjB,OAAS,GAAGM,KAAcC,GACzC,CCkBQW,CAAaN,EAAON,EAAYC,EAAaC,GAAY,EAEjE,CC/CA,MAAMW,GAAuB,KAAA,CPDzBhE,MAAO,CAAA,EACPvF,UAAW,CAAA,EACXyF,gBAAiB,CAAA,EACjBD,KAAM,CAAA,EOANwD,MAAO,CAAA,ICJLF,GAAYU,GAAuB,iBAARA,GAA0C,QAAtBA,EAAIjS,cCMzD,SAASkS,GAAYjR,EAAOkD,EAAagO,EAAW1O,GAChD,MAAM2O,EAActQ,EAAAA,QAAQ,KACxB,MAAM8L,EFNe,CPDzBI,MAAO,CAAA,EACPvF,UAAW,CAAA,EACXyF,gBAAiB,CAAA,EACjBD,KAAM,CAAA,EOANwD,MAAO,CAAA,GEMH,OADAV,GAAcnD,EAAOzJ,EAAa,CAAEqK,4BAA4B,GAAS+C,GAAS9N,GAAYxC,EAAM8M,mBAC7F,IACAH,EAAM6D,MACTzD,MAAO,IAAKJ,EAAMI,SAEvB,CAAC7J,IACJ,GAAIlD,EAAM+M,MAAO,CACb,MAAMqE,EAAY,CAAA,EAClBrD,GAAkBqD,EAAWpR,EAAM+M,MAAO/M,GAC1CmR,EAAYpE,MAAQ,IAAKqE,KAAcD,EAAYpE,MACvD,CACA,OAAOoE,CACX,CCdA,SAASE,GAAgBC,GAAqB,GAwB1C,MAvBkB,CAAC9O,EAAWxC,EAAOd,GAAO0N,gBAAgB3O,KACxD,MAGMkT,GAHiBpL,EAAevD,GAChCyO,GACA3C,IAC6BtO,EAAO4M,EAAc3O,EAAUuE,GAC5D+O,EPoBd,SAAqBvR,EAAOwR,EAAOF,GAC/B,MAAMC,EAAgB,CAAA,EACtB,IAAA,MAAW3P,KAAO5B,EAQF,WAAR4B,GAA4C,iBAAjB5B,EAAMyR,SAEjCrC,GAAcxN,KACU,IAAvB0P,GAA+BnC,GAAkBvN,KAChD4P,IAAUrC,GAAkBvN,IAE7B5B,EAAiB,WAAK4B,EAAI4E,WAAW,aACtC+K,EAAc3P,GAAO5B,EAAM4B,IAGnC,OAAO2P,CACX,COzC8BG,CAAY1R,EAA4B,iBAAdwC,EAAwB8O,GAClEK,EAAe,IACdJ,KACAJ,EACHjS,QAOE0S,SAAEA,GAAa5R,EACf6R,EAAmBhR,EAAAA,QAAQ,IAAO4F,EAAcmL,GAAYA,EAASlM,MAAQkM,EAAW,CAACA,IAC/F,OAAOE,EAAAA,cAActP,EAAW,IACzBmP,EACHC,SAAUC,IAItB,CChCA,SAASE,GAAWC,GAASjF,MAAEA,OAAOC,GAAQiF,EAAWC,GACrD/S,OAAOgP,OAAO6D,EAAQjF,MAAOA,EAAOmF,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAA,MAAWrQ,KAAOoL,EACdgF,EAAQjF,MAAMqF,YAAYxQ,EAAKoL,EAAKpL,GAE5C,CCHA,MAAMyQ,OAA0B/L,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASgM,GAAUN,EAASO,EAAaC,EAAYN,GACjDH,GAAWC,EAASO,OAAa,EAAWL,GAC5C,IAAA,MAAWtQ,KAAO2Q,EAAY/B,MAC1BwB,EAAQS,aAAcJ,GAAoBzM,IAAIhE,GAA0BA,EAAnBhD,EAAYgD,GAAY2Q,EAAY/B,MAAM5O,GAEvG,CCNA,SAAS8Q,GAA4B1S,EAAO2S,GACxC,MAAM5F,MAAEA,GAAU/M,EACZ4S,EAAY,CAAA,EAClB,IAAA,MAAWhR,KAAOmL,GACVtG,EAAcsG,EAAMnL,KACnB+Q,EAAU5F,OAAStG,EAAckM,EAAU5F,MAAMnL,KAClD2E,EAAoB3E,EAAK5B,MACzB4S,EAAUhR,GAAOmL,EAAMnL,IAG/B,OAAOgR,CACX,CCVA,SAASF,GAA4B1S,EAAO2S,GACxC,MAAMC,EAAYC,GAA8B7S,EAAO2S,GACvD,IAAA,MAAW/Q,KAAO5B,EACd,GAAIyG,EAAczG,EAAM4B,KAAS6E,EAAckM,EAAU/Q,IAAO,CAI5DgR,OAHkBxM,EAAmBH,QAAQrE,GACvC,OAASA,EAAIkR,OAAO,GAAGC,cAAgBnR,EAAIoR,UAAU,GACrDpR,GACiB5B,EAAM4B,EACjC,CAEJ,OAAOgR,CACX,CCfA,SAASK,GAAwBjT,EAAOkT,EAAY7N,EAAQ8N,EAAgB,CAAA,EAAIC,EAAkB,IAsB9F,MAlB0B,mBAAfF,IACPA,EAAaA,OAAsB,IAAX7N,EAAuBA,EAASrF,EAAMqF,OAAQ8N,EAAeC,IAM/D,iBAAfF,IACPA,EAAalT,EAAMM,UAAYN,EAAMM,SAAS4S,IAOxB,mBAAfA,IACPA,EAAaA,OAAsB,IAAX7N,EAAuBA,EAASrF,EAAMqF,OAAQ8N,EAAeC,IAElFF,CACX,CCdA,SAASG,GAAYC,GACjB,MAAMpU,EAAMuE,EAAAA,OAAO,MAInB,OAHoB,OAAhBvE,EAAIyE,UACJzE,EAAIyE,QAAU2P,KAEXpU,EAAIyE,OACf,CCfA,MAAM4P,GAAqB/T,GAChBC,MAAMC,QAAQF,GCInBgU,GAAgChU,GAE3B+T,GAAkB/T,GAAKA,EAAEA,EAAEyH,OAAS,IAAM,EAAIzH,ECCzD,SAASiU,GAAmB9O,GACxB,MAAM+O,EAAiBjN,EAAc9B,GAASA,EAAMe,MAAQf,EAC5D,ODRmBnF,ECQEkU,EDPdrT,QAAQb,GAAkB,iBAANA,GAAkBA,EAAEmU,KAAOnU,EAAEoU,SCQlDF,EAAeE,UACfF,EDVY,IAAClU,CCWvB,CCMA,MAAMqU,GAAsBC,GAAW,CAAC9T,EAAO/B,KAC3C,MAAMwC,EAAUG,EAAAA,WAAWzC,GACrBmF,EAAkB1C,EAAAA,WAAWxC,GAC7B2V,EAAO,IAbjB,UAAqBrB,4BAAAA,EAAAA,kBAA6BsB,UAAmBC,GAAYjU,EAAOS,EAAS6C,GAC7F,MAAMqJ,EAAQ,CACVC,aAAcsH,GAAiBlU,EAAOS,EAAS6C,EAAiBoP,GAChEH,YAAayB,KAKjB,OAHIC,IACAtH,EAAM7H,MAASD,GAAaoP,EAAQjU,EAAO6E,EAAU8H,IAElDA,CACX,CAIuBwH,CAAUL,EAAQ9T,EAAOS,EAAS6C,GACrD,OAAOrF,EAAW8V,IAASV,GAAYU,IAE3C,SAASG,GAAiBlU,EAAOS,EAAS6C,EAAiB8Q,GACvD,MAAM3C,EAAS,CAAA,EACT4C,EAAeD,EAAmBpU,EAAO,IAC/C,IAAA,MAAW4B,KAAOyS,EACd5C,EAAO7P,GAAO6R,GAAmBY,EAAazS,IAElD,IAAIpB,QAAEA,EAAAP,QAASA,GAAYD,EAC3B,MAAMsU,EAA0BvU,EAAsBC,GAChDuU,EAAkBnU,EAAcJ,GAClCS,GACA8T,IACCD,IACiB,IAAlBtU,EAAMU,eACU,IAAZF,IACAA,EAAUC,EAAQD,cACN,IAAZP,IACAA,EAAUQ,EAAQR,UAE1B,IAAIuU,IAA4BlR,IACE,IAA5BA,EAAgB9C,QAEtBgU,EAA4BA,IAAyC,IAAZhU,EACzD,MAAMiU,EAAeD,EAA4BvU,EAAUO,EAC3D,GAAIiU,GACwB,kBAAjBA,IACN9U,EAAoB8U,GAAe,EACvBhV,MAAMC,QAAQ+U,GAAgBA,EAAe,CAACA,IACtDC,QAASxB,IACV,MAAMyB,EAAW1B,GAAwBjT,EAAOkT,GAChD,IAAKyB,EACD,OACJ,MAAMC,cAAEA,EAAAC,WAAeA,KAAe7G,GAAW2G,EACjD,IAAA,MAAW/S,KAAOoM,EAAQ,CACtB,IAAI8G,EAAc9G,EAAOpM,GACzB,GAAInC,MAAMC,QAAQoV,GAAc,CAQ5BA,EAAcA,EAHAN,EACRM,EAAY7N,OAAS,EACrB,EAEV,CACoB,OAAhB6N,IACArD,EAAO7P,GAAOkT,EAEtB,CACA,IAAA,MAAWlT,KAAOgT,EACdnD,EAAO7P,GAAOgT,EAAchT,IAExC,CACA,OAAO6P,CACX,CC9EA,MAAMsD,GAAQC,GAAQA,ECAtB,MAAMC,GACF,WAAAC,GACIC,KAAKC,MAAQ,GACbD,KAAKE,cAAgB/O,GACzB,CACA,GAAAgP,CAAIC,GACA,IAAKJ,KAAKE,UAAUzP,IAAI2P,GAGpB,OAFAJ,KAAKE,UAAUC,IAAIC,GACnBJ,KAAKC,MAAMI,KAAKD,IACT,CAEf,CACA,MAAAE,CAAOF,GACH,MAAMG,EAAQP,KAAKC,MAAMnP,QAAQsP,IACnB,IAAVG,IACAP,KAAKC,MAAMO,OAAOD,EAAO,GACzBP,KAAKE,UAAUO,OAAOL,GAE9B,CACA,KAAAM,GACIV,KAAKC,MAAMnO,OAAS,EACpBkO,KAAKE,UAAUQ,OACnB,ECpBJ,MAAMC,GAAa,CACf,UACA,OACA,SACA,YACA,SACA,cCLJ,MAAQC,SAAUC,GAAOC,OAAQC,GAAavJ,MAAOwJ,GAAAC,MAAWA,IDQhE,SAA6BC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAM7J,EAAQ,CACV8J,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZP,EAAQN,GAAWc,OAAO,CAACC,EAAKjV,KAClCiV,EAAIjV,GDIZ,SAA0B2U,GAKtB,IAAIO,EAAY,IAAI7B,GAChB8B,EAAY,IAAI9B,GAChB+B,EAAW,EAKXL,GAAe,EACfM,GAAiB,EAIrB,MAAMC,MAAkBC,QAClBC,EAAO,CAITrB,SAAU,CAACsB,EAAUC,GAAY,EAAOC,GAAY,KAChD,MAAMC,EAAoBD,GAAaZ,EACjCc,EAAQD,EAAoBV,EAAYC,EAO9C,OANIO,GACAJ,EAAY5B,IAAI+B,GAChBI,EAAMnC,IAAI+B,IAAaG,GAAqBb,IAE5CK,EAAWF,EAAU1B,MAAMnO,QAExBoQ,GAKXpB,OAASoB,IACLN,EAAUtB,OAAO4B,GACjBH,EAAYtB,OAAOyB,IAKvB9B,QAAUY,IAMN,GAAIQ,EACAM,GAAiB,MADrB,CAUA,GANAN,GAAe,GACdG,EAAWC,GAAa,CAACA,EAAWD,GAErCC,EAAUlB,QAEVmB,EAAWF,EAAU1B,MAAMnO,OACvB+P,EACA,IAAA,IAASrJ,EAAI,EAAGA,EAAIqJ,EAAUrJ,IAAK,CAC/B,MAAM0J,EAAWP,EAAU1B,MAAMzH,GACjC0J,EAASlB,GACLe,EAAYtR,IAAIyR,KAChBD,EAAKrB,SAASsB,GACdd,IAER,CAEJI,GAAe,EACXM,IACAA,GAAiB,EACjBG,EAAK7B,QAAQY,GApBjB,IAwBR,OAAOiB,CACX,CCjFmBM,CAAiB,IAAOnB,GAAe,GAC3CM,GACR,CAAA,GACGc,EAAeC,GAAWxB,EAAMwB,GAAQrC,QAAQ5I,GAChDkL,EAAe,KACjB,MAAMnB,EAAYoB,YAAYC,MAC9BxB,GAAe,EACf5J,EAAM8J,MAAQD,EACR,IAAO,GACP5O,KAAKD,IAAIC,KAAKF,IAAIgP,EAAY/J,EAAM+J,UAnB/B,IAmBuD,GAClE/J,EAAM+J,UAAYA,EAClB/J,EAAMgK,cAAe,EACrBb,GAAWpB,QAAQiD,GACnBhL,EAAMgK,cAAe,EACjBJ,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBwB,KAoB1B,MAAO,CAAE9B,SAVQD,GAAWc,OAAO,CAACC,EAAKjV,KACrC,MAAMwV,EAAOhB,EAAMxU,GAMnB,OALAiV,EAAIjV,GAAO,CAAC2T,EAAS+B,GAAY,EAAOC,GAAY,KAC3ChB,IATTA,GAAe,EACfC,GAAoB,EACf7J,EAAMgK,cACPN,EAAkBwB,IAQXT,EAAKrB,SAASR,EAAS+B,EAAWC,IAEtCV,GACR,CAAA,GAEgBZ,OADHV,GAAYO,GAAWpB,QAAS9S,GAAQwU,EAAMxU,GAAKqU,OAAOV,IAC/C5I,QAAOyJ,MAAAA,EACtC,CCtD2E4B,CAAqD,oBAA1BC,sBAAwCA,sBAAwBlD,IAAM,GCKtKmD,GAAkB,CACpB3V,eAAgBsR,GAAmB,CAC/BnB,+BACAsB,kBAAmBjD,GACnBkD,QAAS,CAACjU,EAAO6E,GAAY0N,cAAa3F,mBACtCoJ,GAAMmC,KAAK,KACP,IACI5F,EAAY9B,WAEJ,mBADG5L,EAASuT,QAEVvT,EAASuT,UACTvT,EAASwT,uBACvB,OACOC,GAEH/F,EAAY9B,WAAa,CACrB7J,EAAG,EACHC,EAAG,EACHmD,MAAO,EACPE,OAAQ,EAEhB,IAEJ8L,GAAM9R,OAAO,KACT4L,GAAcyC,EAAa3F,EAAc,CAAEW,4BAA4B,GAAS+C,GAASzL,EAAS0T,SAAUvY,EAAM8M,mBAClHwF,GAAUzN,EAAU0N,SC7B9BiG,GAAmB,CACrBjW,eAAgBsR,GAAmB,CACvCnB,4BAAQA,GACAsB,kBAAmBlG,MCP3B,SAAS2K,GAAYzK,EAAQ0K,EAAWC,EAAS9L,EAAU,CAAE+L,SAAS,IAElE,OADA5K,EAAO6K,iBAAiBH,EAAWC,EAAS9L,GACrC,IAAMmB,EAAO8K,oBAAoBJ,EAAWC,EACvD,CCHA,MAAMI,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,iBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,EAAOK,EAAY,QACzC,MAAO,CACHC,MAAO,CACH1S,EAAGoS,EAAMK,EAAY,KACrBxS,EAAGmS,EAAMK,EAAY,MAGjC,CCNA,SAASE,GAAgBvL,EAAQ0K,EAAWC,EAAS9L,GACjD,OAAO4L,GAAYzK,EAAQ0K,EDMR,CAACC,GACZK,GAAUD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,ICPvCQ,CAAeb,GAAU9L,EACnE,CCEA,MAAM4M,GAAmB,CAACC,EAAGC,IAAOna,GAAMma,EAAED,EAAEla,IACxCoa,GAAO,IAAIC,IAAiBA,EAAajD,OAAO6C,ICRtD,SAASK,GAAW3Z,GAChB,IAAI4Z,EAAO,KACX,MAAO,KACH,MAAMC,EAAW,KACbD,EAAO,MAEX,OAAa,OAATA,IACAA,EAAO5Z,EACA6Z,GAInB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAc/Y,GACnB,IAAI2Y,GAAO,EACX,GAAa,MAAT3Y,EACA2Y,EAAOG,UACX,GACkB,MAAT9Y,EACL2Y,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAO,KACHK,IACAC,MAKAD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CClDA,MAAMC,GACF,WAAAtF,CAAYuF,GACRtF,KAAKuF,WAAY,EACjBvF,KAAKsF,KAAOA,CAChB,CACA,MAAA3W,GAAW,ECCf,SAAS6W,GAAcF,EAAMG,GACzB,MAAMlC,EAAY,WAAakC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOrB,GAAgBkB,EAAK9W,QAAS+U,EAXjB,CAACM,EAAO8B,KACxB,GAA0B,UAAtB9B,EAAMC,aAA2BqB,KACjC,OACJ,MAAMta,EAAQya,EAAKM,WACfN,EAAKtW,gBAAkBnE,EAAMgb,YAC7BP,EAAKtW,eAAe8W,UAAU,aAAcL,GAE5C5a,EAAM6a,IACN7E,GAAMlS,OAAO,IAAM9D,EAAM6a,GAAc7B,EAAO8B,KAGO,CACzDlC,SAAU6B,EAAKM,WAAWF,IAElC,CChBA,MAAMK,GAAgB,CAAC9X,EAAQ+X,MACtBA,IAGI/X,IAAW+X,GAITD,GAAc9X,EAAQ+X,EAAMC,gBCL3C,SAASC,GAA0Blb,EAAMwY,GACrC,IAAKA,EACD,OACJ,MAAM2C,EAAwB,IAAIC,aAAa,UAAYpb,GAC3DwY,EAAQ2C,EAAuBlC,GAAiBkC,GACpD,CCVA,MAAME,OAAwBC,QAMxBC,OAAgBD,QAChBE,GAAwBC,IAC1B,MAAMvE,EAAWmE,GAAkB9V,IAAIkW,EAAM5N,QAC7CqJ,GAAYA,EAASuE,IAEnBC,GAA4BC,IAC9BA,EAAQpH,QAAQiH,KAqBpB,SAASI,GAAoB/J,EAASnF,EAASwK,GAC3C,MAAM2E,EApBV,UAAkCC,KAAEA,KAASpP,IACzC,MAAMqP,EAAaD,GAAQ3d,SAItBod,GAAU9V,IAAIsW,IACfR,GAAU7V,IAAIqW,EAAY,IAE9B,MAAMC,EAAgBT,GAAUhW,IAAIwW,GAC9Bta,EAAMwa,KAAKC,UAAUxP,GAQ3B,OAHKsP,EAAcva,KACfua,EAAcva,GAAO,IAAI0a,qBAAqBT,GAA0B,CAAEI,UAASpP,KAEhFsP,EAAcva,EACzB,CAEsC2a,CAAyB1P,GAG3D,OAFA2O,GAAkB3V,IAAImM,EAASqF,GAC/B2E,EAA0BQ,QAAQxK,GAC3B,KACHwJ,GAAkB5F,OAAO5D,GACzBgK,EAA0BS,UAAUzK,GAE5C,CC3CA,MAAM0K,GAAiB,CACnBxc,KAAM,EACNyc,IAAK,GCAT,MAAMC,GAAoB,CACtBnb,OAAQ,CACJ+Y,QDAR,cAA4BA,GACxB,WAAAtF,GACI2H,SAASC,WACT3H,KAAK4H,gBAAiB,EACtB5H,KAAK6H,UAAW,CACpB,CACA,aAAAC,GACI9H,KAAKpQ,UACL,MAAMmY,SAAEA,EAAW,CAAA,GAAO/H,KAAKsF,KAAKM,YAC9BkB,KAAEA,EAAMnR,OAAQqS,SAAYC,EAAS,OAAAC,KAAQA,GAASH,EACtDrQ,EAAU,CACZoP,KAAMA,EAAOA,EAAKtY,aAAU,EAC5BwZ,aACAG,UAA6B,iBAAXF,EAAsBA,EAASV,GAAeU,IA+BpE,OAAOrB,GAAoB5G,KAAKsF,KAAK9W,QAASkJ,EA7BhB+O,IAC1B,MAAM2B,eAAEA,GAAmB3B,EAI3B,GAAIzG,KAAK6H,WAAaO,EAClB,OAMJ,GALApI,KAAK6H,SAAWO,EAKZF,IAASE,GAAkBpI,KAAK4H,eAChC,OAEKQ,IACLpI,KAAK4H,gBAAiB,GAEtB5H,KAAKsF,KAAKtW,gBACVgR,KAAKsF,KAAKtW,eAAe8W,UAAU,cAAesC,GAMtD,MAAMC,gBAAEA,EAAAC,gBAAiBA,GAAoBtI,KAAKsF,KAAKM,WACjD1D,EAAWkG,EAAiBC,EAAkBC,EACpDpG,GAAYA,EAASuE,IAG7B,CACA,KAAA9W,GACIqQ,KAAK8H,eACT,CACA,MAAAnZ,GACI,GAAoC,oBAAzBwY,qBACP,OACJ,MAAMtc,MAAEA,EAAA2S,UAAOA,GAAcwC,KAAKsF,KACR,CAAC,SAAU,SAAU,QAAQva,KAO/D,UAAkCgd,SAAEA,EAAW,KAAQA,SAAUQ,EAAe,IAAO,IACnF,OAAQvd,GAAS+c,EAAS/c,KAAUud,EAAavd,EACrD,CAToEwd,CAAyB3d,EAAO2S,KAExFwC,KAAK8H,eAEb,CACA,OAAAlY,GAAY,ICxDZxD,IAAK,CACDiZ,QHMR,cAA2BA,GACvB,WAAAtF,GACI2H,SAASC,WACT3H,KAAKyI,qBAAuB7I,GAC5BI,KAAK0I,mBAAqB9I,GAC1BI,KAAK2I,0BAA4B/I,GACjCI,KAAK4I,kBAAoB,CAACC,EAAYC,KAClC,GAAI9I,KAAK+I,WACL,OACJ/I,KAAK0I,qBACL,MAAM7d,EAAQmV,KAAKsF,KAAKM,WAgBlBoD,EAA0B5E,GAAgBvV,OAAQ,YAfhC,CAACoa,EAAUC,KAC/B,IAAKlJ,KAAKmJ,gBACN,OACJ,MAAMvP,MAAEA,EAAAwP,YAAOA,EAAAC,gBAAaA,GAAoBrJ,KAAKsF,KAAKM,WAC1D/E,GAAMlS,OAAO,KAKR0a,GACItD,GAAc/F,KAAKsF,KAAK9W,QAASya,EAASpQ,QAEzCe,GAASA,EAAMqP,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,MAImC,CAAEzF,UAAW5Y,EAAM+O,OAAS/O,EAAmB,eAC/Hye,EAA8BlF,GAAgBvV,OAAQ,gBAAiB,CAAC0a,EAAaC,IAAexJ,KAAKyJ,YAAYF,EAAaC,GAAa,CAAE/F,UAAW5Y,EAAMue,aAAeve,EAAuB,mBAC9MmV,KAAK0I,mBAAqBjE,GAAKuE,EAAyBM,GACxDtJ,KAAK0J,WAAWb,EAAYC,IAEhC9I,KAAK2J,qBAAuB,KACxB,MAmBMC,EAAwBtG,GAAYtD,KAAKsF,KAAK9W,QAAS,UAnBtCqb,IACnB,GAAyB,UAArBA,EAAapd,KAAmBuT,KAAK+I,WACrC,OAWJ/I,KAAK0I,qBACL1I,KAAK0I,mBAAqBpF,GAAYtD,KAAKsF,KAAK9W,QAAS,QAXpCsb,IACM,UAAnBA,EAAWrd,KAAoBuT,KAAKmJ,iBAExCjD,GAA0B,KAAM,CAACrC,EAAO8B,KACpC,MAAM/L,MAAEA,GAAUoG,KAAKsF,KAAKM,WACxBhM,GACAiH,GAAMlS,OAAO,IAAMiL,EAAMiK,EAAO8B,QAM5CO,GAA0B,OAAQ,CAACrC,EAAO8B,KACtC3F,KAAK0J,WAAW7F,EAAO8B,OASzBoE,EAAqBzG,GAAYtD,KAAKsF,KAAK9W,QAAS,OALvC,KACVwR,KAAK+I,YAEV7C,GAA0B,SAAU,CAACqD,EAAaC,IAAexJ,KAAKyJ,YAAYF,EAAaC,MAGnGxJ,KAAK2I,0BAA4BlE,GAAKmF,EAAuBG,GAErE,CACA,UAAAL,CAAW7F,EAAO8B,GACd3F,KAAK+I,YAAa,EAClB,MAAMlP,WAAEA,EAAAC,SAAYA,GAAakG,KAAKsF,KAAKM,WAIvC9L,GAAYkG,KAAKsF,KAAKtW,gBACtBgR,KAAKsF,KAAKtW,eAAe8W,UAAU,YAAY,GAE/CjM,GACAgH,GAAMlS,OAAO,IAAMkL,EAAWgK,EAAO8B,GAE7C,CACA,aAAAwD,GACInJ,KAAK0I,qBACL1I,KAAK+I,YAAa,EAKlB,OAJc/I,KAAKsF,KAAKM,WACd9L,UAAYkG,KAAKsF,KAAKtW,gBAC5BgR,KAAKsF,KAAKtW,eAAe8W,UAAU,YAAY,IAE3CX,IACZ,CACA,WAAAsE,CAAY5F,EAAO8B,GACf,IAAK3F,KAAKmJ,gBACN,OACJ,MAAMC,YAAEA,GAAgBpJ,KAAKsF,KAAKM,WAC9BwD,GACAvI,GAAMlS,OAAO,IAAMya,EAAYvF,EAAO8B,GAE9C,CACA,KAAAhW,GACI,MAAM9E,EAAQmV,KAAKsF,KAAKM,WAClBoE,EAAwB5F,GAAgBvZ,EAAMwe,gBAAkBxa,OAASmR,KAAKsF,KAAK9W,QAAS,cAAewR,KAAK4I,kBAAmB,CAAEnF,UAAW5Y,EAAMgP,YAAchP,EAAsB,kBAC1Lof,EAAsB3G,GAAYtD,KAAKsF,KAAK9W,QAAS,QAASwR,KAAK2J,sBACzE3J,KAAKyI,qBAAuBhE,GAAKuF,EAAuBC,EAC5D,CACA,OAAAra,GACIoQ,KAAKyI,uBACLzI,KAAK0I,qBACL1I,KAAK2I,2BACT,IGzGAzc,MAAO,CACHmZ,QCTR,cAA2BA,GACvB,WAAAtF,GACI2H,SAASC,WACT3H,KAAKyF,UAAW,CACpB,CACA,OAAAyE,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBnK,KAAKsF,KAAK9W,QAAQ4b,QAAQ,iBAC/C,OACOjH,GACHgH,GAAiB,CACrB,CACKA,GAAmBnK,KAAKsF,KAAKtW,iBAElCgR,KAAKsF,KAAKtW,eAAe8W,UAAU,cAAc,GACjD9F,KAAKyF,UAAW,EACpB,CACA,MAAA4E,GACSrK,KAAKyF,UAAazF,KAAKsF,KAAKtW,iBAEjCgR,KAAKsF,KAAKtW,eAAe8W,UAAU,cAAc,GACjD9F,KAAKyF,UAAW,EACpB,CACA,KAAA9V,GACIqQ,KAAKpQ,QAAU6U,GAAKnB,GAAYtD,KAAKsF,KAAK9W,QAAS,QAAS,IAAMwR,KAAKkK,WAAY5G,GAAYtD,KAAKsF,KAAK9W,QAAS,OAAQ,IAAMwR,KAAKqK,UACzI,CACA,OAAAza,GAAY,IDtBZzD,MAAO,CACHkZ,QLQR,cAA2BA,GACvB,KAAA1V,GACIqQ,KAAKpQ,QAAU6U,GAAKe,GAAcxF,KAAKsF,MAAM,GAAOE,GAAcxF,KAAKsF,MAAM,GACjF,CACA,OAAA1V,GAAY,KO5BhB,SAAS0a,GAAeC,EAAMC,GAC1B,IAAKlgB,MAAMC,QAAQigB,GACf,OAAO,EACX,MAAMC,EAAaD,EAAK1Y,OACxB,GAAI2Y,IAAeF,EAAKzY,OACpB,OAAO,EACX,IAAA,IAAS0G,EAAI,EAAGA,EAAIiS,EAAYjS,IAC5B,GAAIgS,EAAKhS,KAAO+R,EAAK/R,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAASkS,GAAe1c,EAAe+P,EAAY7N,GAC/C,MAAMrF,EAAQmD,EAAc4X,WAC5B,OAAO9H,GAAwBjT,EAAOkT,OAAuB,IAAX7N,EAAuBA,EAASrF,EAAMqF,OAf5F,SAAoBlC,GAChB,MAAMQ,EAAU,CAAA,EAEhB,OADAR,EAAcsO,OAAOiD,QAAQ,CAAC/P,EAAO/C,IAAS+B,EAAQ/B,GAAO+C,EAAMe,OAC5D/B,CACX,CAWoGmc,CAAW3c,GAP/G,SAAqBA,GACjB,MAAM4c,EAAW,CAAA,EAEjB,OADA5c,EAAcsO,OAAOiD,QAAQ,CAAC/P,EAAO/C,IAASme,EAASne,GAAO+C,EAAM+B,eAC7DqZ,CACX,CAG+HrZ,CAAYvD,GAC3I,CClBA,IAAI6c,GAAYjL,GCGhB,MAAMkL,GAAyBC,GAAsB,IAAVA,EACrCC,GAAyBC,GAAiBA,EAAe,ICPzDC,IACO,ECDPC,GAAsBC,GAAW9gB,MAAMC,QAAQ6gB,IAAgC,iBAAdA,EAAO,GCE9E,SAASC,GAAuBD,GAC5B,OAAOlgB,SAASkgB,GACO,iBAAXA,GAAuBE,GAAqBF,IACpDD,GAAmBC,IAClB9gB,MAAMC,QAAQ6gB,IAAWA,EAAOG,MAAMF,IAC/C,CACA,MAAMG,GAAsB,EAAEjH,EAAGC,EAAGiH,EAAGC,KAAO,gBAAgBnH,MAAMC,MAAMiH,MAAMC,KAC1EJ,GAAuB,CACzBK,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQR,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CS,QAAST,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CU,OAAQV,GAAoB,CAAC,IAAM,IAAM,WACzCW,QAASX,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASY,GAAwBhB,GAC7B,GAAKA,EAEL,OAAOD,GAAmBC,GACpBI,GAAoBJ,GACpB9gB,MAAMC,QAAQ6gB,GACVA,EAAOiB,IAAID,IACXd,GAAqBF,EACnC,CCRA,MAAMkB,GAAa,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EAoBJ,SAASG,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOlN,GACX,MAAMmN,EAAYC,GArBtB,SAAyBvb,EAAGwb,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACA5U,EAAI,EACR,GACI4U,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWb,GAAWc,EAAUT,EAAKE,GAAOpb,EACxC0b,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZ3a,KAAK4a,IAAIF,GAfO,QAgBnB3U,EAfuB,IAgB7B,OAAO4U,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQN,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWS,EAASR,GAAIK,EAAKE,EACxE,CC9CA,MAAMjB,GAASa,GAAY,IAAM,EAAG,EAAG,GACjCZ,GAAUY,GAAY,EAAG,EAAG,IAAM,GAClCX,GAAYW,GAAY,IAAM,EAAG,IAAM,GCFvCa,GAAgBnC,GAAYviB,GAAMA,GAAK,GAAMuiB,EAAO,EAAIviB,GAAK,GAAK,EAAIuiB,EAAO,GAAK,EAAIviB,KAAO,ECA7F2kB,GAAiBpC,GAAYviB,GAAM,EAAIuiB,EAAO,EAAIviB,GCClDmjB,GAAUnjB,GAAM,EAAI4J,KAAKgb,IAAIhb,KAAKib,KAAK7kB,IACvCojB,GAAUuB,GAAcxB,IACxB2B,GAAYJ,GAAavB,ICDzBG,GAAUO,GAAY,IAAM,KAAM,IAAM,KACxCR,GAASsB,GAAcrB,IACvByB,GAAYL,GAAarB,ICEzB2B,GAAe,CACjBlC,OAAQ/L,GACRiM,UACAE,aACAD,WACAE,UACA2B,aACA1B,WACAC,UACA0B,aACAzB,WACA2B,WCjBgBjlB,IAAOA,GAAK,GAAK,EAAI,GAAMqjB,GAAOrjB,GAAK,IAAO,EAAI4J,KAAKsb,IAAI,GAAG,IAAOllB,EAAI,MDmBvFmlB,GAA8BjQ,IAChC,GAAIzT,MAAMC,QAAQwT,GAAa,CAE3B8M,GAAgC,IAAtB9M,EAAWjM,QACrB,MAAOmc,EAAIC,EAAIC,EAAIC,GAAMrQ,EACzB,OAAO2O,GAAYuB,EAAIC,EAAIC,EAAIC,EACnC,CAAA,MAC+B,iBAAfrQ,EAGL8P,GAAa9P,GAEjBA,GE3BLsQ,GAAgB,CAACjc,EAAMkc,IAAcjkB,GAChCa,QAASmI,EAAShJ,IAAM+I,EAAiBrC,KAAK1G,IAAMA,EAAEgH,WAAWe,IACnEkc,GAAYtkB,OAAOC,UAAUC,eAAeC,KAAKE,EAAGikB,IAEvDC,GAAa,CAACC,EAAOC,EAAOC,IAAWrkB,IACzC,IAAKgJ,EAAShJ,GACV,OAAOA,EACX,MAAOka,EAAGC,EAAGiH,EAAG5Y,GAASxI,EAAEskB,MAAMzb,GACjC,MAAO,CACHsb,CAACA,GAAQ5b,WAAW2R,GACpBkK,CAACA,GAAQ7b,WAAW4R,GACpBkK,CAACA,GAAQ9b,WAAW6Y,GACpB5Y,WAAiB,IAAVA,EAAsBD,WAAWC,GAAS,ICZnD+b,GAAU,IACTlc,EACHL,UAAYhI,GAAMoI,KAAKQ,MAHN,CAAC5I,GAAMiI,EAAM,EAAG,IAAKjI,GAGTwkB,CAAaxkB,KAExCykB,GAAO,CACT/d,KAAMsd,GAAc,MAAO,OAC3B1b,MAAO4b,GAAW,MAAO,QAAS,QAClClc,UAAW,EAAG0c,MAAKC,QAAOC,OAAMpc,MAAOqc,EAAU,KAAQ,QACrDN,GAAQvc,UAAU0c,GAClB,KACAH,GAAQvc,UAAU2c,GAClB,KACAJ,GAAQvc,UAAU4c,GAClB,KACAjc,EAASH,EAAMR,UAAU6c,IACzB,KCYR,MAAMC,GAAM,CACRpe,KAAMsd,GAAc,KACpB1b,MAhCJ,SAAkBtI,GACd,IAAI+kB,EAAI,GACJC,EAAI,GACJ7K,EAAI,GACJD,EAAI,GAmBR,OAjBIla,EAAEyH,OAAS,GACXsd,EAAI/kB,EAAEwT,UAAU,EAAG,GACnBwR,EAAIhlB,EAAEwT,UAAU,EAAG,GACnB2G,EAAIna,EAAEwT,UAAU,EAAG,GACnB0G,EAAIla,EAAEwT,UAAU,EAAG,KAInBuR,EAAI/kB,EAAEwT,UAAU,EAAG,GACnBwR,EAAIhlB,EAAEwT,UAAU,EAAG,GACnB2G,EAAIna,EAAEwT,UAAU,EAAG,GACnB0G,EAAIla,EAAEwT,UAAU,EAAG,GACnBuR,GAAKA,EACLC,GAAKA,EACL7K,GAAKA,EACLD,GAAKA,GAEF,CACHwK,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAAS9K,EAAG,IAClB3R,MAAO0R,EAAI+K,SAAS/K,EAAG,IAAM,IAAM,EAE3C,EAIIlS,UAAWyc,GAAKzc,WC/Bdkd,GAAO,CACTxe,KAAMsd,GAAc,MAAO,OAC3B1b,MAAO4b,GAAW,MAAO,aAAc,aACvClc,UAAW,EAAGmd,MAAKC,aAAYC,YAAW7c,MAAOqc,EAAU,KAC/C,QACJzc,KAAKQ,MAAMuc,GACX,KACA7b,EAAQtB,UAAUW,EAASyc,IAC3B,KACA9b,EAAQtB,UAAUW,EAAS0c,IAC3B,KACA1c,EAASH,EAAMR,UAAU6c,IACzB,KCZNS,GAAQ,CACV5e,KAAO1G,GAAMykB,GAAK/d,KAAK1G,IAAM8kB,GAAIpe,KAAK1G,IAAMklB,GAAKxe,KAAK1G,GACtDsI,MAAQtI,GACAykB,GAAK/d,KAAK1G,GACHykB,GAAKnc,MAAMtI,GAEbklB,GAAKxe,KAAK1G,GACRklB,GAAK5c,MAAMtI,GAGX8kB,GAAIxc,MAAMtI,GAGzBgI,UAAYhI,GACDgJ,EAAShJ,GACVA,EACAA,EAAEH,eAAe,OACb4kB,GAAKzc,UAAUhI,GACfklB,GAAKld,UAAUhI,ICF3BmU,GAAM,CAACoR,EAAMC,EAAIC,KAAcA,EAAWF,EAAOE,EAAWD,EAAKD,ECpBvE,SAASG,GAASlnB,EAAGmnB,EAAGzD,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACD1jB,EAAc,GAATmnB,EAAInnB,GAAS0jB,EACzBA,EAAI,GACGyD,EACPzD,EAAI,EAAI,EACD1jB,GAAKmnB,EAAInnB,IAAM,EAAI,EAAI0jB,GAAK,EAChC1jB,CACX,CCHA,MAAMonB,GAAiB,CAACL,EAAMC,EAAIxlB,KAC9B,MAAM6lB,EAAWN,EAAOA,EACxB,OAAOnd,KAAK0d,KAAK1d,KAAKD,IAAI,EAAGnI,GAAKwlB,EAAKA,EAAKK,GAAYA,KAEtDE,GAAa,CAACjB,GAAKL,GAAMS,IAE/B,SAASc,GAAOV,GACZ,MAAMvd,GAFY/H,EAEQslB,EAFFS,GAAWE,KAAMle,GAASA,EAAKrB,KAAK1G,KAA3C,IAACA,EAIlB,IAAIkmB,EAAQne,EAAKO,MAAMgd,GAKvB,OAJIvd,IAASmd,KAETgB,EDRR,UAAoBf,IAAEA,EAAAC,WAAKA,YAAYC,EAAW7c,MAAAA,IAC9C2c,GAAO,IAEPE,GAAa,IACb,IAAIX,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAQ,GAAc,IAQT,CACD,MAAMO,EAAIN,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC5mB,EAAI,EAAI6mB,EAAYM,EAC1BjB,EAAMgB,GAASlnB,EAAGmnB,EAAGR,EAAM,EAAI,GAC/BR,EAAQe,GAASlnB,EAAGmnB,EAAGR,GACvBP,EAAOc,GAASlnB,EAAGmnB,EAAGR,EAAM,EAAI,EACpC,MAVIT,EAAMC,EAAQC,EAAOS,EAWzB,MAAO,CACHX,IAAKtc,KAAKQ,MAAY,IAAN8b,GAChBC,MAAOvc,KAAKQ,MAAc,IAAR+b,GAClBC,KAAMxc,KAAKQ,MAAa,IAAPgc,GACjBpc,MAAAA,EAER,CCjBgB2d,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAW,CAACb,EAAMC,KACpB,MAAMa,EAAWL,GAAOT,GAClBe,EAASN,GAAOR,GAChBe,EAAU,IAAKF,GACrB,OAAQrmB,IACJumB,EAAQ7B,IAAMkB,GAAeS,EAAS3B,IAAK4B,EAAO5B,IAAK1kB,GACvDumB,EAAQ5B,MAAQiB,GAAeS,EAAS1B,MAAO2B,EAAO3B,MAAO3kB,GAC7DumB,EAAQ3B,KAAOgB,GAAeS,EAASzB,KAAM0B,EAAO1B,KAAM5kB,GAC1DumB,EAAQ/d,MAAQ2L,GAAIkS,EAAS7d,MAAO8d,EAAO9d,MAAOxI,GAC3CykB,GAAKzc,UAAUue,KCrB9B,MAAMC,GAAkB,CACpBC,M1EZqB,gF0EarBC,SAAU,OACV/e,MAAO,OACPW,MAAOiN,IAELoR,GAAiB,CACnBF,MAAO3d,EACP4d,SAAU,SACV/e,MAAO,OACPW,MAAOgd,GAAMhd,OAEXse,GAAkB,CACpBH,MAAO5d,EACP6d,SAAU,UACV/e,MAAO,OACPW,MAAOD,EAAOC,OAElB,SAASue,GAASvL,GAAMmL,MAAEA,WAAOC,EAAA/e,MAAUA,EAAAW,MAAOA,IAC9C,MAAMyX,EAAUzE,EAAKwL,UAAUxC,MAAMmC,GAChC1G,IAELzE,EAAK,MAAQoL,GAAY3G,EAAQtY,OACjC6T,EAAKwL,UAAYxL,EAAKwL,UAAUxnB,QAAQmnB,EAAO9e,GAC/C2T,EAAKrJ,OAAO+D,QAAQ+J,EAAQiC,IAAI1Z,IACpC,CACA,SAASye,GAAoB5hB,GACzB,MAAM6hB,EAAgB7hB,EAAM8hB,WACtB3L,EAAO,CACTnW,MAAO6hB,EACPF,UAAWE,EACX/U,OAAQ,GACRiV,QAAS,EACTC,UAAW,EACXC,WAAY,GAMhB,OAJI9L,EAAKnW,MAAMqB,SAAS,WACpBqgB,GAASvL,EAAMkL,IACnBK,GAASvL,EAAMqL,IACfE,GAASvL,EAAMsL,IACRtL,CACX,CACA,SAAS+L,GAAkBrnB,GACvB,OAAO+mB,GAAoB/mB,GAAGiS,MAClC,CACA,SAASqV,GAAkB7Y,GACvB,MAAMwD,OAAEA,EAAAkV,UAAQA,EAAAD,QAAWA,YAASJ,GAAcC,GAAoBtY,GAChE8Y,EAAYtV,EAAOxK,OACzB,OAAQzH,IACJ,IAAIwnB,EAASV,EACb,IAAA,IAAS3Y,EAAI,EAAGA,EAAIoZ,EAAWpZ,IAEvBqZ,EADArZ,EAAI+Y,EACKM,EAAOloB,QAAQknB,GAAgB7e,MAAO3H,EAAEmO,IAE5CA,EAAI+Y,EAAUC,EACVK,EAAOloB,QAAQqnB,GAAehf,MAAO2d,GAAMtd,UAAUhI,EAAEmO,KAGvDqZ,EAAOloB,QAAQsnB,GAAgBjf,MAAOgB,EAAS3I,EAAEmO,KAGlE,OAAOqZ,EAEf,CACA,MAAMC,GAAwBznB,GAAmB,iBAANA,EAAiB,EAAIA,EAMhE,MAAM0nB,GAAU,CACZhhB,KA/EJ,SAAc1G,GACV,IAAI+P,EAAI4X,EACR,OAAQC,MAAM5nB,IACVgJ,EAAShJ,MACwB,QAA9B+P,EAAK/P,EAAEskB,MAAMzb,UAAgC,IAAPkH,OAAgB,EAASA,EAAGtI,SAAW,KAC3C,QAA9BkgB,EAAK3nB,EAAEskB,MAAMxb,UAAgC,IAAP6e,OAAgB,EAASA,EAAGlgB,SAAW,GAChF,CACZ,EAyEIa,MAAO+e,GACPC,qBACJO,kBATA,SAA2B7nB,GACvB,MAAM8nB,EAAST,GAAkBrnB,GAEjC,OADoBsnB,GAAkBtnB,EAC/B+nB,CAAYD,EAAO9F,IAAIyF,IAClC,GC5EMO,GAAe,CAAC/X,EAAQzB,IAAYhQ,GAAM,GAAGA,EAAI,EAAIgQ,EAASyB,IACpE,SAASgY,GAAShY,EAAQzB,GACtB,MAAsB,iBAAXyB,EACCjQ,GAAMmU,GAAIlE,EAAQzB,EAAQxO,GAE7BslB,GAAM5e,KAAKuJ,GACTmW,GAASnW,EAAQzB,GAGjByB,EAAOjJ,WAAW,QACnBghB,GAAa/X,EAAQzB,GACrB0Z,GAAWjY,EAAQzB,EAEjC,CACA,MAAM2Z,GAAW,CAAC5C,EAAMC,KACpB,MAAMgC,EAAS,IAAIjC,GACbgC,EAAYC,EAAO/f,OACnB2gB,EAAa7C,EAAKvD,IAAI,CAACqG,EAAUla,IAAM8Z,GAASI,EAAU7C,EAAGrX,KACnE,OAAQnO,IACJ,IAAA,IAASmO,EAAI,EAAGA,EAAIoZ,EAAWpZ,IAC3BqZ,EAAOrZ,GAAKia,EAAWja,GAAGnO,GAE9B,OAAOwnB,IAGTc,GAAY,CAACrY,EAAQzB,KACvB,MAAMgZ,EAAS,IAAKvX,KAAWzB,GACzB4Z,EAAa,CAAA,EACnB,IAAA,MAAWhmB,KAAOolB,OACM,IAAhBvX,EAAO7N,SAAsC,IAAhBoM,EAAOpM,KACpCgmB,EAAWhmB,GAAO6lB,GAAShY,EAAO7N,GAAMoM,EAAOpM,KAGvD,OAAQpC,IACJ,IAAA,MAAWoC,KAAOgmB,EACdZ,EAAOplB,GAAOgmB,EAAWhmB,GAAKpC,GAElC,OAAOwnB,IAGTU,GAAa,CAACjY,EAAQzB,KACxB,MAAM+Z,EAAWb,GAAQJ,kBAAkB9Y,GACrCga,EAAczB,GAAoB9W,GAClCwY,EAAc1B,GAAoBvY,GAIxC,OAHuBga,EAAYtB,UAAYuB,EAAYvB,SACvDsB,EAAYrB,YAAcsB,EAAYtB,WACtCqB,EAAYpB,YAAcqB,EAAYrB,WAE/BhN,GAAK+N,GAASK,EAAYvW,OAAQwW,EAAYxW,QAASsW,GAIvDP,GAAa/X,EAAQzB,IC/C9BiX,GAAW,CAACF,EAAMC,EAAIrgB,KACxB,MAAMujB,EAAmBlD,EAAKD,EAC9B,OAA4B,IAArBmD,EAAyB,GAAKvjB,EAAQogB,GAAQmD,GCJnDC,GAAY,CAACpD,EAAMC,IAAQhnB,GAAM2V,GAAIoR,EAAMC,EAAIhnB,GAgBrD,SAASoqB,GAAapB,EAAQjG,EAAMsH,GAChC,MAAMC,EAAS,GACTC,EAAeF,IAhBJ,iBADO7oB,EAiB+BwnB,EAAO,IAfnDmB,GAEW,iBAAN3oB,EACLslB,GAAM5e,KAAK1G,GAAKomB,GAAW8B,GAE7BjoB,MAAMC,QAAQF,GACZmoB,GAEW,iBAANnoB,EACLsoB,GAEJK,IAbX,IAA4B3oB,EAkBxB,MAAMgpB,EAAYxB,EAAO/f,OAAS,EAClC,IAAA,IAAS0G,EAAI,EAAGA,EAAI6a,EAAW7a,IAAK,CAChC,IAAI8a,EAAQF,EAAavB,EAAOrZ,GAAIqZ,EAAOrZ,EAAI,IAC/C,GAAIoT,EAAM,CACN,MAAM2H,EAAiBjpB,MAAMC,QAAQqhB,GAAQA,EAAKpT,IAAMoH,GAAOgM,EAC/D0H,EAAQ7O,GAAK8O,EAAgBD,EACjC,CACAH,EAAO9S,KAAKiT,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAO5B,GAAUvf,MAAOohB,GAAU,EAAM9H,KAAAA,EAAAA,MAAM0H,GAAU,IACzE,MAAMK,EAAcF,EAAM3hB,OAM1B,GALA+Y,GAAU8I,IAAgB9B,EAAO/f,QAKb,IAAhB6hB,EACA,MAAO,IAAM9B,EAAO,GAEpB4B,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOG,UACnB/B,EAAS,IAAIA,GAAQ+B,WAEzB,MAAMT,EAASF,GAAapB,EAAQjG,EAAM0H,GACpCD,EAAYF,EAAOrhB,OACnB+hB,EAAgBxpB,IAClB,IAAImO,EAAI,EACR,GAAI6a,EAAY,EACZ,KAAO7a,EAAIib,EAAM3hB,OAAS,KAClBzH,EAAIopB,EAAMjb,EAAI,IADOA,KAKjC,MAAMsb,EAAkBhE,GAAS2D,EAAMjb,GAAIib,EAAMjb,EAAI,GAAInO,GACzD,OAAO8oB,EAAO3a,GAAGsb,IAErB,OAAOJ,EACArpB,GAAMwpB,EAAavhB,EAAMmhB,EAAM,GAAIA,EAAME,EAAc,GAAItpB,IAC5DwpB,CACV,CCvFA,SAASE,GAAcC,GACnB,MAAMzZ,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQ0Z,GACxB,MAAM1hB,EAAMgI,EAAOA,EAAOzI,OAAS,GACnC,IAAA,IAAS0G,EAAI,EAAGA,GAAKyb,EAAWzb,IAAK,CACjC,MAAM0b,EAAiBpE,GAAS,EAAGmE,EAAWzb,GAC9C+B,EAAO8F,KAAK7B,GAAIjM,EAAK,EAAG2hB,GAC5B,CACJ,CDLIC,CAAW5Z,EAAQyZ,EAAIliB,OAAS,GACzByI,CACX,CEIA,SAAS6Z,IAAUC,SAAEA,EAAW,IAAKD,UAAWE,QAAgBC,EAAO3I,KAAAA,EAAO,cAK1E,MAAM4I,ECfY,CAAC5I,GACZthB,MAAMC,QAAQqhB,IAA4B,iBAAZA,EAAK,GDclB6I,CAAc7I,GAChCA,EAAKS,IAAI2B,IACTA,GAA2BpC,GAK3BpU,EAAQ,CACVkd,MAAM,EACNllB,MAAO8kB,EAAe,IAKpBK,EE7BV,SAA8Bpa,EAAQ8Z,GAClC,OAAO9Z,EAAO8R,IAAKuI,GAAMA,EAAIP,EACjC,CF2B0BQ,CAGtBN,GAASA,EAAMziB,SAAWwiB,EAAexiB,OACnCyiB,EACAR,GAAcO,GAAiBD,GAC/BS,EAAoBtB,GAAYmB,EAAeL,EAAgB,CACjE1I,KAAMthB,MAAMC,QAAQiqB,GACdA,GA9BSlY,EA+BKgY,EA/BGlJ,EA+BaoJ,EA9BjClY,EAAO+P,IAAI,IAAMjB,GAAUW,IAAWvL,OAAO,EAAGlE,EAAOxK,OAAS,MAD3E,IAAuBwK,EAAQ8O,EAiC3B,MAAO,CACH2J,mBAAoBV,EACpB9J,KAAOgC,IACH/U,EAAMhI,MAAQslB,EAAkBvI,GAChC/U,EAAMkd,KAAOnI,GAAK8H,EACX7c,GAGnB,CG1CA,SAASwd,GAAkBpK,EAAUqK,GACjC,OAAOA,EAAgBrK,GAAY,IAAOqK,GAAiB,CAC/D,CCLA,SAASC,GAAsBC,EAAc5I,EAAG/d,GAC5C,MAAM4mB,EAAQ3iB,KAAKD,IAAI+Z,EAFI,EAEwB,GACnD,OAAOyI,GAAkBxmB,EAAU2mB,EAAaC,GAAQ7I,EAAI6I,EAChE,CCFA,MAAMC,GAAU,KAKhB,SAASC,IAAWjB,SAAEA,EAAW,IAAAkB,OAAKA,EAAS,aAAM3K,EAAW,EAAA4K,KAAGA,EAAO,IACtE,IAAIC,EACAC,EAEAC,EAAe,EAAIJ,EAIvBI,EAAerjB,EAVA,IACA,EAS8BqjB,GAC7CtB,EAAW/hB,EAbK,IACA,GAY2B0Y,GAAsBqJ,IAC7DsB,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClCrU,EAAQuU,EAAmBxB,EAC3B9P,EAAIsR,EAAmBjL,EACvBpG,EAAIsR,GAAgBF,EAAcD,GAClClK,EAAIhZ,KAAKsjB,KAAKzU,GACpB,OAAO+T,GAAW9Q,EAAIC,EAAKiH,GAE/BiK,EAAcE,IACV,MACMtU,EADmBsU,EAAeD,EACPtB,EAC3B3I,EAAIpK,EAAQsJ,EAAWA,EACvBzH,EAAI1Q,KAAKsb,IAAI4H,EAAc,GAAKljB,KAAKsb,IAAI6H,EAAc,GAAKvB,EAC5D2B,EAAIvjB,KAAKsjB,KAAKzU,GACd+N,EAAIyG,GAAgBrjB,KAAKsb,IAAI6H,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBP,GAAU,GAAI,EAAK,KACzC3J,EAAIvI,GAAK6S,GAAM3G,KAOtCoG,EAAYG,GACEnjB,KAAKsjB,KAAKH,EAAevB,KACxBuB,EAAehL,GAAYyJ,EAAW,GAC1C,KAEXqB,EAAcE,GACAnjB,KAAKsjB,KAAKH,EAAevB,IACIA,EAAWA,GAAvCzJ,EAAWgL,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYO,GAC3C,IAAIC,EAASD,EACb,IAAA,IAASzd,EAAI,EAAGA,EAAI2d,GAAgB3d,IAChC0d,GAAkBT,EAASS,GAAUR,EAAWQ,GAEpD,OAAOA,CACX,CAzByBE,CAAgBX,EAAUC,EAD1B,EAAIrB,GAGzB,GADAA,EAAWvJ,GAAsBuJ,GAC7BpC,MAAM2D,GACN,MAAO,CACHS,UAAW,IACXC,QAAS,GACTjC,YAGH,CACD,MAAMgC,EAAY5jB,KAAKsb,IAAI6H,EAAc,GAAKJ,EAC9C,MAAO,CACHa,YACAC,QAAwB,EAAfX,EAAmBljB,KAAK0d,KAAKqF,EAAOa,GAC7ChC,WAER,CACJ,CACA,MAAM8B,GAAiB,GAQvB,SAASL,GAAgBF,EAAcD,GACnC,OAAOC,EAAenjB,KAAK0d,KAAK,EAAIwF,EAAeA,EACvD,CClFA,MAAMY,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa/e,EAASgE,GAC3B,OAAOA,EAAK3Q,KAAM0B,QAAyB,IAAjBiL,EAAQjL,GACtC,CAuBA,SAASiqB,IAAStC,UAAAA,EAAAA,UAAWuC,YAAWC,KAAclf,IAClD,MAAM4C,EAAS8Z,EAAU,GACnBvb,EAASub,EAAUA,EAAUtiB,OAAS,GAKtC0F,EAAQ,CAAEkd,MAAM,EAAOllB,MAAO8K,IAC9B+b,UAAEA,UAAWC,EAAAd,KAASA,EAAAnB,SAAMA,WAAUzJ,EAAAiM,uBAAUA,GA9B1D,SAA0Bnf,GACtB,IAAIof,EAAgB,CAChBlM,SAAU,EACVyL,UAAW,IACXC,QAAS,GACTd,KAAM,EACNqB,wBAAwB,KACrBnf,GAGP,IAAK+e,GAAa/e,EAAS8e,KACvBC,GAAa/e,EAAS6e,IAAe,CACrC,MAAMQ,EAAUzB,GAAW5d,GAC3Bof,EAAgB,IACTA,KACAC,EACHvB,KAAM,GAEVsB,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CASsFE,CAAiB,IAC5Ftf,EACHkT,UAAWI,GAAsBtT,EAAQkT,UAAY,KAEnDqM,EAAkBrM,GAAY,EAC9B+K,EAAeW,GAAW,EAAI7jB,KAAK0d,KAAKkG,EAAYb,IACpD0B,EAAere,EAASyB,EACxB6c,EAAsBnM,GAAsBvY,KAAK0d,KAAKkG,EAAYb,IAQlE4B,EAAkB3kB,KAAK4a,IAAI6J,GAAgB,EAGjD,IAAIG,EACJ,GAHAT,IAAcA,EAAYQ,EAAkB,IAAO,GACnDT,IAAcA,EAAYS,EAAkB,KAAQ,IAEhDzB,EAAe,EAAG,CAClB,MAAM2B,EAAcxB,GAAgBqB,EAAqBxB,GAEzD0B,EAAiB9K,IACb,MAAMkJ,EAAWhjB,KAAKsjB,KAAKJ,EAAewB,EAAsB5K,GAChE,OAAQ1T,EACJ4c,IACOwB,EACCtB,EAAewB,EAAsBD,GACrCI,EACA7kB,KAAKgb,IAAI6J,EAAc/K,GACvB2K,EAAezkB,KAAK8kB,IAAID,EAAc/K,IAE1D,MAAA,GAC0B,IAAjBoJ,EAEL0B,EAAiB9K,GAAM1T,EACnBpG,KAAKsjB,KAAKoB,EAAsB5K,IAC3B2K,GACID,EAAkBE,EAAsBD,GAAgB3K,OAEpE,CAED,MAAMiL,EAAoBL,EAAsB1kB,KAAK0d,KAAKwF,EAAeA,EAAe,GACxF0B,EAAiB9K,IACb,MAAMkJ,EAAWhjB,KAAKsjB,KAAKJ,EAAewB,EAAsB5K,GAE1DkL,EAAWhlB,KAAKF,IAAIilB,EAAoBjL,EAAG,KACjD,OAAQ1T,EACH4c,IACKwB,EACEtB,EAAewB,EAAsBD,GACrCzkB,KAAKilB,KAAKD,GACVD,EACIN,EACAzkB,KAAKklB,KAAKF,IAClBD,EAEhB,CACA,MAAO,CACHzC,mBAAoB8B,GAAyBxC,GAAmB,KAChE9J,KAAOgC,IACH,MAAM/d,EAAU6oB,EAAc9K,GAC9B,GAAKsK,EAqBDrf,EAAMkd,KAAOnI,GAAK8H,MArBO,CACzB,IAAIpW,EAAkBgZ,EACZ,IAAN1K,IAOItO,EADA0X,EAAe,EACGT,GAAsBmC,EAAe9K,EAAG/d,GAGxC,GAG1B,MAAMopB,EAA2BnlB,KAAK4a,IAAIpP,IAAoB2Y,EACxDiB,EAA+BplB,KAAK4a,IAAIxU,EAASrK,IAAYmoB,EACnEnf,EAAMkd,KACFkD,GAA4BC,CACpC,CAKA,OADArgB,EAAMhI,MAAQgI,EAAMkd,KAAO7b,EAASrK,EAC7BgJ,GAGnB,CC7HA,SAASsgB,IAAU1D,UAAAA,EAAAA,SAAWxJ,EAAW,EAAAmN,MAAKA,EAAQ,gBAAKC,EAAe,IAAAC,cAAKA,EAAgB,GAAAC,gBAAIA,EAAkB,iBAAKC,EAAA5lB,IAAcA,EAAAC,IAAKA,YAAKmkB,EAAY,GAAAC,UAAKA,IAC/J,MAAMtc,EAAS8Z,EAAU,GACnB5c,EAAQ,CACVkd,MAAM,EACNllB,MAAO8K,GAGL8d,EAAmB/tB,QACT,IAARkI,EACOC,OACC,IAARA,GAEGC,KAAK4a,IAAI9a,EAAMlI,GAAKoI,KAAK4a,IAAI7a,EAAMnI,GAD/BkI,EAC0CC,EAEzD,IAAI6lB,EAAYN,EAAQnN,EACxB,MAAM0N,EAAQhe,EAAS+d,EACjBxf,OAA0B,IAAjBsf,EAA6BG,EAAQH,EAAaG,GAK7Dzf,IAAWyf,IACXD,EAAYxf,EAASyB,GACzB,MAAMie,EAAahM,IAAO8L,EAAY5lB,KAAKsjB,KAAKxJ,EAAIyL,GAC9CQ,EAAcjM,GAAM1T,EAAS0f,EAAUhM,GACvCkM,EAAiBlM,IACnB,MAAMjL,EAAQiX,EAAUhM,GAClBrR,EAASsd,EAAWjM,GAC1B/U,EAAMkd,KAAOjiB,KAAK4a,IAAI/L,IAAUqV,EAChCnf,EAAMhI,MAAQgI,EAAMkd,KAAO7b,EAASqC,GAQxC,IAAIwd,EACAC,EACJ,MAAMC,EAAsBrM,IAjCN,IAACliB,KAkCAmN,EAAMhI,WAlCS,IAAR+C,GAAqBlI,EAAIkI,QAAiB,IAARC,GAAqBnI,EAAImI,KAoCrFkmB,EAAsBnM,EACtBoM,EAAWjC,GAAO,CACdtC,UAAW,CAAC5c,EAAMhI,MAAO4oB,EAAgB5gB,EAAMhI,QAC/Cob,SAAUsK,GAAsBsD,EAAYjM,EAAG/U,EAAMhI,OACrD8mB,QAAS2B,EACT5B,UAAW6B,EACXvB,YACAC,gBAIR,OADAgC,EAAmB,GACZ,CACH7D,mBAAoB,KACpBxK,KAAOgC,IAOH,IAAIsM,GAAkB,EAUtB,OATKF,QAAoC,IAAxBD,IACbG,GAAkB,EAClBJ,EAAclM,GACdqM,EAAmBrM,SAMK,IAAxBmM,GAAqCnM,EAAImM,EAClCC,EAASpO,KAAKgC,EAAImM,KAGxBG,GAAmBJ,EAAclM,GAC3B/U,IAIvB,CClFA,MAAMshB,GAAmBnqB,IACrB,MAAMoqB,EAAgB,EAAGxX,eAAgB5S,EAAO4S,GAChD,MAAO,CACH9W,MAAO,IAAMoW,GAAMlS,OAAOoqB,GAAe,GACzCC,KAAM,IAAMjY,GAAYgY,GAKxBnW,IAAK,IAAM5B,GAAUQ,aAAeR,GAAUO,UAAYoB,YAAYC,QCN9E,SAASqW,GAAsBC,GAC3B,IAAI7E,EAAW,EAEf,IAAI7c,EAAQ0hB,EAAU3O,KAAK8J,GAC3B,MAAQ7c,EAAMkd,MAAQL,EALG,KAMrBA,GAHa,GAIb7c,EAAQ0hB,EAAU3O,KAAK8J,GAE3B,OAAOA,GATkB,IASiB8E,IAAW9E,CACzD,CCJA,MAAM+E,GAAQ,CACVC,MAAOvB,GACPA,WACAwB,MAAOlF,GACPA,aACAsC,WASJ,SAAS6C,IAAaC,SAAEA,GAAW,EAAMC,MAAAA,EAAQ,EAAAC,OAAGA,EAASZ,GAAiB1E,UAAWuF,EAAAvnB,KAAaA,EAAO,mBAAawnB,EAAS,EAAAC,YAAGA,EAAc,EAAAC,WAAGA,EAAa,OAAAC,OAAQA,EAAAC,OAAQA,EAAAC,WAAQA,EAAAC,SAAYA,KAAaxiB,IACjN,IAEIyiB,EACAC,EAHAC,EAAQ,EACRC,GAAa,EAOjB,MAAMC,EAAwB,KAC1BH,EAAyB,IAAII,QAASC,IAClCN,EAAyBM,KAKjC,IAAIC,EADJH,IAEA,MAAMI,EAAmBvB,GAAMhnB,IAASgiB,GAKxC,IAAIwG,EACAD,IAAqBvG,IACK,iBAAnBuF,EAAY,KAInBiB,EAAwBpH,GAAY,CAAC,EAAG,KAAMmG,EAAa,CACvDrnB,OAAO,IAEXqnB,EAAc,CAAC,EAAG,MAEtB,MAAMT,EAAYyB,EAAiB,IAAKjjB,EAAS0c,UAAWuF,IAC5D,IAAIkB,EACe,WAAff,IACAe,EAAoBF,EAAiB,IAC9BjjB,EACH0c,UAAW,IAAIuF,GAAa/F,UAC5BhJ,WAAYlT,EAAQkT,UAAY,MAGxC,IAAIkQ,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjC/B,EAAUnE,oBAA+B6E,IACzCV,EAAUnE,mBAAqBkE,GAAsBC,IAEzD,MAAMnE,mBAAEA,GAAuBmE,EAC/B,IAAIgC,EAAmB/B,IACnBgC,EAAgBhC,IACO,OAAvBpE,IACAmG,EAAmBnG,EAAqB8E,EACxCsB,EAAgBD,GAAoBtB,EAAS,GAAKC,GAEtD,IAAIuB,EAAc,EAClB,MAAMC,EAAQ9Z,IACV,GAAkB,OAAdyZ,EACA,OAOAX,EAAQ,IACRW,EAAYvoB,KAAKF,IAAIyoB,EAAWzZ,IAChC8Y,EAAQ,IACRW,EAAYvoB,KAAKF,IAAIgP,EAAY4Z,EAAgBd,EAAOW,IAExDI,EADa,OAAbL,EACcA,EAMAtoB,KAAKQ,MAAMsO,EAAYyZ,GAAaX,EAGtD,MAAMiB,EAAmBF,EAAc3B,GAASY,GAAS,EAAI,GAAI,GAC3DkB,EAAiBlB,GAAS,EAAIiB,EAAmB,EAAIA,EAAmBH,EAC9EC,EAAc3oB,KAAKD,IAAI8oB,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIK,EAAUJ,EACVK,EAAiBvC,EACrB,GAAIU,EAAQ,CAMR,MAAM9J,EAAWrd,KAAKF,IAAI6oB,EAAaD,GAAiBD,EAKxD,IAAIQ,EAAmBjpB,KAAKkpB,MAAM7L,GAK9B8L,EAAoB9L,EAAW,GAK9B8L,GAAqB9L,GAAY,IAClC8L,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBjpB,KAAKF,IAAImpB,EAAkB9B,EAAS,GAIhC1uB,QAAQwwB,EAAmB,KAE3B,YAAf5B,GACA8B,EAAoB,EAAIA,EACpB/B,IACA+B,GAAqB/B,EAAcqB,IAGnB,WAAfpB,IACL2B,EAAiBZ,IAGzBW,EAAUlpB,EAAM,EAAG,EAAGspB,GAAqBV,CAC/C,CAMA,MAAM1jB,EAAQ+jB,EACR,CAAE7G,MAAM,EAAOllB,MAAOmqB,EAAY,IAClC8B,EAAelR,KAAKiR,GACtBZ,IACApjB,EAAMhI,MAAQorB,EAAsBpjB,EAAMhI,QAE9C,IAAIklB,KAAEA,GAASld,EACV+jB,GAAyC,OAAvBxG,IACnBL,EAAO2F,GAAS,EAAIe,GAAeD,EAAgBC,GAAe,GAEtE,MAAMS,EAAmC,OAAbd,IACT,aAAdD,GAA2C,YAAdA,GAA2BpG,GAO7D,OANIwF,GACAA,EAAS1iB,EAAMhI,OAEfqsB,GACAC,IAEGtkB,GAELukB,EAAsB,KACxBrB,GAAmBA,EAAgB1B,OACnC0B,OAAkB,GAEhB5Z,EAAS,KACXga,EAAY,OACZiB,IACA5B,IACAI,IACAS,EAAYC,EAAa,MAEvBa,EAAS,KACXhB,EAAY,WACZb,GAAcA,IACd8B,IACA5B,KAEE6B,EAAO,KACT,GAAI1B,EACA,OACCI,IACDA,EAAkBhB,EAAO2B,IAC7B,MAAMzY,EAAM8X,EAAgB9X,MAC5BmX,GAAUA,IACO,OAAbgB,EACAC,EAAYpY,EAAMmY,EAEZC,GAA2B,aAAdF,IACnBE,EAAYpY,GAEE,aAAdkY,GACAP,IAEJU,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZJ,EAAgBjwB,SAEhB+uB,GACAwC,IAEJ,MAAMC,EAAW,CACbC,KAAA,CAAKzB,EAAS0B,IACH/B,EAAuB8B,KAAKzB,EAAS0B,GAEhD,QAAIC,GACA,OAAOpR,GAAsBoQ,EACjC,EACA,QAAIgB,CAAKC,GACLA,EAAUvR,GAAsBuR,GAChCjB,EAAciB,EACG,OAAbtB,GAAsBL,GAA6B,IAAVL,EAIzCW,EAAYN,EAAgB9X,MAAQyZ,EAAUhC,EAH9CU,EAAWsB,CAKnB,EACA,YAAIhI,GACA,MAAMA,EAA4C,OAAjC6E,EAAUnE,mBACrBkE,GAAsBC,GACtBA,EAAUnE,mBAChB,OAAO/J,GAAsBqJ,EACjC,EACA,SAAIgG,GACA,OAAOA,CACX,EACA,SAAIA,CAAMiC,GACFA,IAAajC,GAAUK,IAE3BL,EAAQiC,EACRL,EAASG,KAAOpR,GAAsBoQ,GAC1C,EACA,SAAI5jB,GACA,OAAOsjB,CACX,EACAkB,OACAO,MAAO,KACHzB,EAAY,SACZC,EAAWK,GAEfpC,KAAM,KACFsB,GAAa,EACK,SAAdQ,IAEJA,EAAY,OACZd,GAAUA,IACVlZ,MAEJA,OAAQ,KACe,OAAfma,GACAI,EAAKJ,GACTna,KAEJ0b,SAAU,KACN1B,EAAY,YAEhB2B,OAASjB,IACLR,EAAY,EACLK,EAAKG,KAGpB,OAAOS,CACX,CClSA,MAAMS,GCTN,SAAcxa,GACV,IAAIgU,EACJ,MAAO,UACY,IAAXA,IACAA,EAAShU,KACNgU,EAEf,CDEsByG,CAAK,IAAM3yB,OAAOE,eAAeC,KAAKyyB,QAAQ3yB,UAAW,YAIzE4yB,OAAwB1rB,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAAS2rB,GAA2BttB,EAAOutB,GAAW7C,SAAEA,aAAUD,KAAeviB,IAO7E,KAN+BglB,MAC3BG,GAAkBpsB,IAAIssB,KACrBrlB,EAAQmiB,aACc,WAAvBniB,EAAQoiB,YACY,IAApBpiB,EAAQ4e,SACS,YAAjB5e,EAAQtF,MAER,OAAO,EAIX,IACI+nB,EACAC,EAFAE,GAAa,EAQb0C,GAAgB,EAKpB,MAAMzC,EAAwB,KAC1BH,EAAyB,IAAII,QAASC,IAClCN,EAAyBM,KAIjCF,IACA,IAAMnG,UAAAA,EAAAA,SAAWC,EAAW,IAAKzI,KAAAA,EAAAA,MAAM2I,GAAU7c,EAIjD,GAvCkC,EAACqlB,EAAWrlB,IAA6B,WAAjBA,EAAQtF,MACpD,oBAAd2qB,IACC1R,GAAuB3T,EAAQkU,MAqC5BqR,CAA8BF,EAAWrlB,GAAU,CACnD,MAAMwlB,EAAkB3D,GAAa,IAC9B7hB,EACHkiB,OAAQ,EACRH,MAAO,IAEX,IAAIjiB,EAAQ,CAAEkd,MAAM,EAAOllB,MAAO4kB,EAAU,IAC5C,MAAM+I,EAAwB,GAK9B,IAAI5Q,EAAI,EACR,MAAQ/U,EAAMkd,MAAQnI,EArDV,KAsDR/U,EAAQ0lB,EAAgBT,OAAOlQ,GAC/B4Q,EAAsB9c,KAAK7I,EAAMhI,OACjC+c,GA7DQ,GA+DZgI,OAAQ,EACRH,EAAY+I,EACZ9I,EAAW9H,EAjEC,GAkEZX,EAAO,QACX,CACA,MAAM7f,EE3FV,SAAsB8Q,EAASkgB,EAAW3I,GAAaqF,MAAAA,EAAQ,EAAApF,SAAGA,EAAAuF,OAAUA,EAAS,EAAAE,WAAGA,EAAa,OAAQlO,KAAAA,QAAM2I,GAAW,IAC1H,MAAM6I,EAAkB,CAAEL,CAACA,GAAY3I,GACnCG,IACA6I,EAAgB7iB,OAASga,GAC7B,MAAMnJ,EAASgB,GAAwBR,GAMvC,OAFIthB,MAAMC,QAAQ6gB,KACdgS,EAAgBhS,OAASA,GACtBvO,EAAQ/R,QAAQsyB,EAAiB,CACpC3D,MAAAA,EACApF,WACAjJ,OAAS9gB,MAAMC,QAAQ6gB,GAAmB,SAATA,EACjCiS,KAAM,OACNC,WAAY1D,EAAS,EACrB2D,UAA0B,YAAfzD,EAA2B,YAAc,UAE5D,CFyEsB0D,CAAahuB,EAAMiuB,MAAMjvB,QAASuuB,EAAW3I,EAAW,IACnE1c,EACH2c,WASAzI,KAAMA,EACN2I,UAEEmJ,EAAkB,KACpBV,GAAgB,EAChBjxB,EAAU+U,UAER6c,EAAa,KACfX,GAAgB,EAChBnc,GAAMlS,OAAO+uB,GACbvD,IACAI,KAUJxuB,EAAU6xB,SAAW,KACbZ,IAEJxtB,EAAMkB,IGhId,SAA0B0jB,GAAWwF,OAAEA,EAAAE,WAAQA,EAAa,SAIxD,OAAO1F,EAHOwF,GAAyB,SAAfE,GAAyBF,EAAS,GAAM,EAC1D,EACAxF,EAAUtiB,OAAS,EAE7B,CH2HkB+rB,CAAiBzJ,EAAW1c,IACtCuiB,GAAcA,IACd0D,MAoEJ,MA/DiB,CACbzB,KAAA,CAAKzB,EAAS0B,IACH/B,EAAuB8B,KAAKzB,EAAS0B,GAEhD2B,eAAeC,IACXhyB,EAAUgyB,SAAWA,EACrBhyB,EAAU6xB,SAAW,KACdhe,IAEX,QAAIwc,GACA,OAAOpR,GAAsBjf,EAAUqvB,aAAe,EAC1D,EACA,QAAIgB,CAAKC,GACLtwB,EAAUqvB,YAActQ,GAAsBuR,EAClD,EACA,SAAIhC,GACA,OAAOtuB,EAAUiyB,YACrB,EACA,SAAI3D,CAAMiC,GACNvwB,EAAUiyB,aAAe1B,CAC7B,EACA,YAAIjI,GACA,OAAOrJ,GAAsBqJ,EACjC,EACA2H,KAAM,KACE1B,IAEJvuB,EAAUiwB,OAIVjb,GAAY2c,KAEhBnB,MAAO,IAAMxwB,EAAUwwB,QACvBvD,KAAM,KAEF,GADAsB,GAAa,EACe,SAAxBvuB,EAAU+uB,UACV,OASJ,MAAMM,YAAEA,GAAgBrvB,EACxB,GAAIqvB,EAAa,CACb,MAAM8B,EAAkB3D,GAAa,IAC9B7hB,EACH8hB,UAAU,IAEdhqB,EAAMyuB,gBAAgBf,EAAgBT,OAAOrB,EAlKzC,IAkKoE5rB,MAAO0tB,EAAgBT,OAAOrB,GAAa5rB,MAlK/G,GAmKR,CACAmuB,KAEJnB,SAAU,KACFQ,GAEJjxB,EAAU+vB,UAEdhb,OAAQ6c,EAGhB,CIrMA,MAAMO,GAAoB,CACtB9rB,KAAM,SACNikB,UAAW,IACXC,QAAS,GACTM,UAAW,IAQTuH,GAAsB,CACxB/rB,KAAM,YACNiiB,SAAU,IAMRzI,GAAO,CACTxZ,KAAM,YACNwZ,KAAM,CAAC,IAAM,GAAK,IAAM,GACxByI,SAAU,IAER+J,GAAuB,CAACC,GAAYjK,UAAAA,KAClCA,EAAUtiB,OAAS,EACZqsB,GAEFjtB,EAAeT,IAAI4tB,GACjBA,EAAShtB,WAAW,SAxBH,CAC5Be,KAAM,SACNikB,UAAW,IACXC,QAAoB,IAsBalC,EAAU,GAtBnB,EAAI3hB,KAAK0d,KAAK,KAAO,GAC7CyG,UAAW,IAsBDsH,GAEHtS,GCzBL0S,GAAe,CAAC7xB,EAAK+C,IAEX,WAAR/C,MAKiB,iBAAV+C,IAAsBlF,MAAMC,QAAQiF,OAE1B,iBAAVA,IACNuiB,GAAQhhB,KAAKvB,IAAoB,MAAVA,GACvBA,EAAM6B,WAAW,UChBpBktB,OAAkBptB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASqtB,GAAmBn0B,GACxB,MAAOW,EAAMwE,GAASnF,EAAEo0B,MAAM,GAAG,GAAIhrB,MAAM,KAC3C,GAAa,gBAATzI,EACA,OAAOX,EACX,MAAOqI,GAAUlD,EAAMmf,MAAMzb,IAAe,GAC5C,IAAKR,EACD,OAAOrI,EACX,MAAMkJ,EAAO/D,EAAM7F,QAAQ+I,EAAQ,IACnC,IAAIgsB,EAAeH,GAAY9tB,IAAIzF,GAAQ,EAAI,EAG/C,OAFI0H,IAAWlD,IACXkvB,GAAgB,KACb1zB,EAAO,IAAM0zB,EAAenrB,EAAO,GAC9C,CACA,MAAMorB,GAAgB,oBAChBC,GAAS,IACR7M,GACHG,kBAAoB7nB,IAChB,MAAMw0B,EAAYx0B,EAAEskB,MAAMgQ,IAC1B,OAAOE,EAAYA,EAAUxS,IAAImS,IAAoB3yB,KAAK,KAAOxB,IClBnEy0B,GAAoB,IACnB7qB,GAEH0b,SACAoP,gBAAiBpP,GACjBqP,aAAcrP,GACd0N,KAAM1N,GACNsP,OAAQtP,GAERuP,YAAavP,GACbwP,eAAgBxP,GAChByP,iBAAkBzP,GAClB0P,kBAAmB1P,GACnB2P,gBAAiB3P,GACjBiP,UACAW,aAAcX,IAKZY,GAAuB/yB,GAAQqyB,GAAkBryB,GCvBvD,SAASylB,GAAkBzlB,EAAK+C,GAC5B,IAAIiwB,EAAmBD,GAAoB/yB,GAI3C,OAHIgzB,IAAqBb,KACrBa,EAAmB1N,IAEhB0N,EAAiBvN,kBAClBuN,EAAiBvN,kBAAkB1iB,QACnC,CACV,CCTA,MAAMkwB,GAAqBr1B,GAAM,aAAa0G,KAAK1G,GCDnD,SAASs1B,GAAOnwB,GACZ,MAAqB,iBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,GAAiBkwB,GAAkBlwB,QAFlE,CAIJ,CCDA,SAASowB,GAAmBlgB,EAAYjT,GACpC,OAAOiT,EAAWjT,IAAQiT,EAAoB,SAAKA,CACvD,CCVA,MAAMmgB,IACc,ECWdC,GAAqB,CAAC/C,EAAWvtB,EAAOqJ,EAAQ6G,EAAa,CAAA,IACvDua,IACJ,MAAM8F,EAAkBH,GAAmBlgB,EAAYqd,IAAc,CAAA,EAM/DtD,EAAQsG,EAAgBtG,OAAS/Z,EAAW+Z,OAAS,EAK3D,IAAI+B,QAAEA,EAAU,GAAM9b,EACtB8b,GAAoB1Q,GAAsB2O,GAC1C,MAAMrF,ECvBd,SAAsB5kB,EAAOutB,EAAWlkB,EAAQ6G,GAC5C,MAAMsgB,EAAqB1B,GAAavB,EAAWlkB,GACnD,IAAIub,EAEAA,EADA9pB,MAAMC,QAAQsO,GACF,IAAIA,GAGJ,CAAC,KAAMA,GAEvB,MAAMonB,OAAoC,IAApBvgB,EAAWkQ,KAAqBlQ,EAAWkQ,KAAOpgB,EAAMe,MAC9E,IAAI2vB,EACJ,MAAMC,EAAsB,GAC5B,IAAA,IAAS3nB,EAAI,EAAGA,EAAI4b,EAAUtiB,OAAQ0G,IAIb,OAAjB4b,EAAU5b,KACV4b,EAAU5b,GAAW,IAANA,EAAUynB,EAAgB7L,EAAU5b,EAAI,IAEvDmnB,GAAOvL,EAAU5b,KACjB2nB,EAAoB9f,KAAK7H,GAGD,iBAAjB4b,EAAU5b,IACA,SAAjB4b,EAAU5b,IACO,MAAjB4b,EAAU5b,KACV0nB,EAA0B9L,EAAU5b,IAG5C,GAAIwnB,GACAG,EAAoBruB,QACpBouB,EACA,IAAA,IAAS1nB,EAAI,EAAGA,EAAI2nB,EAAoBruB,OAAQ0G,IAE5C4b,EADc+L,EAAoB3nB,IACf0Z,GAAkB6K,EAAWmD,GAGxD,OAAO9L,CACX,CDf0BgM,CAAa5wB,EAAOutB,EAAWlkB,EAAQknB,GAMnDM,EAAiBjM,EAAU,GAC3BkM,EAAiBlM,EAAUA,EAAUtiB,OAAS,GAC9CyuB,EAAqBjC,GAAavB,EAAWsD,GAC7CL,EAAqB1B,GAAavB,EAAWuD,GAEnD,IAAI5oB,EAAU,CACV0c,UAAAA,EACAxJ,SAAUpb,EAAM+B,cAChBqa,KAAM,aACHmU,EACHtG,OAAQ+B,EACRtB,SAAW7vB,IACPmF,EAAMkB,IAAIrG,GACV01B,EAAgB7F,UAAY6F,EAAgB7F,SAAS7vB,IAEzD4vB,WAAY,KACRA,IACA8F,EAAgB9F,YAAc8F,EAAgB9F,eAwBtD,GFrER,UAA6BuG,KAAEA,EAAM/G,MAAOgH,gBAAQC,EAAAC,gBAAeA,EAAAC,iBAAiBA,EAAAhH,OAAkBA,EAAAE,WAAQA,cAAYD,EAAAjK,KAAaA,EAAA4L,QAAMA,KAAY9b,IACrJ,QAAS1V,OAAO0R,KAAKgE,GAAY5N,MACrC,CEkDa+uB,CAAoBd,KACrBroB,EAAU,IACHA,KACA0mB,GAAqBrB,EAAWrlB,KAQvCA,EAAQ2c,WACR3c,EAAQ2c,SAAWvJ,GAAsBpT,EAAQ2c,WAEjD3c,EAAQmiB,cACRniB,EAAQmiB,YAAc/O,GAAsBpT,EAAQmiB,eAEnD0G,IACAP,GACD9U,KACyB,IAAzB6U,EAAgB3tB,MAChBytB,GAKA,OEhFZ,UAAkCzL,UAAAA,EAAWqF,MAAAA,EAAAA,SAAOS,EAAAD,WAAUA,IAC1D,MAAM6G,EAAW,KACb5G,GAAYA,EAAS9F,EAAUA,EAAUtiB,OAAS,IAClDmoB,GAAcA,IAQP,CACHmC,KAAM,EACN/B,MAAO,EACPhG,SAAU,EACV2H,KAAOpc,GACP2c,MAAQ3c,GACRoZ,KAAOpZ,GACPsc,KAAOzB,IACHA,IACOD,QAAQC,WAEnB3Z,OAASlB,GACT4c,SAAW5c,KAGnB,OAAO6Z,EACDF,GAAa,CACXnF,UAAW,CAAC,EAAG,GACfC,SAAU,EACVoF,MAAAA,EACAQ,WAAY6G,IAEdA,GACV,CF8CmBC,CAEDrpB,GAKV,IAMCgI,EAAWshB,WACRxxB,EAAMiuB,OACNjuB,EAAMiuB,MAAMjvB,mBAAmByyB,cAK9BzxB,EAAMiuB,MAAM7X,WAAWsU,SAAU,CAClC,MAAMgH,EAAuBpE,GAA2BttB,EAAOutB,EAAWrlB,GAC1E,GAAIwpB,EACA,OAAOA,CACf,CAIA,OAAO3H,GAAa7hB,IG7G5B,SAASypB,GAAwB3xB,GAC7B,OAAOtE,QAAQoG,EAAc9B,IAAUA,EAAM2Q,IACjD,CCDA,MAAMihB,GAAqB/2B,GAAM,iBAAiB0G,KAAK1G,GCHvD,SAASg3B,GAAcrN,EAAKsN,IACE,IAAtBtN,EAAIljB,QAAQwwB,IACZtN,EAAI3T,KAAKihB,EACjB,CACA,SAASC,GAAWvN,EAAKsN,GACrB,MAAM/gB,EAAQyT,EAAIljB,QAAQwwB,GACtB/gB,GAAQ,GACRyT,EAAIxT,OAAOD,EAAO,EAC1B,CCNA,MAAMihB,GACF,WAAAzhB,GACIC,KAAKyhB,cAAgB,EACzB,CACA,GAAAthB,CAAIqD,GAEA,OADA6d,GAAcrhB,KAAKyhB,cAAeje,GAC3B,IAAM+d,GAAWvhB,KAAKyhB,cAAeje,EAChD,CACA,MAAAke,CAAOnd,EAAGC,EAAGiH,GACT,MAAMkW,EAAmB3hB,KAAKyhB,cAAc3vB,OAC5C,GAAK6vB,EAEL,GAAyB,IAArBA,EAIA3hB,KAAKyhB,cAAc,GAAGld,EAAGC,EAAGiH,QAG5B,IAAA,IAASjT,EAAI,EAAGA,EAAImpB,EAAkBnpB,IAAK,CAKvC,MAAMgL,EAAUxD,KAAKyhB,cAAcjpB,GACnCgL,GAAWA,EAAQe,EAAGC,EAAGiH,EAC7B,CAER,CACA,OAAAmW,GACI,OAAO5hB,KAAKyhB,cAAc3vB,MAC9B,CACA,KAAA4O,GACIV,KAAKyhB,cAAc3vB,OAAS,CAChC,ECpBJ,MAAM+vB,GASF,WAAA9hB,CAAY5B,EAAMzG,EAAU,IApBhB,IAAClI,EAyBTwQ,KAAK8hB,QAAU,UAMf9hB,KAAK+hB,UAAY,EAMjB/hB,KAAKgiB,YAAc,EAQnBhiB,KAAKiiB,kBAAmB,EAIxBjiB,KAAKkiB,OAAS,CAAA,EACdliB,KAAKmiB,gBAAkB,CAAC93B,EAAG0E,GAAS,KAChCiR,KAAKwK,KAAOxK,KAAKxR,QACjBwR,KAAKxR,QAAUnE,EAEf,MAAMiX,MAAEA,EAAAC,UAAOA,GAAcP,GACzBhB,KAAKgiB,cAAgBzgB,IACrBvB,KAAK+hB,UAAYzgB,EACjBtB,KAAKgiB,YAAczgB,EACnBV,GAAMuhB,WAAWpiB,KAAKqiB,wBAGtBriB,KAAKwK,OAASxK,KAAKxR,SAAWwR,KAAKkiB,OAAOI,QAC1CtiB,KAAKkiB,OAAOI,OAAOZ,OAAO1hB,KAAKxR,SAG/BwR,KAAKkiB,OAAOK,gBACZviB,KAAKkiB,OAAOK,eAAeb,OAAO1hB,KAAKzO,eAGvCxC,GAAUiR,KAAKkiB,OAAOM,eACtBxiB,KAAKkiB,OAAOM,cAAcd,OAAO1hB,KAAKxR,UAW9CwR,KAAKqiB,sBAAwB,IAAMxhB,GAAMuhB,WAAWpiB,KAAKyiB,eAUzDziB,KAAKyiB,cAAgB,EAAGlhB,gBAChBA,IAAcvB,KAAKgiB,cACnBhiB,KAAKwK,KAAOxK,KAAKxR,QACbwR,KAAKkiB,OAAOK,gBACZviB,KAAKkiB,OAAOK,eAAeb,OAAO1hB,KAAKzO,iBAInDyO,KAAK0iB,aAAc,EACnB1iB,KAAKwK,KAAOxK,KAAKxR,QAAU2P,EAC3B6B,KAAKiiB,kBArGIzyB,EAqGuBwQ,KAAKxR,SApGjCyjB,MAAMrf,WAAWpD,KAqGrBwQ,KAAKyd,MAAQ/lB,EAAQ+lB,KACzB,CAyCA,QAAAkF,CAASC,GAIL,OAAO5iB,KAAK6iB,GAAG,SAAUD,EAC7B,CACA,EAAAC,CAAGtf,EAAWrB,GACLlC,KAAKkiB,OAAO3e,KACbvD,KAAKkiB,OAAO3e,GAAa,IAAIie,IAEjC,MAAMsB,EAAc9iB,KAAKkiB,OAAO3e,GAAWpD,IAAI+B,GAC/C,MAAkB,WAAdqB,EACO,KACHuf,IAKAjiB,GAAMmC,KAAK,KACFhD,KAAKkiB,OAAOI,OAAOV,WACpB5hB,KAAKgZ,UAKd8J,CACX,CACA,cAAAC,GACI,IAAA,MAAWC,KAAiBhjB,KAAKkiB,OAC7BliB,KAAKkiB,OAAOc,GAAetiB,OAEnC,CAMA,MAAAuiB,CAAOC,EAAeC,GAClBnjB,KAAKkjB,cAAgBA,EACrBljB,KAAKmjB,kBAAoBA,CAC7B,CAgBA,GAAAzyB,CAAIrG,EAAG0E,GAAS,GACPA,GAAWiR,KAAKkjB,cAIjBljB,KAAKkjB,cAAc74B,EAAG2V,KAAKmiB,iBAH3BniB,KAAKmiB,gBAAgB93B,EAAG0E,EAKhC,CACA,eAAAkvB,CAAgBzT,EAAMhc,EAAS8S,GAC3BtB,KAAKtP,IAAIlC,GACTwR,KAAKwK,KAAOA,EACZxK,KAAK+hB,UAAYzgB,CACrB,CAKA,IAAA8hB,CAAK/4B,GACD2V,KAAKmiB,gBAAgB93B,GACrB2V,KAAKwK,KAAOngB,EACZ2V,KAAKgZ,OACDhZ,KAAKmjB,mBACLnjB,KAAKmjB,mBACb,CAQA,GAAA5yB,GAII,OAAOyP,KAAKxR,OAChB,CAIA,WAAA60B,GACI,OAAOrjB,KAAKwK,IAChB,CAQA,WAAAjZ,GAEI,OAAOyO,KAAKiiB,iBAEJjN,GAAkBpiB,WAAWoN,KAAKxR,SAC9BoE,WAAWoN,KAAKwK,MAAOxK,KAAK+hB,WAClC,CACV,CAaA,KAAAt3B,CAAM64B,GAEF,OADAtjB,KAAKgZ,OACE,IAAIwB,QAASC,IAChBza,KAAK0iB,aAAc,EACnB1iB,KAAKjU,UAAYu3B,EAAe7I,GAC5Bza,KAAKkiB,OAAOqB,gBACZvjB,KAAKkiB,OAAOqB,eAAe7B,WAEhCxF,KAAK,KACAlc,KAAKkiB,OAAOsB,mBACZxjB,KAAKkiB,OAAOsB,kBAAkB9B,SAElC1hB,KAAKyjB,kBAEb,CAMA,IAAAzK,GACQhZ,KAAKjU,YACLiU,KAAKjU,UAAUitB,OACXhZ,KAAKkiB,OAAOwB,iBACZ1jB,KAAKkiB,OAAOwB,gBAAgBhC,UAGpC1hB,KAAKyjB,gBACT,CAMA,WAAAE,GACI,QAAS3jB,KAAKjU,SAClB,CACA,cAAA03B,UACWzjB,KAAKjU,SAChB,CAUA,OAAA63B,GACI5jB,KAAK+iB,iBACL/iB,KAAKgZ,OACDhZ,KAAKmjB,mBACLnjB,KAAKmjB,mBAEb,EAEJ,SAASU,GAAY1lB,EAAMzG,GACvB,OAAO,IAAImqB,GAAY1jB,EAAMzG,EACjC,CC3UA,MAAMosB,GAAiBz5B,GAAO+H,GAASA,EAAKrB,KAAK1G,GCK3C05B,GAAsB,CAACrxB,EAAQkB,EAAID,EAASD,EAASI,GAAID,ECLlD,CACT9C,KAAO1G,GAAY,SAANA,EACbsI,MAAQtI,GAAMA,IDOZ25B,GAA0B35B,GAAM05B,GAAoBzT,KAAKwT,GAAcz5B,IEJvE45B,GAAa,IAAIF,GAAqBpU,GAAOoC,IAI7CmS,GAAiB75B,GAAM45B,GAAW3T,KAAKwT,GAAcz5B,ICC3D,SAAS85B,GAAen2B,EAAevB,EAAK+C,GACpCxB,EAAco2B,SAAS33B,GACvBuB,EAAcq2B,SAAS53B,GAAKiE,IAAIlB,GAGhCxB,EAAcs2B,SAAS73B,EAAKo3B,GAAYr0B,GAEhD,CAgFA,SAAS+0B,GAAwB93B,EAAKiT,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAWjT,IAAQiT,EAAoB,SAAKA,GAC7CkQ,IAC3B,CC3FA,SAAS4U,IAAqBC,cAAEA,EAAAC,eAAeA,GAAkBj4B,GAC7D,MAAMk4B,EAAcF,EAAcv6B,eAAeuC,KAAgC,IAAxBi4B,EAAej4B,GAExE,OADAi4B,EAAej4B,IAAO,EACfk4B,CACX,CACA,SAASC,GAAoBp1B,EAAOqJ,GAChC,MAAMrK,EAAUgB,EAAMe,MACtB,IAAIjG,MAAMC,QAAQsO,GAOd,OAAOrK,IAAYqK,EANnB,IAAA,IAASL,EAAI,EAAGA,EAAIK,EAAO/G,OAAQ0G,IAC/B,GAAIK,EAAOL,KAAOhK,EACd,OAAO,CAMvB,CACA,SAASq2B,GAAc72B,EAAe+P,GAAc0b,MAAAA,EAAQ,EAAAqL,mBAAGA,EAAA1yB,KAAoBA,GAAS,IACxF,IAAIsN,WAAEA,EAAa1R,EAAcowB,qCAAwB3e,KAAkB5G,GAAW7K,EAAc+2B,qBAAqBhnB,GACzH,MAAMinB,EAAah3B,EAAcq2B,SAAS,cACtCS,IACAplB,EAAaolB,GACjB,MAAMG,EAAa,GACbC,EAAqB9yB,GACvBpE,EAAcgB,gBACdhB,EAAcgB,eAAem2B,WAAW/yB,GAC5C,IAAA,MAAW3F,KAAOoM,EAAQ,CACtB,MAAMrJ,EAAQxB,EAAcq2B,SAAS53B,GAC/BkT,EAAc9G,EAAOpM,GAC3B,IAAK+C,QACe,IAAhBmQ,GACCulB,GACGV,GAAqBU,EAAoBz4B,GAC7C,SAEJ,MAAMszB,EAAkB,CACpBtG,MAAAA,EACA+B,QAAS,KACNoE,GAAmBlgB,GAAc,CAAA,EAAIjT,IAM5C,GAAIoC,OAAOu2B,wBAAyB,CAChC,MAAMC,EAAWr3B,EAAc4X,WAAW/b,GAC1C,GAAIw7B,EAAU,CACV,MAAM7J,EAAU3sB,OAAOu2B,wBAAwBC,EAAU54B,EAAK+C,EAAOqR,IACrD,OAAZ2a,IACAuE,EAAgBvE,QAAUA,EAC1BuE,EAAgBiB,WAAY,EAEpC,CACJ,CACA,IAAIsE,GAAWvF,EAAgBiB,YAC1B4D,GAAoBp1B,EAAOmQ,GAahC,GAZ6B,WAAzBogB,EAAgB3tB,OACf5C,EAAM+B,eAAiBwuB,EAAgBnV,YACxC0a,GAAU,GAOV91B,EAAMzD,YACNu5B,GAAU,GAEVA,EACA,SACJ91B,EAAM/E,MAAMq1B,GAAmBrzB,EAAK+C,EAAOmQ,EAAa3R,EAAcu3B,oBAAsBr0B,EAAeT,IAAIhE,GACzG,CAAE2F,MAAM,GACR2tB,IACN,MAAMh0B,EAAYyD,EAAMzD,UACpBo1B,GAAwB6D,KACxBA,EAAW7kB,IAAI1T,GACfV,EAAUmwB,KAAK,IAAM8I,EAAW1kB,OAAO7T,KAE3Cw4B,EAAW5kB,KAAKtU,EACpB,CAMA,OALI0T,GACA+a,QAAQhT,IAAIyd,GAAY/I,KAAK,KACzBzc,GD3EZ,SAAmBzR,EAAe+P,GAC9B,MAAMyB,EAAWkL,GAAe1c,EAAe+P,GAC/C,IAAI0B,cAAEA,EAAgB,CAAA,EAAAC,WAAIA,EAAa,CAAA,KAAO7G,GAAW2G,EAAWxR,EAAc+2B,qBAAqBvlB,GAAU,GAAS,CAAA,EAC1H3G,EAAS,IAAKA,KAAW4G,GACzB,IAAA,MAAWhT,KAAOoM,EAEdsrB,GAAen2B,EAAevB,EADhB4R,GAA6BxF,EAAOpM,IAG1D,CCmE6B+4B,CAAUx3B,EAAeyR,KAG3CwlB,CACX,CCjGA,SAASQ,GAAez3B,EAAe03B,EAAShuB,EAAU,CAAA,GACtD,MAAM8H,EAAWkL,GAAe1c,EAAe03B,EAAShuB,EAAQxH,QAChE,IAAIwP,WAAEA,EAAa1R,EAAcowB,wBAA0B,CAAA,GAAO5e,GAAY,CAAA,EAC1E9H,EAAQotB,qBACRplB,EAAahI,EAAQotB,oBAMzB,MAAMa,EAAenmB,EACf,IAAMgb,QAAQhT,IAAIqd,GAAc72B,EAAewR,EAAU9H,IACzD,IAAM8iB,QAAQC,UAKdmL,EAAqB53B,EAAc63B,iBAAmB73B,EAAc63B,gBAAgB5wB,KACpF,CAAC6wB,EAAe,KACd,MAAMpF,cAAEA,EAAgB,EAAAC,gBAAGA,EAAAC,iBAAiBA,GAAsBlhB,EAClE,OAkBZ,SAAyB1R,EAAe03B,EAAShF,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAGlpB,GAC3G,MAAMutB,EAAa,GACbc,GAAsB/3B,EAAc63B,gBAAgB5wB,KAAO,GAAK0rB,EAChEqF,EAA+C,IAArBpF,EAC1B,CAACpoB,EAAI,IAAMA,EAAImoB,EACf,CAACnoB,EAAI,IAAMutB,EAAqBvtB,EAAImoB,EAU1C,OATAr2B,MAAMslB,KAAK5hB,EAAc63B,iBACpBI,KAAKC,IACL3mB,QAAQ,CAACyG,EAAOxN,KACjBwN,EAAM0b,OAAO,iBAAkBgE,GAC/BT,EAAW5kB,KAAKolB,GAAezf,EAAO0f,EAAS,IACxChuB,EACH+hB,MAAOiH,EAAgBsF,EAAwBxtB,KAChD0jB,KAAK,IAAMlW,EAAM0b,OAAO,oBAAqBgE,OAE7ClL,QAAQhT,IAAIyd,EACvB,CAlCmBkB,CAAgBn4B,EAAe03B,EAAShF,EAAgBoF,EAAcnF,EAAiBC,EAAkBlpB,IAElH,IAAM8iB,QAAQC,WAKd+F,KAAEA,GAAS9gB,EACjB,GAAI8gB,EAAM,CACN,MAAO4F,EAAOC,GAAiB,mBAAT7F,EAChB,CAACmF,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQlK,KAAK,IAAMmK,IAC9B,CAEI,OAAO7L,QAAQhT,IAAI,CAACme,IAAgBC,EAAmBluB,EAAQ+hB,QAEvE,CAkBA,SAASyM,GAAgB3hB,EAAGC,GACxB,OAAOD,EAAE+hB,iBAAiB9hB,EAC9B,CCpDA,MAAM+hB,GAAuB,IAAI77B,GAAsBkpB,UACjD4S,GAAoB97B,EAAqBoH,OAC/C,SAAS20B,GAAYz4B,GACjB,OAAQi3B,GAAezK,QAAQhT,IAAIyd,EAAW5Y,IAAI,EAAGtgB,YAAW2L,aCPpE,SAA8B1J,EAAe+P,EAAYrG,EAAU,CAAA,GAE/D,IAAI3L,EACJ,GAFAiC,EAAc0zB,OAAO,iBAAkB3jB,GAEnCzT,MAAMC,QAAQwT,GAAa,CAC3B,MAAMknB,EAAalnB,EAAWsO,IAAKqZ,GAAYD,GAAez3B,EAAe03B,EAAShuB,IACtF3L,EAAYyuB,QAAQhT,IAAIyd,EAC5B,MAAA,GAC+B,iBAAflnB,EACZhS,EAAY05B,GAAez3B,EAAe+P,EAAYrG,OAErD,CACD,MAAMgvB,EAA2C,mBAAf3oB,EAC5B2M,GAAe1c,EAAe+P,EAAYrG,EAAQxH,QAClD6N,EACNhS,EAAYyuB,QAAQhT,IAAIqd,GAAc72B,EAAe04B,EAAoBhvB,GAC7E,CACA,OAAO3L,EAAUmwB,KAAK,IAAMluB,EAAc0zB,OAAO,oBAAqB3jB,GAC1E,CDVkF4oB,CAAqB34B,EAAejC,EAAW2L,IACjI,CACA,SAASkvB,GAAqB54B,GAC1B,IAAIlD,EAAU27B,GAAYz4B,GAC1B,MAAMwJ,EA6RC,CACH1M,QAAS+7B,IAAgB,GACzBC,YAAaD,KACbhhB,WAAYghB,KACZ/sB,SAAU+sB,KACVE,UAAWF,KACXG,WAAYH,KACZ76B,KAAM66B,MAnSV,IAAII,GAAkB,EAKtB,MAAMC,EAA0B,CAACxlB,EAAK3D,KAClC,MAAMyB,EAAWkL,GAAe1c,EAAe+P,GAC/C,GAAIyB,EAAU,CACV,MAAME,WAAEA,EAAAD,cAAYA,KAAkB5G,GAAW2G,EACjDkC,EAAM,IAAKA,KAAQ7I,KAAW4G,EAClC,CACA,OAAOiC,GAmBX,SAASzS,EAAeyI,EAASyvB,GAC7B,MAAMt8B,EAAQmD,EAAc4X,WACtBta,EAAU0C,EAAco5B,mBAAkB,IAAS,CAAA,EAKnDnC,EAAa,GAKboC,MAAkBl2B,IAMxB,IAAIm2B,EAAkB,CAAA,EAKlBC,EAAsBpO,IAO1B,IAAA,IAAS3gB,EAAI,EAAGA,EAAIguB,GAAmBhuB,IAAK,CACxC,MAAMpG,EAAOm0B,GAAqB/tB,GAC5BgvB,EAAYhwB,EAAMpF,GAClBxG,OAAuB,IAAhBf,EAAMuH,GAAsBvH,EAAMuH,GAAQ9G,EAAQ8G,GACzDq1B,EAAgBr9B,EAAewB,GAK/B87B,EAAct1B,IAAS+0B,EAAoBK,EAAU/hB,SAAW,MAClD,IAAhBiiB,IACAH,EAAsB/uB,GAO1B,IAAImvB,EAAc/7B,IAASN,EAAQ8G,IAASxG,IAASf,EAAMuH,IAASq1B,EAepE,GAXIE,GACAV,GACAj5B,EAAc45B,yBACdD,GAAc,GAMlBH,EAAU/C,cAAgB,IAAK6C,IAI7BE,EAAU/hB,UAA4B,OAAhBiiB,IAElB97B,IAAS47B,EAAUK,UAErBr9B,EAAoBoB,IACJ,kBAATA,EACP,SAQJ,IAAIk8B,EADqBC,GAAuBP,EAAUK,SAAUj8B,IAG/DwG,IAAS+0B,GACNK,EAAU/hB,WACTkiB,GACDF,GAEHjvB,EAAI+uB,GAAuBE,EAC5BO,GAAuB,EAK3B,MAAMC,EAAiB39B,MAAMC,QAAQqB,GAAQA,EAAO,CAACA,GAKrD,IAAIs8B,EAAiBD,EAAexmB,OAAOylB,EAAyB,CAAA,IAChD,IAAhBQ,IACAQ,EAAiB,CAAA,GAUrB,MAAMC,mBAAEA,EAAqB,CAAA,GAAOX,EAC9BY,EAAU,IACTD,KACAD,GAEDG,EAAiB57B,IACnBq7B,GAAoB,EAChBT,EAAY52B,IAAIhE,KAChBu7B,GAAuB,EACvBX,EAAY5mB,OAAOhU,IAEvB+6B,EAAU9C,eAAej4B,IAAO,GAEpC,IAAA,MAAWA,KAAO27B,EAAS,CACvB,MAAM7d,EAAO2d,EAAez7B,GACtB+d,EAAO2d,EAAmB17B,GAEhC,GAAI66B,EAAgBp9B,eAAeuC,GAC/B,SAIJ,IAAI67B,GAAkB,EAElBA,EADAlqB,GAAkBmM,IAASnM,GAAkBoM,IAC1BF,GAAeC,EAAMC,GAGtBD,IAASC,EAE3B8d,OACa,IAAT/d,EAEA8d,EAAc57B,GAId46B,EAAYlnB,IAAI1T,QAGN,IAAT8d,GAAsB8c,EAAY52B,IAAIhE,GAK3C47B,EAAc57B,GAOd+6B,EAAU/C,cAAch4B,IAAO,CAEvC,CAKA+6B,EAAUK,SAAWj8B,EACrB47B,EAAUW,mBAAqBD,EAI3BV,EAAU/hB,WACV6hB,EAAkB,IAAKA,KAAoBY,IAE3CjB,GAAmBj5B,EAAcS,wBACjCq5B,GAAoB,IAKpBA,GAAuBH,IAAeK,GACtC/C,EAAW5kB,QAAQ4nB,EAAe5b,IAAKtgB,IAAA,CACnCA,YACA2L,QAAS,CAAEtF,UAASsF,MAGhC,CAMA,GAAI2vB,EAAYpyB,KAAM,CAClB,MAAMszB,EAAoB,CAAA,EAC1BlB,EAAY9nB,QAAS9S,IACjB,MAAM+7B,EAAiBx6B,EAAcy6B,cAAch8B,QAC5B,IAAnB+7B,IACAD,EAAkB97B,GAAO+7B,KAGjCvD,EAAW5kB,KAAK,CAAEtU,UAAWw8B,GACjC,CACA,IAAIG,EAAgBx9B,QAAQ+5B,EAAWnzB,QAOvC,OANIm1B,IACmB,IAAlBp8B,EAAMQ,SAAqBR,EAAMQ,UAAYR,EAAMC,SACnDkD,EAAc45B,yBACfc,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgB59B,EAAQm6B,GAAczK,QAAQC,SACzD,CAkBA,MAAO,CACHxrB,iBACA6W,UAhBJ,SAAmB1T,EAAMqT,EAAU/N,GAC/B,IAAI0C,EAEJ,GAAI5C,EAAMpF,GAAMqT,WAAaA,EACzB,OAAO+U,QAAQC,UAEsB,QAAxCrgB,EAAKpM,EAAc63B,uBAAoC,IAAPzrB,GAAyBA,EAAGmF,QAASyG,IAAY,IAAI5L,EAAI,OAAuC,QAA/BA,EAAK4L,EAAMhX,sBAAmC,IAAPoL,OAAgB,EAASA,EAAG0L,UAAU1T,EAAMqT,KACrMjO,EAAMpF,GAAMqT,SAAWA,EACvB,MAAMwf,EAAah2B,EAAeyI,EAAStF,GAC3C,IAAA,MAAW3F,KAAO+K,EACdA,EAAM/K,GAAKg4B,cAAgB,CAAA,EAE/B,OAAOQ,CACX,EAII0D,mBArPJ,SAA4BC,GACxB99B,EAAU89B,EAAa56B,EAC3B,EAoPIm3B,SAAU,IAAM3tB,EAExB,CACA,SAASuwB,GAAuBvd,EAAMD,GAClC,MAAoB,iBAATA,EACAA,IAASC,IAEXlgB,MAAMC,QAAQggB,KACXD,GAAeC,EAAMC,EAGrC,CACA,SAASqc,GAAgBphB,GAAW,GAChC,MAAO,CACHA,WACAgf,cAAe,CAAA,EACfC,eAAgB,CAAA,EAChByD,mBAAoB,CAAA,EAE5B,CExSA,IAAIp4B,GAAK,ECCT,MAAMk1B,GAAa,CACfl5B,UAAW,CACPsZ,QCDR,cAA+BA,GAM3B,WAAAtF,CAAYuF,GACRoC,MAAMpC,GACNA,EAAKtW,iBAAmBsW,EAAKtW,eAAiB43B,GAAqBthB,GACvE,CACA,mCAAAujB,GACI,MAAM/9B,QAAEA,GAAYkV,KAAKsF,KAAKM,WAC9B5F,KAAKpQ,UACDpF,EAAoBM,KACpBkV,KAAKpQ,QAAU9E,EAAQg+B,UAAU9oB,KAAKsF,MAE9C,CAIA,KAAA3V,GACIqQ,KAAK6oB,qCACT,CACA,MAAAl6B,GACI,MAAM7D,QAAEA,GAAYkV,KAAKsF,KAAKM,YACtB9a,QAASi+B,GAAgB/oB,KAAKsF,KAAK9H,WAAa,CAAA,EACpD1S,IAAYi+B,GACZ/oB,KAAK6oB,qCAEb,CACA,OAAAj5B,GAAY,ID3BZ5D,KAAM,CACFqZ,QDLR,cAAmCA,GAC/B,WAAAtF,GACI2H,SAASC,WACT3H,KAAKjQ,GAAKA,IACd,CACA,MAAApB,GACI,IAAKqR,KAAKsF,KAAKnX,gBACX,OACJ,MAAM66B,UAAEA,EAAAC,eAAWA,EAAA/4B,OAAgBA,GAAW8P,KAAKsF,KAAKnX,iBAChD66B,UAAWE,GAAkBlpB,KAAKsF,KAAK6jB,qBAAuB,CAAA,EACtE,IAAKnpB,KAAKsF,KAAKtW,gBAAkBg6B,IAAcE,EAC3C,OAEJ,MAAME,EAAgBppB,KAAKsF,KAAKtW,eAAe8W,UAAU,QAASkjB,EAAW,CAAE94B,OAAQA,QAAuCA,EAAS8P,KAAKsF,KAAKM,WAAW1V,SACxJ+4B,IAAmBD,GACnBI,EAAclN,KAAK,IAAM+M,EAAejpB,KAAKjQ,IAErD,CACA,KAAAJ,GACI,MAAM05B,SAAEA,GAAarpB,KAAKsF,KAAKnX,iBAAmB,CAAA,EAC9Ck7B,IACArpB,KAAKpQ,QAAUy5B,EAASrpB,KAAKjQ,IAErC,CACA,OAAAH,GAAY,KG3BV8G,GAAW,CAAC6N,EAAGC,IAAM/R,KAAK4a,IAAI9I,EAAIC,GCWxC,MAAM8kB,GACF,WAAAvpB,CAAY8D,EAAO0lB,GAAU3gC,mBAAEA,EAAA4gC,cAAoBA,mBAAeC,GAAmB,GAAU,IAgE3F,GA5DAzpB,KAAK6I,WAAa,KAIlB7I,KAAK0pB,cAAgB,KAIrB1pB,KAAK2pB,kBAAoB,KAIzB3pB,KAAKupB,SAAW,CAAA,EAIhBvpB,KAAKwpB,cAAgB36B,OACrBmR,KAAK4pB,YAAc,KACf,IAAM5pB,KAAK0pB,gBAAiB1pB,KAAK2pB,kBAC7B,OACJ,MAAMhkB,EAAOkkB,GAAW7pB,KAAK2pB,kBAAmB3pB,KAAK8pB,SAC/CC,EAAmC,OAApB/pB,KAAK6I,WAIpBmhB,EDxClB,SAAoBzlB,EAAGC,GAEnB,MAAMylB,EAASvzB,GAAS6N,EAAE9S,EAAG+S,EAAE/S,GACzBy4B,EAASxzB,GAAS6N,EAAE7S,EAAG8S,EAAE9S,GAC/B,OAAOe,KAAK0d,KAAK8Z,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAWxkB,EAAKpL,OAAQ,CAAE9I,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKq4B,IAAiBC,EAClB,OACJ,MAAQ7lB,MAAAA,GAAUwB,GACVpE,UAAAA,GAAcP,GACtBhB,KAAK8pB,QAAQzpB,KAAK,IAAK8D,EAAO5C,UAAAA,IAC9B,MAAM6oB,QAAEA,EAAAC,OAASA,GAAWrqB,KAAKupB,SAC5BQ,IACDK,GAAWA,EAAQpqB,KAAK0pB,cAAe/jB,GACvC3F,KAAK6I,WAAa7I,KAAK0pB,eAE3BW,GAAUA,EAAOrqB,KAAK0pB,cAAe/jB,IAEzC3F,KAAKsqB,kBAAoB,CAACzmB,EAAO8B,KAC7B3F,KAAK0pB,cAAgB7lB,EACrB7D,KAAK2pB,kBAAoBY,GAAe5kB,EAAM3F,KAAKpX,oBAEnDiY,GAAMlS,OAAOqR,KAAK4pB,aAAa,IAEnC5pB,KAAKwqB,gBAAkB,CAAC3mB,EAAO8B,KAC3B3F,KAAKyqB,MACL,MAAMC,MAAEA,EAAAC,aAAOA,EAAAC,gBAAcA,GAAoB5qB,KAAKupB,SAGtD,GAFIvpB,KAAKypB,kBACLmB,GAAmBA,KACjB5qB,KAAK0pB,gBAAiB1pB,KAAK2pB,kBAC7B,OACJ,MAAMkB,EAAUhB,GAA0B,kBAAfhmB,EAAMzR,KAC3B4N,KAAK2pB,kBACLY,GAAe5kB,EAAM3F,KAAKpX,oBAAqBoX,KAAK8pB,SACtD9pB,KAAK6I,YAAc6hB,GACnBA,EAAM7mB,EAAOgnB,GAEjBF,GAAgBA,EAAa9mB,EAAOgnB,KAGnCjnB,GAAiBC,GAClB,OACJ7D,KAAKypB,iBAAmBA,EACxBzpB,KAAKupB,SAAWA,EAChBvpB,KAAKpX,mBAAqBA,EAC1BoX,KAAKwpB,cAAgBA,GAAiB36B,OACtC,MACMi8B,EAAcP,GADPtmB,GAAiBJ,GACW7D,KAAKpX,qBACxCub,MAAEA,GAAU2mB,GACZvpB,UAAEA,GAAcP,GACtBhB,KAAK8pB,QAAU,CAAC,IAAK3lB,EAAO5C,cAC5B,MAAMwpB,eAAEA,GAAmBxB,EAC3BwB,GACIA,EAAelnB,EAAOgmB,GAAWiB,EAAa9qB,KAAK8pB,UACvD9pB,KAAKgrB,gBAAkBvmB,GAAKL,GAAgBpE,KAAKwpB,cAAe,cAAexpB,KAAKsqB,mBAAoBlmB,GAAgBpE,KAAKwpB,cAAe,YAAaxpB,KAAKwqB,iBAAkBpmB,GAAgBpE,KAAKwpB,cAAe,gBAAiBxpB,KAAKwqB,iBAC9O,CACA,cAAAS,CAAe1B,GACXvpB,KAAKupB,SAAWA,CACpB,CACA,GAAAkB,GACIzqB,KAAKgrB,iBAAmBhrB,KAAKgrB,kBAC7BjqB,GAAYf,KAAK4pB,YACrB,EAEJ,SAASW,GAAe5kB,EAAM/c,GAC1B,OAAOA,EAAqB,CAAEub,MAAOvb,EAAmB+c,EAAKxB,QAAWwB,CAC5E,CACA,SAASulB,GAAc3mB,EAAGC,GACtB,MAAO,CAAE/S,EAAG8S,EAAE9S,EAAI+S,EAAE/S,EAAGC,EAAG6S,EAAE7S,EAAI8S,EAAE9S,EACtC,CACA,SAASm4B,IAAW1lB,MAAEA,GAAS2lB,GAC3B,MAAO,CACH3lB,QACA7C,MAAO4pB,GAAc/mB,EAAOgnB,GAAgBrB,IAC5CvvB,OAAQ2wB,GAAc/mB,EAAOinB,GAAiBtB,IAC9Clf,SAAUrZ,GAAYu4B,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQh4B,OAAS,EACpC,CACA,SAASP,GAAYu4B,EAAS/H,GAC1B,GAAI+H,EAAQh4B,OAAS,EACjB,MAAO,CAAEL,EAAG,EAAGC,EAAG,GAEtB,IAAI8G,EAAIsxB,EAAQh4B,OAAS,EACrBu5B,EAAmB,KACvB,MAAMC,EAAYH,GAAgBrB,GAClC,KAAOtxB,GAAK,IACR6yB,EAAmBvB,EAAQtxB,KACvB8yB,EAAU/pB,UAAY8pB,EAAiB9pB,UACvCuJ,GAAsBiX,MAG1BvpB,IAEJ,IAAK6yB,EACD,MAAO,CAAE55B,EAAG,EAAGC,EAAG,GAEtB,MAAM0qB,EAAOpR,GAAsBsgB,EAAU/pB,UAAY8pB,EAAiB9pB,WAC1E,GAAa,IAAT6a,EACA,MAAO,CAAE3qB,EAAG,EAAGC,EAAG,GAEtB,MAAMuM,EAAkB,CACpBxM,GAAI65B,EAAU75B,EAAI45B,EAAiB55B,GAAK2qB,EACxC1qB,GAAI45B,EAAU55B,EAAI25B,EAAiB35B,GAAK0qB,GAQ5C,OANIne,EAAgBxM,IAAM0nB,MACtBlb,EAAgBxM,EAAI,GAEpBwM,EAAgBvM,IAAMynB,MACtBlb,EAAgBvM,EAAI,GAEjBuM,CACX,CCvJA,SAASstB,GAAWC,GAChB,OAAOA,EAAKh5B,IAAMg5B,EAAKj5B,GAC3B,CACA,SAASk5B,GAAOj8B,EAAOqJ,EAAS,EAAG6yB,EAAc,KAC7C,OAAOj5B,KAAK4a,IAAI7d,EAAQqJ,IAAW6yB,CACvC,CACA,SAASC,GAAcrqB,EAAOxI,EAAQD,EAAQyB,EAAS,IACnDgH,EAAMhH,OAASA,EACfgH,EAAMsqB,YAAcptB,GAAI1F,EAAOvG,IAAKuG,EAAOtG,IAAK8O,EAAMhH,QACtDgH,EAAMxO,MAAQy4B,GAAW1yB,GAAU0yB,GAAWzyB,IAC1C2yB,GAAOnqB,EAAMxO,MAAO,EAAG,OAAWmf,MAAM3Q,EAAMxO,UAC9CwO,EAAMxO,MAAQ,GAClBwO,EAAMuqB,UACFrtB,GAAI3F,EAAOtG,IAAKsG,EAAOrG,IAAK8O,EAAMhH,QAAUgH,EAAMsqB,aAClDH,GAAOnqB,EAAMuqB,YAAc5Z,MAAM3Q,EAAMuqB,cACvCvqB,EAAMuqB,UAAY,EAC1B,CACA,SAASC,GAAaxqB,EAAOxI,EAAQD,EAAQyB,GACzCqxB,GAAcrqB,EAAM7P,EAAGqH,EAAOrH,EAAGoH,EAAOpH,EAAG6I,EAASA,EAAOtD,aAAU,GACrE20B,GAAcrqB,EAAM5P,EAAGoH,EAAOpH,EAAGmH,EAAOnH,EAAG4I,EAASA,EAAOrD,aAAU,EACzE,CACA,SAAS80B,GAAiBlzB,EAAQmzB,EAAU/9B,GACxC4K,EAAOtG,IAAMtE,EAAOsE,IAAMy5B,EAASz5B,IACnCsG,EAAOrG,IAAMqG,EAAOtG,IAAMg5B,GAAWS,EACzC,CAKA,SAASC,GAAyBpzB,EAAQtM,EAAQ0B,GAC9C4K,EAAOtG,IAAMhG,EAAOgG,IAAMtE,EAAOsE,IACjCsG,EAAOrG,IAAMqG,EAAOtG,IAAMg5B,GAAWh/B,EACzC,CACA,SAAS2/B,GAAqBrzB,EAAQtM,EAAQ0B,GAC1Cg+B,GAAyBpzB,EAAOpH,EAAGlF,EAAOkF,EAAGxD,EAAOwD,GACpDw6B,GAAyBpzB,EAAOnH,EAAGnF,EAAOmF,EAAGzD,EAAOyD,EACxD,CCZA,SAASy6B,GAA4BX,EAAMj5B,EAAKC,GAC5C,MAAO,CACHD,SAAa,IAARA,EAAoBi5B,EAAKj5B,IAAMA,OAAM,EAC1CC,SAAa,IAARA,EACCg5B,EAAKh5B,IAAMA,GAAOg5B,EAAKh5B,IAAMg5B,EAAKj5B,UAClC,EAEd,CAcA,SAAS65B,GAA4BC,EAAYC,GAC7C,IAAI/5B,EAAM+5B,EAAgB/5B,IAAM85B,EAAW95B,IACvCC,EAAM85B,EAAgB95B,IAAM65B,EAAW75B,IAO3C,OAJI85B,EAAgB95B,IAAM85B,EAAgB/5B,IACtC85B,EAAW75B,IAAM65B,EAAW95B,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAM+5B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHp6B,IAAKq6B,GAAoBH,EAAaC,GACtCl6B,IAAKo6B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,iBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,MAWMC,GAAY,KAAA,CACdr7B,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,KCVzC,SAASu6B,GAAS7qB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAAS8qB,IAAwB93B,IAAEA,EAAAG,KAAKA,EAAAF,MAAMA,EAAAC,OAAOA,IACjD,MAAO,CACH3D,EAAG,CAAEc,IAAK8C,EAAM7C,IAAK2C,GACrBzD,EAAG,CAAEa,IAAK2C,EAAK1C,IAAK4C,GAE5B,CCVA,SAAS63B,GAAgBn6B,GACrB,YAAiB,IAAVA,GAAiC,IAAVA,CAClC,CACA,SAASo6B,IAAWp6B,MAAAA,EAAAA,OAAOsD,EAAAC,OAAQA,IAC/B,OAAS42B,GAAgBn6B,KACpBm6B,GAAgB72B,KAChB62B,GAAgB52B,EACzB,CACA,SAAS0B,GAAauE,GAClB,OAAQ4wB,GAAS5wB,IACb6wB,GAAe7wB,IACfA,EAAO3K,GACP2K,EAAOtG,QACPsG,EAAOrG,SACPqG,EAAOpG,OACf,CACA,SAASi3B,GAAe7wB,GACpB,OAAO8wB,GAAc9wB,EAAO7K,IAAM27B,GAAc9wB,EAAO5K,EAC3D,CACA,SAAS07B,GAAc59B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAAS69B,GAAWlpB,EAAOrR,EAAO84B,GAG9B,OAAOA,EADQ94B,GADYqR,EAAQynB,EAGvC,CAIA,SAAS0B,GAAgBnpB,EAAO0nB,EAAW/4B,EAAO84B,EAAa2B,GAI3D,YAHiB,IAAbA,IACAppB,EAAQkpB,GAAWlpB,EAAOopB,EAAU3B,IAEjCyB,GAAWlpB,EAAOrR,EAAO84B,GAAeC,CACnD,CAIA,SAAS2B,GAAehC,EAAMK,EAAY,EAAG/4B,EAAQ,EAAG84B,EAAa2B,GACjE/B,EAAKj5B,IAAM+6B,GAAgB9B,EAAKj5B,IAAKs5B,EAAW/4B,EAAO84B,EAAa2B,GACpE/B,EAAKh5B,IAAM86B,GAAgB9B,EAAKh5B,IAAKq5B,EAAW/4B,EAAO84B,EAAa2B,EACxE,CAIA,SAASE,GAAcC,GAAKj8B,EAAEA,EAAAC,EAAGA,IAC7B87B,GAAeE,EAAIj8B,EAAGA,EAAEo6B,UAAWp6B,EAAEqB,MAAOrB,EAAEm6B,aAC9C4B,GAAeE,EAAIh8B,EAAGA,EAAEm6B,UAAWn6B,EAAEoB,MAAOpB,EAAEk6B,YAClD,CAuDA,SAAS+B,GAAc76B,GACnB,OAAI86B,OAAOC,UAAU/6B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAASg7B,GAActC,EAAM90B,GACzB80B,EAAKj5B,IAAMi5B,EAAKj5B,IAAMmE,EACtB80B,EAAKh5B,IAAMg5B,EAAKh5B,IAAMkE,CAC1B,CAMA,SAASq3B,GAAcvC,EAAMwC,GAAavhC,EAAKwhC,EAAUC,IACrD,MAAMC,OAAuC,IAA1BH,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EtC,EAAcptB,GAAIgtB,EAAKj5B,IAAKi5B,EAAKh5B,IAAK27B,GAE5CX,GAAehC,EAAMwC,EAAWvhC,GAAMuhC,EAAWC,GAAWrC,EAAaoC,EAAWl7B,MACxF,CAIA,MAAMs7B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKr7B,GACvB07B,GAAcL,EAAIj8B,EAAGY,EAAW+7B,IAChCL,GAAcL,EAAIh8B,EAAGW,EAAWg8B,GACpC,CCpHA,SAASE,GAAmB7+B,EAAU66B,GAClC,OAAOyC,GHeX,SAA4B7oB,EAAOomB,GAC/B,IAAKA,EACD,OAAOpmB,EACX,MAAMqqB,EAAUjE,EAAe,CAAE94B,EAAG0S,EAAM9O,KAAM3D,EAAGyS,EAAMjP,MACnDu5B,EAAclE,EAAe,CAAE94B,EAAG0S,EAAMhP,MAAOzD,EAAGyS,EAAM/O,SAC9D,MAAO,CACHF,IAAKs5B,EAAQ98B,EACb2D,KAAMm5B,EAAQ/8B,EACd2D,OAAQq5B,EAAY/8B,EACpByD,MAAOs5B,EAAYh9B,EAE3B,CG1BmCi9B,CAAmBh/B,EAASwT,wBAAyBqnB,GACxF,CCJA,MAAMoE,GAAmB,EAAGngC,aACjBA,EAAUA,EAAQogC,cAAcC,YAAc,KCiBnDC,OAA0BxoB,QAKhC,MAAMyoB,GACF,WAAAhvB,CAAY/R,GAIRgS,KAAKgvB,eAAiB,KACtBhvB,KAAKivB,YAAa,EAClBjvB,KAAKkvB,iBAAmB,KACxBlvB,KAAK4rB,YAAc,CAAEn6B,EAAG,EAAGC,EAAG,GAI9BsO,KAAKmvB,aAAc,EACnBnvB,KAAKovB,uBAAwB,EAI7BpvB,KAAKqvB,QP9BK,CACd59B,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IOgCjCwN,KAAKhS,cAAgBA,CACzB,CACA,KAAAvD,CAAM6kC,GAAaC,aAAEA,GAAe,GAAU,CAAA,GAI1C,MAAMphC,gBAAEA,GAAoB6R,KAAKhS,cACjC,GAAIG,IAAiD,IAA9BA,EAAgB66B,UACnC,OACJ,MA4FMS,iBAAEA,GAAqBzpB,KAAK4F,WAClC5F,KAAKwvB,WAAa,IAAIlG,GAAWgG,EAAa,CAC1CvE,eA9FoBlnB,IACpB,MAAQ4lB,iBAAAA,GAAqBzpB,KAAK4F,WAGlC6jB,EAAmBzpB,KAAKyvB,iBAAmBzvB,KAAK0vB,gBAC5CH,GACAvvB,KAAKuvB,aAAatrB,GAAiBJ,EAAO,QAAQM,QAyFtDimB,QAtFY,CAACvmB,EAAO8B,KAEpB,MAAQ1Z,KAAAA,EAAAA,gBAAM0jC,cAAiBC,GAAgB5vB,KAAK4F,WACpD,GAAI3Z,IAAS0jC,IACL3vB,KAAKgvB,gBACLhvB,KAAKgvB,iBACThvB,KAAKgvB,eAAiBhqB,GAAc/Y,IAE/B+T,KAAKgvB,gBACN,OAERhvB,KAAKivB,YAAa,EAClBjvB,KAAKkvB,iBAAmB,KACxBlvB,KAAK6vB,qBACD7vB,KAAKhS,cAAc+O,aACnBiD,KAAKhS,cAAc+O,WAAW+yB,oBAAqB,EACnD9vB,KAAKhS,cAAc+O,WAAWlE,YAAS,GAK3Ck0B,GAAUvB,IACN,IAAIh9B,EAAUwR,KAAK+vB,mBAAmBvE,GAAMj7B,OAAS,EAIrD,GAAIoD,EAAQ5C,KAAKvC,GAAU,CACvB,MAAMuO,WAAEA,GAAeiD,KAAKhS,cAC5B,GAAI+O,GAAcA,EAAWxQ,OAAQ,CACjC,MAAMyjC,EAAejzB,EAAWxQ,OAAO0jC,UAAUzE,GACjD,GAAIwE,EAAc,CAEdxhC,EADe+8B,GAAWyE,IACNp9B,WAAWpE,GAAW,IAC9C,CACJ,CACJ,CACAwR,KAAK4rB,YAAYJ,GAAQh9B,IAGzBohC,GACA/uB,GAAMlS,OAAO,IAAMihC,EAAY/rB,EAAO8B,IAAO,GAAO,GAExD,MAAM3W,eAAEA,GAAmBgR,KAAKhS,cAChCgB,GAAkBA,EAAe8W,UAAU,aAAa,IA4CxDukB,OA1CW,CAACxmB,EAAO8B,KAEnB,MAAMgqB,gBAAEA,EAAAO,kBAAiBA,EAAAC,gBAAmBA,SAAiBC,GAAYpwB,KAAK4F,WAE9E,IAAK+pB,IAAoB3vB,KAAKgvB,eAC1B,OACJ,MAAMz0B,OAAEA,GAAWoL,EAEnB,GAAIuqB,GAA+C,OAA1BlwB,KAAKkvB,iBAM1B,OALAlvB,KAAKkvB,iBAmWrB,SAA6B30B,EAAQ81B,EAAgB,IACjD,IAAI9S,EAAY,KACZ9qB,KAAK4a,IAAI9S,EAAO7I,GAAK2+B,EACrB9S,EAAY,IAEP9qB,KAAK4a,IAAI9S,EAAO9I,GAAK4+B,IAC1B9S,EAAY,KAEhB,OAAOA,CACX,CA5WwC+S,CAAoB/1B,QAEd,OAA1ByF,KAAKkvB,kBACLiB,GAAmBA,EAAgBnwB,KAAKkvB,mBAKhDlvB,KAAKuwB,WAAW,IAAK5qB,EAAKxB,MAAO5J,GACjCyF,KAAKuwB,WAAW,IAAK5qB,EAAKxB,MAAO5J,GAOjCyF,KAAKhS,cAAce,SAKnBqhC,GAAUA,EAAOvsB,EAAO8B,IAaxBglB,aAXiB,CAAC9mB,EAAO8B,IAAS3F,KAAKgZ,KAAKnV,EAAO8B,GAYnDilB,gBAXoB,IAAMmC,GAAUvB,IACpC,IAAIpxB,EACJ,MAAwC,WAAjC4F,KAAKwwB,kBAAkBhF,KAC0B,QAAlDpxB,EAAK4F,KAAK+vB,mBAAmBvE,GAAMz/B,iBAA8B,IAAPqO,OAAgB,EAASA,EAAG4hB,WAS7F,CACCpzB,mBAAoBoX,KAAKhS,cAAcyiC,wBACvChH,mBACAD,cAAemF,GAAiB3uB,KAAKhS,gBAE7C,CACA,IAAAgrB,CAAKnV,EAAO8B,GACR,MAAMspB,EAAajvB,KAAKivB,WAExB,GADAjvB,KAAKc,UACAmuB,EACD,OACJ,MAAMrkB,SAAEA,GAAajF,EACrB3F,KAAKsjB,eAAe1Y,GACpB,MAAM8lB,UAAEA,GAAc1wB,KAAK4F,WACvB8qB,GACA7vB,GAAMlS,OAAO,IAAM+hC,EAAU7sB,EAAO8B,GAE5C,CACA,MAAA7E,GACId,KAAKivB,YAAa,EAClB,MAAMlyB,WAAEA,EAAA/N,eAAYA,GAAmBgR,KAAKhS,cACxC+O,IACAA,EAAW+yB,oBAAqB,GAEpC9vB,KAAKwvB,YAAcxvB,KAAKwvB,WAAW/E,MACnCzqB,KAAKwvB,gBAAa,EAClB,MAAMG,gBAAEA,GAAoB3vB,KAAK4F,YAC5B+pB,GAAmB3vB,KAAKgvB,iBACzBhvB,KAAKgvB,iBACLhvB,KAAKgvB,eAAiB,MAE1BhgC,GAAkBA,EAAe8W,UAAU,aAAa,EAC5D,CACA,UAAAyqB,CAAW/E,EAAMmF,EAAQp2B,GACrB,MAAQtO,KAAAA,GAAS+T,KAAK4F,WAEtB,IAAKrL,IAAWq2B,GAAWpF,EAAMv/B,EAAM+T,KAAKkvB,kBACxC,OACJ,MAAM2B,EAAY7wB,KAAK+vB,mBAAmBvE,GAC1C,IAAIjhB,EAAOvK,KAAK4rB,YAAYJ,GAAQjxB,EAAOixB,GAEvCxrB,KAAKmvB,aAAenvB,KAAKmvB,YAAY3D,KACrCjhB,ERtLZ,SAA0BpG,GAAO5R,IAAEA,EAAAC,IAAKA,GAAO68B,GAS3C,YARY,IAAR98B,GAAqB4R,EAAQ5R,EAE7B4R,EAAQkrB,EAAU7wB,GAAIjM,EAAK4R,EAAOkrB,EAAQ98B,KAAOE,KAAKD,IAAI2R,EAAO5R,QAEpD,IAARC,GAAqB2R,EAAQ3R,IAElC2R,EAAQkrB,EAAU7wB,GAAIhM,EAAK2R,EAAOkrB,EAAQ78B,KAAOC,KAAKF,IAAI4R,EAAO3R,IAE9D2R,CACX,CQ4KmB2sB,CAAiBvmB,EAAMvK,KAAKmvB,YAAY3D,GAAOxrB,KAAKqvB,QAAQ7D,KAEvEqF,EAAUngC,IAAI6Z,EAClB,CACA,kBAAAslB,GACI,IAAIz1B,EACJ,MAAM22B,gBAAEA,EAAAtE,YAAiBA,GAAgBzsB,KAAK4F,WACxCrZ,EAASyT,KAAKhS,cAAc+O,aAC7BiD,KAAKhS,cAAc+O,WAAWxQ,OAC7ByT,KAAKhS,cAAc+O,WAAWi0B,SAAQ,GACG,QAAxC52B,EAAK4F,KAAKhS,cAAc+O,kBAA+B,IAAP3C,OAAgB,EAASA,EAAG7N,OAC7E0kC,EAAkBjxB,KAAKmvB,YACzB4B,GAAmBjnC,EAAYinC,GAC1B/wB,KAAKmvB,cACNnvB,KAAKmvB,YAAcnvB,KAAKkxB,yBAKxBlxB,KAAKmvB,eADL4B,IAAmBxkC,IR5KnC,SAAiC0jC,GAAW/6B,IAAEA,OAAKG,EAAAD,OAAMA,EAAAD,MAAQA,IAC7D,MAAO,CACH1D,EAAG06B,GAA4B8D,EAAUx+B,EAAG4D,EAAMF,GAClDzD,EAAGy6B,GAA4B8D,EAAUv+B,EAAGwD,EAAKE,GAEzD,CQwKmC+7B,CAAwB5kC,EAAO0jC,UAAWc,GAMrE/wB,KAAKqvB,QRrHb,SAA4B5C,EAAcF,IAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH96B,EAAG+6B,GAAmBC,EAAa,OAAQ,SAC3C/6B,EAAG86B,GAAmBC,EAAa,MAAO,UAElD,CQ0GuB2E,CAAmB3E,GAK9BwE,IAAoBjxB,KAAKmvB,aACzB5iC,GACAyT,KAAKmvB,cACJnvB,KAAKovB,uBACNrC,GAAUvB,IACFxrB,KAAK+vB,mBAAmBvE,KACxBxrB,KAAKmvB,YAAY3D,GR9IrC,SAA+Bj/B,EAAQ4iC,GACnC,MAAMkC,EAAsB,CAAA,EAO5B,YANwB,IAApBlC,EAAY58B,MACZ8+B,EAAoB9+B,IAAM48B,EAAY58B,IAAMhG,EAAOgG,UAE/B,IAApB48B,EAAY38B,MACZ6+B,EAAoB7+B,IAAM28B,EAAY38B,IAAMjG,EAAOgG,KAEhD8+B,CACX,CQqI6CC,CAAsB/kC,EAAO0jC,UAAUzE,GAAOxrB,KAAKmvB,YAAY3D,MAIxG,CACA,qBAAA0F,GACI,MAAQH,gBAAiB5B,EAAAoC,yBAAaA,GAA6BvxB,KAAK4F,WACxE,IAAKupB,IAAgBrlC,EAAYqlC,GAC7B,OAAO,EACX,MAAMqC,EAAqBrC,EAAY3gC,SAEjCuO,WAAEA,GAAeiD,KAAKhS,cAE5B,IAAK+O,IAAeA,EAAWxQ,OAC3B,OAAO,EACX,MAAMklC,EF7Od,SAAwB50B,EAAS60B,EAAoB9oC,GACjD,MAAM+oC,EAAcpD,GAAmB1xB,EAASjU,IAC1CgpC,OAAEA,GAAWF,EAKnB,OAJIE,IACA9D,GAAc6D,EAAYlgC,EAAGmgC,EAAOr3B,OAAO9I,GAC3Cq8B,GAAc6D,EAAYjgC,EAAGkgC,EAAOr3B,OAAO7I,IAExCigC,CACX,CEqO+BE,CAAeL,EAAoBz0B,EAAW+J,KAAM9G,KAAKhS,cAAcyiC,yBAC9F,IAAIqB,ERvLZ,SAAiC7B,EAAWwB,GACxC,MAAO,CACHhgC,EAAG26B,GAA4B6D,EAAUx+B,EAAGggC,EAAehgC,GAC3DC,EAAG06B,GAA4B6D,EAAUv+B,EAAG+/B,EAAe//B,GAEnE,CQkLkCqgC,CAAwBh1B,EAAWxQ,OAAO0jC,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EL/OpC,UAAiC9/B,EAAEA,EAAAC,EAAGA,IAClC,MAAO,CAAEwD,IAAKxD,EAAEa,IAAK4C,MAAO1D,EAAEe,IAAK4C,OAAQ1D,EAAEc,IAAK6C,KAAM5D,EAAEc,IAC9D,CK6O6D0/B,CAAwBH,IACzE9xB,KAAKovB,wBAA0B4C,EAC3BA,IACAF,EAAsB9E,GAAwBgF,GAEtD,CACA,OAAOF,CACX,CACA,cAAAxO,CAAe1Y,GACX,MAAQ3e,KAAAA,EAAAA,aAAMimC,EAAAzF,YAAcA,EAAA0F,eAAaA,mBAAgB1I,EAAA2I,oBAAkBA,GAAyBpyB,KAAK4F,WACnGupB,EAAcnvB,KAAKmvB,aAAe,CAAA,EAClCkD,EAAqBtF,GAAUvB,IACjC,IAAKoF,GAAWpF,EAAMv/B,EAAM+T,KAAKkvB,kBAC7B,OAEJ,IAAIxvB,EAAcyvB,GAAeA,EAAY3D,IAAU,CAAA,EACnD/B,IACA/pB,EAAa,CAAEnN,IAAK,EAAGC,IAAK,IAOhC,MAAM0lB,EAAkBuU,EAAc,IAAM,IACtCxU,EAAgBwU,EAAc,GAAK,IACnC3U,EAAU,CACZ1lB,KAAM,UACNwY,SAAUsnB,EAAetnB,EAAS4gB,GAAQ,EAC1CtT,kBACAD,gBACAD,aAAc,IACdrB,UAAW,EACXC,UAAW,MACRub,KACAzyB,GAKP,OAAOM,KAAKsyB,wBAAwB9G,EAAM1T,KAG9C,OAAO0C,QAAQhT,IAAI6qB,GAAoBnW,KAAKkW,EAChD,CACA,uBAAAE,CAAwB9G,EAAM9rB,GAC1B,MAAMmxB,EAAY7wB,KAAK+vB,mBAAmBvE,GAC1C,OAAOqF,EAAUpmC,MAAMq1B,GAAmB0L,EAAMqF,EAAW,EAAGnxB,GAClE,CACA,aAAAgwB,GACI3C,GAAUvB,GAASxrB,KAAK+vB,mBAAmBvE,GAAMxS,OACrD,CACA,cAAAyW,GACI1C,GAAUvB,IAAW,IAAIpxB,EAAI,OAA0D,QAAlDA,EAAK4F,KAAK+vB,mBAAmBvE,GAAMz/B,iBAA8B,IAAPqO,OAAgB,EAASA,EAAGmiB,SAC/H,CACA,iBAAAiU,CAAkBhF,GACd,IAAIpxB,EACJ,OAA0D,QAAlDA,EAAK4F,KAAK+vB,mBAAmBvE,GAAMz/B,iBAA8B,IAAPqO,OAAgB,EAASA,EAAG5C,KAClG,CAOA,kBAAAu4B,CAAmBvE,GACf,MAAM+G,EAAU,QAAU/G,EAAK5tB,cACzB/S,EAAQmV,KAAKhS,cAAc4X,WAC3B4sB,EAAsB3nC,EAAM0nC,GAClC,OAAOC,GAEDxyB,KAAKhS,cAAcq2B,SAASmH,GAAO3gC,EAAMQ,QAAUR,EAAMQ,QAAQmgC,QAAQ,IAAc,EACjG,CACA,YAAA+D,CAAaprB,GACT4oB,GAAUvB,IACN,MAAQv/B,KAAAA,GAAS+T,KAAK4F,WAEtB,IAAKgrB,GAAWpF,EAAMv/B,EAAM+T,KAAKkvB,kBAC7B,OACJ,MAAMnyB,WAAEA,GAAeiD,KAAKhS,cACtB6iC,EAAY7wB,KAAK+vB,mBAAmBvE,GAC1C,GAAIzuB,GAAcA,EAAWxQ,OAAQ,CACjC,MAAMgG,IAAEA,EAAAC,IAAKA,GAAQuK,EAAWxQ,OAAO0jC,UAAUzE,GACjDqF,EAAUngC,IAAIyT,EAAMqnB,GAAQhtB,GAAIjM,EAAKC,EAAK,IAC9C,GAER,CAMA,8BAAAigC,GACI,IAAKzyB,KAAKhS,cAAcQ,QACpB,OACJ,MAAQvC,KAAAA,EAAAA,gBAAM8kC,GAAoB/wB,KAAK4F,YACjC7I,WAAEA,GAAeiD,KAAKhS,cAC5B,IAAKlE,EAAYinC,KAAqBh0B,IAAeiD,KAAKmvB,YACtD,OAKJnvB,KAAK0vB,gBAKL,MAAMgD,EAAc,CAAEjhC,EAAG,EAAGC,EAAG,GAC/Bq7B,GAAUvB,IACN,MAAMqF,EAAY7wB,KAAK+vB,mBAAmBvE,GAC1C,GAAIqF,EAAW,CACX,MAAM31B,EAAS21B,EAAUtgC,MACzBmiC,EAAYlH,GRpS5B,SAAoB1yB,EAAQD,GACxB,IAAIyB,EAAS,GACb,MAAMq4B,EAAepH,GAAWzyB,GAC1B85B,EAAerH,GAAW1yB,GAOhC,OANI+5B,EAAeD,EACfr4B,EAASwV,GAASjX,EAAOtG,IAAKsG,EAAOrG,IAAMmgC,EAAc75B,EAAOvG,KAE3DogC,EAAeC,IACpBt4B,EAASwV,GAAShX,EAAOvG,IAAKuG,EAAOtG,IAAMogC,EAAc/5B,EAAOtG,MAE7DD,EAAM,EAAG,EAAGgI,EACvB,CQyRoCD,CAAW,CAAE9H,IAAK2I,EAAQ1I,IAAK0I,GAAU8E,KAAKmvB,YAAY3D,GAClF,IAKJ,MAAM7zB,kBAAEA,GAAsBqI,KAAKhS,cAAc4X,WACjD5F,KAAKhS,cAAcQ,QAAQoJ,MAAMvF,UAAYsF,EACvCA,EAAkB,CAAA,EAAI,IACtB,OACNoF,EAAW+J,MAAQ/J,EAAW+J,KAAK+rB,eACnC91B,EAAW+1B,eACX9yB,KAAK6vB,qBAKL9C,GAAUvB,IACN,IAAKoF,GAAWpF,EAAMv/B,EAAM,MACxB,OAIJ,MAAM4kC,EAAY7wB,KAAK+vB,mBAAmBvE,IACpCj5B,IAAEA,EAAAC,IAAKA,GAAQwN,KAAKmvB,YAAY3D,GACtCqF,EAAUngC,IAAI8N,GAAIjM,EAAKC,EAAKkgC,EAAYlH,MAEhD,CACA,YAAAuH,GACI,IAAK/yB,KAAKhS,cAAcQ,QACpB,OACJsgC,GAAoBp+B,IAAIsP,KAAKhS,cAAegS,MAC5C,MAIMgzB,EAAsB5uB,GAJZpE,KAAKhS,cAAcQ,QAIkB,cAAgBqV,IACjE,MAAQ5X,KAAAA,EAAAA,aAAMoN,GAAe,GAAS2G,KAAK4F,WAC3C3Z,GAAQoN,GAAgB2G,KAAKvV,MAAMoZ,KAEjCovB,EAAyB,KAC3B,MAAMlC,gBAAEA,GAAoB/wB,KAAK4F,WAC7B9b,EAAYinC,KACZ/wB,KAAKmvB,YAAcnvB,KAAKkxB,2BAG1Bn0B,WAAEA,GAAeiD,KAAKhS,cACtBklC,EAA4Bn2B,EAAW2G,iBAAiB,UAAWuvB,GACrEl2B,IAAeA,EAAWxQ,SAC1BwQ,EAAW+J,MAAQ/J,EAAW+J,KAAK+rB,eACnC91B,EAAW+1B,gBAEfG,IAKA,MAAME,EAAqB7vB,GAAYzU,OAAQ,SAAU,IAAMmR,KAAKyyB,kCAK9DW,EAA2Br2B,EAAW2G,iBAAiB,YAAc,EAAGpC,QAAO+xB,uBAC7ErzB,KAAKivB,YAAcoE,IACnBtG,GAAUvB,IACN,MAAM3H,EAAc7jB,KAAK+vB,mBAAmBvE,GACvC3H,IAEL7jB,KAAK4rB,YAAYJ,IAASlqB,EAAMkqB,GAAMK,UACtChI,EAAYnzB,IAAImzB,EAAYtzB,MAAQ+Q,EAAMkqB,GAAMK,cAEpD7rB,KAAKhS,cAAce,YAG3B,MAAO,KACHokC,IACAH,IACAE,IACAE,GAA4BA,IAEpC,CACA,QAAAxtB,GACI,MAAM/a,EAAQmV,KAAKhS,cAAc4X,YACzB3Z,KAAAA,GAAO,EAAAikC,kBAAOA,GAAoB,EAAAP,gBAAOA,GAAkB,EAAAoB,gBAAOA,GAAkB,EAAAtE,YAAOA,EAAcF,GAAA2F,aAAgBA,GAAe,GAAUrnC,EAC1J,MAAO,IACAA,EACHoB,KAAAA,EACAikC,oBACAP,kBACAoB,kBACAtE,cACAyF,eAER,EAEJ,SAAStB,GAAWrT,EAAWtxB,EAAMijC,GACjC,SAAkB,IAATjjC,GAAiBA,IAASsxB,GACT,OAArB2R,GAA6BA,IAAqB3R,EAC3D,CCtcA,MAAM+V,GAAgB9vB,GAAY,CAACK,EAAO8B,KAClCnC,GACA3C,GAAMlS,OAAO,IAAM6U,EAAQK,EAAO8B,KCJ1C,MAAM4tB,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQnI,GAC7B,OAAIA,EAAKh5B,MAAQg5B,EAAKj5B,IACX,EACHohC,GAAUnI,EAAKh5B,IAAMg5B,EAAKj5B,KAAQ,GAC9C,CAQA,MAAMqhC,GAAsB,CACxBC,QAAS,CAAC34B,EAAQoK,KACd,IAAKA,EAAKzM,OACN,OAAOqC,EAKX,GAAsB,iBAAXA,EAAqB,CAC5B,IAAItH,EAAG7C,KAAKmK,GAIR,OAAOA,EAHPA,EAAStI,WAAWsI,EAK5B,CAOA,MAAO,GAFGw4B,GAAgBx4B,EAAQoK,EAAKzM,OAAOpH,OACpCiiC,GAAgBx4B,EAAQoK,EAAKzM,OAAOnH,QChChDoiC,GAAmB,CACrBD,QAAS,CAAC34B,GAAU64B,YAAWC,sBAC3B,MAAMC,EAAW/4B,EACXg5B,EAASniB,GAAQpf,MAAMuI,GAE7B,GAAIg5B,EAAOpiC,OAAS,EAChB,OAAOmiC,EACX,MAAMrhB,EAAWb,GAAQJ,kBAAkBzW,GACrCX,EAA8B,iBAAd25B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgBviC,EAAEqB,MAAQihC,EAAUtiC,EAC7C2iC,EAASJ,EAAgBtiC,EAAEoB,MAAQihC,EAAUriC,EACnDwiC,EAAO,EAAI35B,IAAW45B,EACtBD,EAAO,EAAI35B,IAAW65B,EAOtB,MAAMC,EAAe71B,GAAI21B,EAAQC,EAAQ,IAOzC,MALkC,iBAAvBF,EAAO,EAAI35B,KAClB25B,EAAO,EAAI35B,IAAW85B,GAEQ,iBAAvBH,EAAO,EAAI35B,KAClB25B,EAAO,EAAI35B,IAAW85B,GACnBzhB,EAASshB,KCpBxB,MAAMI,WAAiCC,EAAelnC,UAMlD,iBAAAmnC,GACI,MAAMxmC,cAAEA,EAAAymC,YAAeA,EAAAC,kBAAaA,EAAA7mC,SAAmBA,GAAamS,KAAKnV,OACnEkS,WAAEA,GAAe/O,EjJjB/B,IAA2B2mC,IiJkBDC,GjJjBtB5qC,OAAOgP,OAAOhI,EAAiB2jC,GiJkBvB53B,IACI03B,EAAYI,OACZJ,EAAYI,MAAM10B,IAAIpD,GACtB23B,GAAqBA,EAAkBrL,UAAYx7B,GACnD6mC,EAAkBrL,SAAStsB,GAE/BA,EAAW+J,KAAKguB,YAChB/3B,EAAW2G,iBAAiB,oBAAqB,KAC7C1D,KAAK+0B,iBAETh4B,EAAWi4B,WAAW,IACfj4B,EAAWrF,QACduxB,eAAgB,IAAMjpB,KAAK+0B,kBAGnCxB,GAAsBE,gBAAiB,CAC3C,CACA,uBAAAwB,CAAwBz3B,GACpB,MAAM03B,iBAAEA,EAAAlnC,cAAkBA,EAAe/B,KAAAA,EAAAA,UAAM+8B,GAAchpB,KAAKnV,MAC5DkS,EAAa/O,EAAc+O,WACjC,OAAKA,GASLA,EAAWisB,UAAYA,EACnB/8B,GACAuR,EAAU03B,mBAAqBA,QACV,IAArBA,EACAn4B,EAAWo4B,aAGXn1B,KAAK+0B,eAELv3B,EAAUwrB,YAAcA,IACpBA,EACAjsB,EAAWq4B,UAELr4B,EAAWs4B,YAMjBx0B,GAAMuhB,WAAW,KACb,MAAMkT,EAAQv4B,EAAWw4B,WACpBD,GAAUA,EAAME,QAAQ1jC,QACzBkO,KAAK+0B,kBAKd,MAnCI,IAoCf,CACA,kBAAAU,GACI,MAAM14B,WAAEA,GAAeiD,KAAKnV,MAAMmD,cAC9B+O,IACAA,EAAW+J,KAAKguB,YAChBY,eAAe,MACN34B,EAAW44B,kBAAoB54B,EAAW64B,UAC3C51B,KAAK+0B,iBAIrB,CACA,oBAAAc,GACI,MAAM7nC,cAAEA,EAAAymC,YAAeA,EAAaC,kBAAmBoB,GAAoB91B,KAAKnV,OAC1EkS,WAAEA,GAAe/O,EACnB+O,IACAA,EAAWg5B,4BACPtB,GAAeA,EAAYI,OAC3BJ,EAAYI,MAAMv0B,OAAOvD,GACzB+4B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAWj5B,GAEtC,CACA,YAAAg4B,GACI,MAAMA,aAAEA,GAAiB/0B,KAAKnV,MAC9BkqC,GAAgBA,GACpB,CACA,MAAAhmC,GACI,OAAO,IACX,EAEJ,SAASpB,GAAc9C,GACnB,MAAOm+B,EAAW+L,GCnFtB,WACI,MAAMzpC,EAAUG,EAAAA,WAAWxC,GAC3B,GAAgB,OAAZqC,EACA,MAAO,EAAC,EAAM,MAClB,MAAM09B,UAAEA,EAAAC,eAAWA,EAAAI,SAAgBA,GAAa/9B,EAG1CyE,EAAKkmC,EAAAA,QAGX,OAFA3sC,EAAAA,UAAU,IAAM+/B,EAASt5B,GAAK,KAEtBi5B,GAAaC,EAAiB,EAAC,EADlB,IAAMA,GAAkBA,EAAel5B,IACE,EAAC,EACnE,CDwEsCmmC,GAC5BzB,EAAchpC,EAAAA,WAAWkB,GAC/B,OAAQ4nC,EAAe53B,cAAc23B,GAA0B,IAAKzpC,EAAO4pC,cAA0BC,kBAAmBjpC,EAAAA,WAAWmB,GAA2Bo8B,YAAsB+L,gBACxL,CACA,MAAMH,GAAyB,CAC3BrgC,aAAc,IACPq/B,GACHuC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGR1hC,oBAAqBm/B,GACrBl/B,qBAAsBk/B,GACtBh/B,uBAAwBg/B,GACxBj/B,wBAAyBi/B,GACzBwC,UAAWtC,IEzHTuC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQvkC,OACrBykC,GAAY/mC,GAA2B,iBAAVA,EAAqBoD,WAAWpD,GAASA,EACtEgnC,GAAQhnC,GAA2B,iBAAVA,GAAsBoE,EAAG7C,KAAKvB,GA0C7D,SAASinC,GAAUn6B,EAAQo6B,GACvB,YAA8B,IAAvBp6B,EAAOo6B,GACRp6B,EAAOo6B,GACPp6B,EAAO/H,YACjB,CAwBA,MAAMoiC,GAAkBC,GAAS,EAAG,GAAK3qB,IACnC4qB,GAAmBD,GAAS,GAAK,IAAMh3B,IAC7C,SAASg3B,GAASrkC,EAAKC,EAAK4Y,GACxB,OAAQviB,GAEAA,EAAI0J,EACG,EACP1J,EAAI2J,EACG,EACJ4Y,EAAO0E,GAASvd,EAAKC,EAAK3J,GAEzC,CCrFA,SAASiuC,GAAatL,EAAMuL,GACxBvL,EAAKj5B,IAAMwkC,EAAWxkC,IACtBi5B,EAAKh5B,IAAMukC,EAAWvkC,GAC1B,CAMA,SAASwkC,GAAYtJ,EAAKuJ,GACtBH,GAAapJ,EAAIj8B,EAAGwlC,EAAUxlC,GAC9BqlC,GAAapJ,EAAIh8B,EAAGulC,EAAUvlC,EAClC,CCVA,SAASwlC,GAAiB/yB,EAAO0nB,EAAW/4B,EAAO84B,EAAa2B,GAM5D,OAJAppB,EAAQkpB,GADRlpB,GAAS0nB,EACiB,EAAI/4B,EAAO84B,QACpB,IAAb2B,IACAppB,EAAQkpB,GAAWlpB,EAAO,EAAIopB,EAAU3B,IAErCznB,CACX,CAsBA,SAASgzB,GAAqB3L,EAAMwC,GAAavhC,EAAKwhC,EAAUC,GAAY5zB,EAAQ88B,IAlBpF,SAAyB5L,EAAMK,EAAY,EAAG/4B,EAAQ,EAAGwH,EAAS,GAAKizB,EAAUwJ,EAAavL,EAAM4L,EAAa5L,GACzG73B,EAAQ5C,KAAK86B,KACbA,EAAYj5B,WAAWi5B,GAEvBA,EADyBrtB,GAAI44B,EAAW7kC,IAAK6kC,EAAW5kC,IAAKq5B,EAAY,KAC1CuL,EAAW7kC,KAE9C,GAAyB,iBAAds5B,EACP,OACJ,IAAID,EAAcptB,GAAIu4B,EAAWxkC,IAAKwkC,EAAWvkC,IAAK8H,GAClDkxB,IAASuL,IACTnL,GAAeC,GACnBL,EAAKj5B,IAAM2kC,GAAiB1L,EAAKj5B,IAAKs5B,EAAW/4B,EAAO84B,EAAa2B,GACrE/B,EAAKh5B,IAAM0kC,GAAiB1L,EAAKh5B,IAAKq5B,EAAW/4B,EAAO84B,EAAa2B,EACzE,CAMI8J,CAAgB7L,EAAMwC,EAAWvhC,GAAMuhC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWl7B,MAAOwH,EAAQ88B,EAClH,CAIA,MAAMhJ,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASiJ,GAAoB5J,EAAKM,EAAYiJ,EAAWM,GACrDJ,GAAqBzJ,EAAIj8B,EAAGu8B,EAAYI,GAAO6I,EAAYA,EAAUxlC,OAAI,EAAW8lC,EAAYA,EAAU9lC,OAAI,GAC9G0lC,GAAqBzJ,EAAIh8B,EAAGs8B,EAAYK,GAAO4I,EAAYA,EAAUvlC,OAAI,EAAW6lC,EAAYA,EAAU7lC,OAAI,EAClH,CCjDA,SAAS8lC,GAAgBl2B,GACrB,OAA2B,IAApBA,EAAMuqB,WAAmC,IAAhBvqB,EAAMxO,KAC1C,CACA,SAAS2kC,GAAYn2B,GACjB,OAAOk2B,GAAgBl2B,EAAM7P,IAAM+lC,GAAgBl2B,EAAM5P,EAC7D,CAOA,SAASgmC,GAAiBnzB,EAAGC,GACzB,OAAQ/R,KAAKQ,MAAMsR,EAAE9S,EAAEc,OAASE,KAAKQ,MAAMuR,EAAE/S,EAAEc,MAC3CE,KAAKQ,MAAMsR,EAAE9S,EAAEe,OAASC,KAAKQ,MAAMuR,EAAE/S,EAAEe,MACvCC,KAAKQ,MAAMsR,EAAE7S,EAAEa,OAASE,KAAKQ,MAAMuR,EAAE9S,EAAEa,MACvCE,KAAKQ,MAAMsR,EAAE7S,EAAEc,OAASC,KAAKQ,MAAMuR,EAAE9S,EAAEc,IAC/C,CACA,SAASmlC,GAAYjK,GACjB,OAAOnC,GAAWmC,EAAIj8B,GAAK85B,GAAWmC,EAAIh8B,EAC9C,CCpBA,MAAMkmC,GACF,WAAA73B,GACIC,KAAKw1B,QAAU,EACnB,CACA,GAAAr1B,CAAImF,GACA+b,GAAcrhB,KAAKw1B,QAASlwB,GAC5BA,EAAKuyB,gBACT,CACA,MAAAv3B,CAAOgF,GAKH,GAJAic,GAAWvhB,KAAKw1B,QAASlwB,GACrBA,IAAStF,KAAK83B,WACd93B,KAAK83B,cAAW,GAEhBxyB,IAAStF,KAAK+3B,KAAM,CACpB,MAAMD,EAAW93B,KAAKw1B,QAAQx1B,KAAKw1B,QAAQ1jC,OAAS,GAChDgmC,GACA93B,KAAKo1B,QAAQ0C,EAErB,CACJ,CACA,QAAAzC,CAAS/vB,GACL,MAAM0yB,EAAch4B,KAAKw1B,QAAQyC,UAAWC,GAAW5yB,IAAS4yB,GAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAA,IAASt/B,EAAIw/B,EAAax/B,GAAK,EAAGA,IAAK,CACnC,MAAM0/B,EAASl4B,KAAKw1B,QAAQh9B,GAC5B,IAAyB,IAArB0/B,EAAOlP,UAAqB,CAC5B8O,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACA93B,KAAKo1B,QAAQ0C,IACN,EAKf,CACA,OAAA1C,CAAQ9vB,EAAM6yB,GACV,MAAML,EAAW93B,KAAK+3B,KACtB,GAAIzyB,IAASwyB,IAEb93B,KAAK83B,SAAWA,EAChB93B,KAAK+3B,KAAOzyB,EACZA,EAAK8yB,OACDN,GAAU,CACVA,EAASpoC,UAAYooC,EAASD,iBAC9BvyB,EAAKuyB,iBACLvyB,EAAK+yB,WAAaP,EACdK,IACA7yB,EAAK+yB,WAAWC,iBAAkB,GAElCR,EAASS,WACTjzB,EAAKizB,SAAWT,EAASS,SACzBjzB,EAAKizB,SAAS9gC,aACVqgC,EAASU,iBAAmBV,EAASrgC,cAEzC6N,EAAKwB,MAAQxB,EAAKwB,KAAK2xB,aACvBnzB,EAAKozB,eAAgB,GAEzB,MAAMC,UAAEA,GAAcrzB,EAAK5N,SACT,IAAdihC,GACAb,EAASc,MAcjB,CACJ,CACA,qBAAAC,GACI74B,KAAKw1B,QAAQj2B,QAAS+F,IAClB,MAAM5N,QAAEA,EAAAohC,aAASA,GAAiBxzB,EAClC5N,EAAQuxB,gBAAkBvxB,EAAQuxB,iBAC9B6P,GACAA,EAAaphC,QAAQuxB,gBACjB6P,EAAaphC,QAAQuxB,kBAGrC,CACA,cAAA4O,GACI73B,KAAKw1B,QAAQj2B,QAAS+F,IAClBA,EAAK5V,UAAY4V,EAAKuyB,gBAAe,IAE7C,CAKA,kBAAAkB,GACQ/4B,KAAK+3B,MAAQ/3B,KAAK+3B,KAAKQ,WACvBv4B,KAAK+3B,KAAKQ,cAAW,EAE7B,EC5GJ,SAASS,GAAyB13B,EAAOyyB,EAAWkF,GAChD,IAAI5mC,EAAY,GAOhB,MAAM6mC,EAAa53B,EAAM7P,EAAEo6B,UAAYkI,EAAUtiC,EAC3C0nC,EAAa73B,EAAM5P,EAAEm6B,UAAYkI,EAAUriC,EAWjD,IAVIwnC,GAAcC,KACd9mC,EAAY,eAAe6mC,QAAiBC,YAM5B,IAAhBpF,EAAUtiC,GAA2B,IAAhBsiC,EAAUriC,IAC/BW,GAAa,SAAS,EAAI0hC,EAAUtiC,MAAM,EAAIsiC,EAAUriC,OAExDunC,EAAiB,CACjB,MAAMjjC,OAAEA,EAAAC,QAAQA,EAAAC,QAASA,GAAY+iC,EACjCjjC,IACA3D,GAAa,UAAU2D,UACvBC,IACA5D,GAAa,WAAW4D,UACxBC,IACA7D,GAAa,WAAW6D,SAChC,CAKA,MAAMkjC,EAAgB93B,EAAM7P,EAAEqB,MAAQihC,EAAUtiC,EAC1C4nC,EAAgB/3B,EAAM5P,EAAEoB,MAAQihC,EAAUriC,EAIhD,OAHsB,IAAlB0nC,GAAyC,IAAlBC,IACvBhnC,GAAa,SAAS+mC,MAAkBC,MAErChnC,GAAa,MACxB,CCvCA,MAAMinC,GAAiB,CAAC/0B,EAAGC,IAAMD,EAAEg1B,MAAQ/0B,EAAE+0B,MCG7C,MAAMC,GACF,WAAAz5B,GACIC,KAAKvD,SAAW,GAChBuD,KAAKy5B,SAAU,CACnB,CACA,GAAAt5B,CAAI6F,GACAqb,GAAcrhB,KAAKvD,SAAUuJ,GAC7BhG,KAAKy5B,SAAU,CACnB,CACA,MAAAn5B,CAAO0F,GACHub,GAAWvhB,KAAKvD,SAAUuJ,GAC1BhG,KAAKy5B,SAAU,CACnB,CACA,OAAAl6B,CAAQ2C,GACJlC,KAAKy5B,SAAWz5B,KAAKvD,SAASwpB,KAAKqT,IACnCt5B,KAAKy5B,SAAU,EACfz5B,KAAKvD,SAAS8C,QAAQ2C,EAC1B,ECMJ,MAAMw3B,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAI7pC,GAAK,EAKT,MAAM8pC,GAAsB,CACxBznC,KAAM,kBACN0nC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,IAAqBC,qBAAEA,EAAAC,cAAsBA,gBAAeC,EAAAC,kBAAeA,EAAAC,eAAmBA,IACnG,OAAO,MACH,WAAAv6B,CAAYtI,EAAe,GAAIxJ,GAASksC,aAAqD,EAASA,MAIlGn6B,KAAKjQ,GAAKA,KAIViQ,KAAKu6B,YAAc,EAOnBv6B,KAAKvD,aAAetL,IAKpB6O,KAAKtI,QAAU,CAAA,EAMfsI,KAAKw6B,iBAAkB,EACvBx6B,KAAK8vB,oBAAqB,EAO1B9vB,KAAK04B,eAAgB,EAKrB14B,KAAKy6B,mBAAoB,EAKzBz6B,KAAK06B,yBAA0B,EAK/B16B,KAAK26B,kBAAmB,EAIxB36B,KAAK46B,uBAAwB,EAC7B56B,KAAK66B,uBAAwB,EAK7B76B,KAAKy4B,YAAa,EAIlBz4B,KAAK86B,OAAQ,EAKb96B,KAAK+6B,YAAa,EAIlB/6B,KAAKg7B,sBAAuB,EAS5Bh7B,KAAK+zB,UAAY,CAAEtiC,EAAG,EAAGC,EAAG,GAI5BsO,KAAKi7B,kBAAoB3qC,IACzB0P,KAAKk7B,iBAAkB,EAEvBl7B,KAAKm7B,iBAAkB,EACvBn7B,KAAKo7B,2BAA4B,EACjCp7B,KAAKq7B,kBAAoB,KACjBr7B,KAAKy4B,aACLz4B,KAAKy4B,YAAa,EAClBz4B,KAAKs7B,sBAQbt7B,KAAKu7B,iBAAmB,KCnJpC,IAAgBC,EDoJAx7B,KAAKo7B,2BAA4B,EAKjCvB,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZh6B,KAAKy7B,MAAMl8B,QAAQm8B,IACnB17B,KAAKy7B,MAAMl8B,QAAQo8B,IACnB37B,KAAKy7B,MAAMl8B,QAAQq8B,IACnB57B,KAAKy7B,MAAMl8B,QAAQs8B,IChKnBL,EDiKO3B,GChKfhrC,OAAOitC,aACPjtC,OAAOitC,YAAYC,OAAOP,IDiKtBx7B,KAAKg8B,cAAe,EACpBh8B,KAAKi8B,WAAY,EACjBj8B,KAAKk8B,kBAAoB,EAKzBl8B,KAAKm8B,gBAAkB7rC,IACvB0P,KAAKvI,aAAeA,EACpBuI,KAAK8G,KAAO7Y,EAASA,EAAO6Y,MAAQ7Y,EAAS+R,KAC7CA,KAAKo8B,KAAOnuC,EAAS,IAAIA,EAAOmuC,KAAMnuC,GAAU,GAChD+R,KAAK/R,OAASA,EACd+R,KAAKu5B,MAAQtrC,EAASA,EAAOsrC,MAAQ,EAAI,EACzC,IAAA,IAAS/gC,EAAI,EAAGA,EAAIwH,KAAKo8B,KAAKtqC,OAAQ0G,IAClCwH,KAAKo8B,KAAK5jC,GAAGwiC,sBAAuB,EAEpCh7B,KAAK8G,OAAS9G,OACdA,KAAKy7B,MAAQ,IAAIjC,GACzB,CACA,gBAAA91B,CAAiB1Y,EAAMwY,GAInB,OAHKxD,KAAKi7B,cAAcxqC,IAAIzF,IACxBgV,KAAKi7B,cAAcvqC,IAAI1F,EAAM,IAAIw2B,IAE9BxhB,KAAKi7B,cAAc1qC,IAAIvF,GAAMmV,IAAIqD,EAC5C,CACA,eAAA64B,CAAgBrxC,KAASsxC,GACrB,MAAMC,EAAsBv8B,KAAKi7B,cAAc1qC,IAAIvF,GACnDuxC,GAAuBA,EAAoB7a,UAAU4a,EACzD,CACA,YAAAE,CAAaxxC,GACT,OAAOgV,KAAKi7B,cAAcxqC,IAAIzF,EAClC,CAIA,KAAA2E,CAAMD,EAAUgpC,EAAgB14B,KAAK8G,KAAKo0B,iBACtC,GAAIl7B,KAAKtQ,SACL,OExMhB,IAAsBmN,EFyMVmD,KAAK86B,OEzMKj+B,EFyMgBnN,aExMR+sC,YAAkC,QAApB5/B,EAAQuG,QFyMxCpD,KAAKtQ,SAAWA,EAChB,MAAM7B,SAAEA,EAAUtB,OAAAA,EAAAA,cAAQyB,GAAkBgS,KAAKtI,QASjD,GARI1J,IAAkBA,EAAcQ,SAChCR,EAAc2B,MAAMD,GAExBsQ,KAAK8G,KAAK20B,MAAMt7B,IAAIH,MACpBA,KAAK/R,QAAU+R,KAAK/R,OAAOwO,SAAS0D,IAAIH,MACpC04B,IAAkBnsC,GAAUsB,KAC5BmS,KAAK04B,eAAgB,GAErBwB,EAAsB,CACtB,IAAIwC,EACJ,MAAMC,EAAsB,IAAO38B,KAAK8G,KAAK+zB,uBAAwB,EACrEX,EAAqBxqC,EAAU,KAC3BsQ,KAAK8G,KAAK+zB,uBAAwB,EAClC6B,GAAeA,IACfA,EGrNpB,SAAex6B,EAAU06B,GACrB,MAAMnyC,EAAQkY,YAAYC,MACpBi6B,EAAe,EAAGt7B,gBACpB,MAAMia,EAAUja,EAAY9W,EACxB+wB,GAAWohB,IACX77B,GAAY87B,GACZ36B,EAASsZ,EAAUohB,KAI3B,OADA/7B,GAAMmC,KAAK65B,GAAc,GAClB,IAAM97B,GAAY87B,EAC7B,CH0MkCpjB,CAAMkjB,EAAqB,KACrCpJ,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/CxzB,KAAKy7B,MAAMl8B,QAAQu9B,MAG/B,CACIjvC,GACAmS,KAAK8G,KAAKi2B,mBAAmBlvC,EAAUmS,OAGd,IAAzBA,KAAKtI,QAAQ5M,SACbkD,IACCH,GAAYtB,IACbyT,KAAK0D,iBAAiB,YAAa,EAAGpC,QAAO+xB,mBAAkB2J,2BAA0BzwC,OAAQ0wC,MAC7F,GAAIj9B,KAAKk9B,yBAGL,OAFAl9B,KAAKnH,YAAS,OACdmH,KAAKm9B,oBAAiB,GAI1B,MAAMC,EAAmBp9B,KAAKtI,QAAQgI,YAClC1R,EAAcowB,wBACdif,IACEC,uBAAEA,EAAAC,0BAAwBA,GAA+BvvC,EAAc4X,WAKvE43B,GAAiBx9B,KAAKy9B,eACvB/F,GAAiB13B,KAAKy9B,aAAcR,IACrCD,EAMEU,GAAgCrK,GAAoB2J,EAC1D,GAAIh9B,KAAKtI,QAAQimC,YACZ39B,KAAKq4B,YAAcr4B,KAAKq4B,WAAW3oC,UACpCguC,GACCrK,IACImK,IAAkBx9B,KAAK21B,kBAAoB,CAC5C31B,KAAKq4B,aACLr4B,KAAK84B,aAAe94B,KAAKq4B,WACzBr4B,KAAK84B,aAAaA,kBAAe,GAErC94B,KAAK49B,mBAAmBt8B,EAAOo8B,GAC/B,MAAMG,EAAmB,IAClBje,GAAmBwd,EAAkB,UACxCrjB,OAAQujB,EACRrjB,WAAYsjB,IAEZvvC,EAAcu3B,oBACdvlB,KAAKtI,QAAQimC,cACbE,EAAiBpkB,MAAQ,EACzBokB,EAAiBzrC,MAAO,GAE5B4N,KAAKsjB,eAAeua,EACxB,MAOSxK,GACDyJ,GAAgB98B,MAEhBA,KAAK41B,UAAY51B,KAAKtI,QAAQuxB,gBAC9BjpB,KAAKtI,QAAQuxB,iBAGrBjpB,KAAKy9B,aAAeR,GAGhC,CACA,OAAArtC,GACIoQ,KAAKtI,QAAQ7J,UAAYmS,KAAKm1B,aAC9Bn1B,KAAK8G,KAAK20B,MAAMn7B,OAAON,MACvB,MAAMs1B,EAAQt1B,KAAKu1B,WACnBD,GAASA,EAAMh1B,OAAON,MACtBA,KAAK/R,QAAU+R,KAAK/R,OAAOwO,SAASgE,OAAOT,MAC3CA,KAAKtQ,cAAW,EAChBqR,GAAYf,KAAKu7B,iBACrB,CAEA,WAAAuC,GACI99B,KAAK46B,uBAAwB,CACjC,CACA,aAAAmD,GACI/9B,KAAK46B,uBAAwB,CACjC,CACA,eAAAoD,GACI,OAAOh+B,KAAK46B,uBAAyB56B,KAAK66B,qBAC9C,CACA,sBAAAqC,GACI,OAAQl9B,KAAK8vB,oBACR9vB,KAAK/R,QAAU+R,KAAK/R,OAAOivC,2BAC5B,CACR,CAEA,WAAAe,GACQj+B,KAAKg+B,oBAETh+B,KAAKy4B,YAAa,EAClBz4B,KAAKy7B,OAASz7B,KAAKy7B,MAAMl8B,QAAQ2+B,IACjCl+B,KAAKu6B,cACT,CACA,oBAAA4D,GACI,MAAMnwC,cAAEA,GAAkBgS,KAAKtI,QAC/B,OAAO1J,GAAiBA,EAAc4X,WAAWjO,iBACrD,CACA,UAAAw9B,CAAWiJ,GAAwB,GAE/B,GADAp+B,KAAK8G,KAAKo0B,iBAAkB,EACxBl7B,KAAK8G,KAAKk3B,kBAEV,YADAh+B,KAAKtI,QAAQuxB,gBAAkBjpB,KAAKtI,QAAQuxB,kBAIhD,IADCjpB,KAAK8G,KAAK2xB,YAAcz4B,KAAK8G,KAAKm3B,cAC/Bj+B,KAAK04B,cACL,OACJ14B,KAAK04B,eAAgB,EACrB,IAAA,IAASlgC,EAAI,EAAGA,EAAIwH,KAAKo8B,KAAKtqC,OAAQ0G,IAAK,CACvC,MAAM8M,EAAOtF,KAAKo8B,KAAK5jC,GACvB8M,EAAK01B,sBAAuB,EAC5B11B,EAAKutB,aAAa,YACdvtB,EAAK5N,QAAQimC,YACbr4B,EAAK6vB,YAAW,EAExB,CACA,MAAMtnC,SAAEA,EAAUtB,OAAAA,GAAWyT,KAAKtI,QAClC,QAAiB,IAAb7J,IAA2BtB,EAC3B,OACJ,MAAMoL,EAAoBqI,KAAKm+B,uBAC/Bn+B,KAAKq+B,2BAA6B1mC,EAC5BA,EAAkBqI,KAAKvI,aAAc,SACrC,EACNuI,KAAKs+B,iBACLF,GAAyBp+B,KAAKq8B,gBAAgB,aAClD,CACA,MAAA1tC,GACIqR,KAAKm7B,iBAAkB,EAKvB,GAJyBn7B,KAAKg+B,kBAQ1B,OAHAh+B,KAAK+9B,gBACL/9B,KAAKs7B,yBACLt7B,KAAKy7B,MAAMl8B,QAAQg/B,IAGlBv+B,KAAKy4B,YACNz4B,KAAKy7B,MAAMl8B,QAAQi/B,IAEvBx+B,KAAKy4B,YAAa,EAIlBz4B,KAAKy7B,MAAMl8B,QAAQk/B,IAKnBz+B,KAAKy7B,MAAMl8B,QAAQuzB,IAKnB9yB,KAAKy7B,MAAMl8B,QAAQm/B,IACnB1+B,KAAKs7B,oBAML,MAAM14B,EAAMD,YAAYC,MACxB5B,GAAUM,MAAQhP,EAAM,EAAG,IAAO,GAAIsQ,EAAM5B,GAAUO,WACtDP,GAAUO,UAAYqB,EACtB5B,GAAUQ,cAAe,EACzBP,GAAMtS,OAAOyR,QAAQY,IACrBC,GAAM09B,UAAUv+B,QAAQY,IACxBC,GAAMlS,OAAOqR,QAAQY,IACrBA,GAAUQ,cAAe,CAC7B,CACA,SAAAszB,GACS90B,KAAKm7B,kBACNn7B,KAAKm7B,iBAAkB,EACvBzF,eAAe,IAAM11B,KAAKrR,UAElC,CACA,iBAAA2sC,GACIt7B,KAAKy7B,MAAMl8B,QAAQq/B,IACnB5+B,KAAKm8B,YAAY58B,QAAQs/B,GAC7B,CACA,wBAAAC,GACS9+B,KAAKo7B,4BACNp7B,KAAKo7B,2BAA4B,EACjCv6B,GAAM89B,UAAU3+B,KAAKu7B,kBAAkB,GAAO,GAEtD,CACA,yBAAAxF,GAMIl1B,GAAMuhB,WAAW,KACTpiB,KAAK04B,cACL14B,KAAK8G,KAAKguB,YAGV90B,KAAK8G,KAAKu0B,qBAGtB,CAIA,cAAAiD,IACQt+B,KAAKu4B,UAAav4B,KAAKtQ,WAE3BsQ,KAAKu4B,SAAWv4B,KAAKgxB,UACzB,CACA,YAAA8B,GACI,IAAK9yB,KAAKtQ,SACN,OAGJ,GADAsQ,KAAK6yB,iBACC7yB,KAAKtI,QAAQqnC,qBAAuB/+B,KAAK41B,UAC1C51B,KAAK04B,eACN,OASJ,GAAI14B,KAAKq4B,aAAer4B,KAAKq4B,WAAW3oC,SACpC,IAAA,IAAS8I,EAAI,EAAGA,EAAIwH,KAAKo8B,KAAKtqC,OAAQ0G,IAAK,CAC1BwH,KAAKo8B,KAAK5jC,GAClBq6B,cACT,CAEJ,MAAMmM,EAAah/B,KAAKzT,OACxByT,KAAKzT,OAASyT,KAAKgxB,SAAQ,GAC3BhxB,KAAKi/B,gBtBxcC,CACdxtC,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsB0c7BwN,KAAK04B,eAAgB,EACrB14B,KAAKg0B,qBAAkB,EACvBh0B,KAAKq8B,gBAAgB,UAAWr8B,KAAKzT,OAAO0jC,WAC5C,MAAMjiC,cAAEA,GAAkBgS,KAAKtI,QAC/B1J,GACIA,EAAc0zB,OAAO,gBAAiB1hB,KAAKzT,OAAO0jC,UAAW+O,EAAaA,EAAW/O,eAAY,EACzG,CACA,YAAA4C,CAAaqM,EAAQ,WACjB,IAAIC,EAAmBj0C,QAAQ8U,KAAKtI,QAAQ0nC,cAAgBp/B,KAAKtQ,UAC7DsQ,KAAK4xB,QACL5xB,KAAK4xB,OAAO2I,cAAgBv6B,KAAK8G,KAAKyzB,aACtCv6B,KAAK4xB,OAAOsN,QAAUA,IACtBC,GAAmB,GAEnBA,IACAn/B,KAAK4xB,OAAS,CACV2I,YAAav6B,KAAK8G,KAAKyzB,YACvB2E,QACAG,OAAQhF,EAAkBr6B,KAAKtQ,UAC/B6K,OAAQ6/B,EAAcp6B,KAAKtQ,WAGvC,CACA,cAAA4qC,GACI,IAAKA,EACD,OACJ,MAAMgF,EAAmBt/B,KAAK04B,eAAiB14B,KAAKg7B,qBAC9CuE,EAAgBv/B,KAAKg0B,kBAAoByD,GAAYz3B,KAAKg0B,iBAC1Dr8B,EAAoBqI,KAAKm+B,uBACzBqB,EAAyB7nC,EACzBA,EAAkBqI,KAAKvI,aAAc,SACrC,EACAgoC,EAA8BD,IAA2Bx/B,KAAKq+B,2BAChEiB,IACCC,GACGxnC,GAAaiI,KAAKvI,eAClBgoC,KACJnF,EAAet6B,KAAKtQ,SAAU8vC,GAC9Bx/B,KAAKg7B,sBAAuB,EAC5Bh7B,KAAK63B,iBAEb,CACA,OAAA7G,CAAQ0O,GAAkB,GACtB,MAAMC,EAAU3/B,KAAK6xB,iBACrB,IAAI5B,EAAYjwB,KAAK4/B,oBAAoBD,GA+8BrD,IAAkBjS,EAr8BN,OAJIgS,IACAzP,EAAYjwB,KAAK0/B,gBAAgBzP,IAy8B7C4P,IADcnS,EAt8BGuC,GAu8BHx+B,GACdouC,GAAUnS,EAAIh8B,GAv8BC,CACH6oC,YAAav6B,KAAK8G,KAAKyzB,YACvBuF,YAAaH,EACb1P,YACAx4B,aAAc,CAAA,EACdqB,OAAQkH,KAAKjQ,GAErB,CACA,cAAA8hC,GACI,MAAM7jC,cAAEA,GAAkBgS,KAAKtI,QAC/B,IAAK1J,EACD,MtB1gBE,CACdyD,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsB4gB7B,MAAMk7B,EAAM1/B,EAAcugC,sBAEpBqD,OAAEA,GAAW5xB,KAAK8G,KAKxB,OAJI8qB,IACA9D,GAAcJ,EAAIj8B,EAAGmgC,EAAOr3B,OAAO9I,GACnCq8B,GAAcJ,EAAIh8B,EAAGkgC,EAAOr3B,OAAO7I,IAEhCg8B,CACX,CACA,mBAAAkS,CAAoBlS,GAChB,MAAMqS,EtBrhBA,CACdtuC,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsBuhB7BwkC,GAAY+I,EAAkBrS,GAK9B,IAAA,IAASl1B,EAAI,EAAGA,EAAIwH,KAAKo8B,KAAKtqC,OAAQ0G,IAAK,CACvC,MAAM8M,EAAOtF,KAAKo8B,KAAK5jC,IACjBo5B,OAAEA,EAAAl6B,QAAQA,GAAY4N,EAC5B,GAAIA,IAAStF,KAAK8G,MAAQ8qB,GAAUl6B,EAAQ0nC,aAAc,CAKtD,GAAIxN,EAAOyN,OAAQ,CACfrI,GAAY+I,EAAkBrS,GAC9B,MAAQkE,OAAQoO,GAAehgC,KAAK8G,KAKhCk5B,IACAlS,GAAciS,EAAiBtuC,GAAIuuC,EAAWzlC,OAAO9I,GACrDq8B,GAAciS,EAAiBruC,GAAIsuC,EAAWzlC,OAAO7I,GAE7D,CACAo8B,GAAciS,EAAiBtuC,EAAGmgC,EAAOr3B,OAAO9I,GAChDq8B,GAAciS,EAAiBruC,EAAGkgC,EAAOr3B,OAAO7I,EACpD,CACJ,CACA,OAAOquC,CACX,CACA,cAAAE,CAAevS,EAAKwS,GAAgB,GAChC,MAAMC,EtBtjBA,CACd1uC,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsBwjB7BwkC,GAAYmJ,EAAgBzS,GAC5B,IAAA,IAASl1B,EAAI,EAAGA,EAAIwH,KAAKo8B,KAAKtqC,OAAQ0G,IAAK,CACvC,MAAM8M,EAAOtF,KAAKo8B,KAAK5jC,IAClB0nC,GACD56B,EAAK5N,QAAQ0nC,cACb95B,EAAKssB,QACLtsB,IAASA,EAAKwB,MACdwnB,GAAa6R,EAAgB,CACzB1uC,GAAI6T,EAAKssB,OAAOr3B,OAAO9I,EACvBC,GAAI4T,EAAKssB,OAAOr3B,OAAO7I,IAG1BqG,GAAauN,EAAK7N,eAEvB62B,GAAa6R,EAAgB76B,EAAK7N,aACtC,CAIA,OAHIM,GAAaiI,KAAKvI,eAClB62B,GAAa6R,EAAgBngC,KAAKvI,cAE/B0oC,CACX,CACA,eAAAT,CAAgBhS,GACZ,MAAM0S,EtB7kBA,CACd3uC,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsB+kB7BwkC,GAAYoJ,EAAqB1S,GACjC,IAAA,IAASl1B,EAAI,EAAGA,EAAIwH,KAAKo8B,KAAKtqC,OAAQ0G,IAAK,CACvC,MAAM8M,EAAOtF,KAAKo8B,KAAK5jC,GACvB,IAAK8M,EAAK5V,SACN,SACJ,IAAKqI,GAAauN,EAAK7N,cACnB,SACJy1B,GAAS5nB,EAAK7N,eAAiB6N,EAAKg5B,iBACpC,MAAM/G,EAAYzK,KAElBkK,GAAYO,EADIjyB,EAAKusB,kBAErByF,GAAoB8I,EAAqB96B,EAAK7N,aAAc6N,EAAKizB,SAAWjzB,EAAKizB,SAAStI,eAAY,EAAWsH,EACrH,CAIA,OAHIx/B,GAAaiI,KAAKvI,eAClB6/B,GAAoB8I,EAAqBpgC,KAAKvI,cAE3C2oC,CACX,CACA,cAAAC,CAAe/+B,GACXtB,KAAKsgC,YAAch/B,EACnBtB,KAAK8G,KAAKg4B,2BACV9+B,KAAKy6B,mBAAoB,CAC7B,CACA,UAAAzF,CAAWt9B,GACPsI,KAAKtI,QAAU,IACRsI,KAAKtI,WACLA,EACHihC,eAAiC,IAAtBjhC,EAAQihC,WAA0BjhC,EAAQihC,UAE7D,CACA,iBAAA4F,GACIv+B,KAAK4xB,YAAS,EACd5xB,KAAKzT,YAAS,EACdyT,KAAKu4B,cAAW,EAChBv4B,KAAKq+B,gCAA6B,EAClCr+B,KAAKsgC,iBAAc,EACnBtgC,KAAKnH,YAAS,EACdmH,KAAK04B,eAAgB,CACzB,CACA,kCAAA6H,GACSvgC,KAAKwgC,gBAQNxgC,KAAKwgC,eAAeC,2BACpBz/B,GAAUO,WACVvB,KAAKwgC,eAAe7E,oBAAmB,EAE/C,CACA,kBAAAA,CAAmB+E,GAAqB,GACpC,IAAItmC,EAMJ,MAAM29B,EAAO/3B,KAAK2gC,UAClB3gC,KAAKy6B,oBAAsBz6B,KAAKy6B,kBAAoB1C,EAAK0C,mBACzDz6B,KAAK26B,mBAAqB36B,KAAK26B,iBAAmB5C,EAAK4C,kBACvD36B,KAAK06B,0BAA4B16B,KAAK06B,wBAA0B3C,EAAK2C,yBACrE,MAAMkG,EAAW11C,QAAQ8U,KAAK84B,eAAiB94B,OAAS+3B,EAUxD,KALkB2I,GACbE,GAAY5gC,KAAK06B,yBAClB16B,KAAKy6B,oBACmB,QAAtBrgC,EAAK4F,KAAK/R,cAA2B,IAAPmM,OAAgB,EAASA,EAAGqgC,oBAC5Dz6B,KAAK6gC,gCAEL,OACJ,MAAQt0C,OAAAA,EAAAA,SAAQsB,GAAamS,KAAKtI,QAIlC,GAAKsI,KAAKzT,SAAYA,GAAUsB,GAAhC,CASA,GAPAmS,KAAKygC,yBAA2Bz/B,GAAUO,WAOrCvB,KAAKsgC,cAAgBtgC,KAAKm9B,eAAgB,CAE3C,MAAMqD,EAAiBxgC,KAAK8gC,6BACxBN,GACAA,EAAej0C,QACY,IAA3ByT,KAAKk8B,mBACLl8B,KAAKwgC,eAAiBA,EACtBxgC,KAAKugC,qCACLvgC,KAAKm9B,etB/qBP,CACd1rC,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsBirBrBwN,KAAK+gC,qBtBhrBP,CACdtvC,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsBkrBrB05B,GAAqBlsB,KAAK+gC,qBAAsB/gC,KAAKzT,OAAO0jC,UAAWuQ,EAAej0C,OAAO0jC,WAC7F+G,GAAYh3B,KAAKm9B,eAAgBn9B,KAAK+gC,uBAGtC/gC,KAAKwgC,eAAiBxgC,KAAKm9B,oBAAiB,CAEpD,CAKA,GAAKn9B,KAAKm9B,gBAAmBn9B,KAAKsgC,YAAlC,CxB5qBZ,IAAyBznC,EAAQmzB,EAAU/9B,EwBqtB/B,GApCK+R,KAAKnH,SACNmH,KAAKnH,OtBlsBH,CACdpH,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsBosBzBwN,KAAKghC,qBtBnsBH,CACdvvC,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,KsBysBzBwN,KAAKm9B,gBACLn9B,KAAK+gC,sBACL/gC,KAAKwgC,gBACLxgC,KAAKwgC,eAAe3nC,QACpBmH,KAAKugC,qCxB5rBI1nC,EwB6rBOmH,KAAKnH,OxB7rBJmzB,EwB6rBYhsB,KAAKm9B,exB7rBPlvC,EwB6rBuB+R,KAAKwgC,eAAe3nC,OxB5rBlFkzB,GAAiBlzB,EAAOpH,EAAGu6B,EAASv6B,EAAGxD,EAAOwD,GAC9Cs6B,GAAiBlzB,EAAOnH,EAAGs6B,EAASt6B,EAAGzD,EAAOyD,IwBgsB7BsO,KAAKsgC,aACNp1C,QAAQ8U,KAAK84B,cAEb94B,KAAKnH,OAASmH,KAAKigC,eAAejgC,KAAKzT,OAAO0jC,WAG9C+G,GAAYh3B,KAAKnH,OAAQmH,KAAKzT,OAAO0jC,WAEzCxC,GAAcztB,KAAKnH,OAAQmH,KAAKsgC,cAMhCtJ,GAAYh3B,KAAKnH,OAAQmH,KAAKzT,OAAO0jC,WAKrCjwB,KAAK6gC,+BAAgC,CACrC7gC,KAAK6gC,gCAAiC,EACtC,MAAML,EAAiBxgC,KAAK8gC,6BACxBN,GACAt1C,QAAQs1C,EAAe1H,gBACnB5tC,QAAQ8U,KAAK84B,gBAChB0H,EAAe9oC,QAAQ0nC,cACxBoB,EAAe3nC,QACY,IAA3BmH,KAAKk8B,mBACLl8B,KAAKwgC,eAAiBA,EACtBxgC,KAAKugC,qCACLvgC,KAAKm9B,etBhvBP,CACd1rC,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsBkvBrBwN,KAAK+gC,qBtBjvBP,CACdtvC,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsBmvBrB05B,GAAqBlsB,KAAK+gC,qBAAsB/gC,KAAKnH,OAAQ2nC,EAAe3nC,QAC5Em+B,GAAYh3B,KAAKm9B,eAAgBn9B,KAAK+gC,uBAGtC/gC,KAAKwgC,eAAiBxgC,KAAKm9B,oBAAiB,CAEpD,CAIAtD,GAAoBE,sBA/DhB,CA9BA,CA8FR,CACA,0BAAA+G,GACI,GAAK9gC,KAAK/R,SACNi/B,GAASltB,KAAK/R,OAAOwJ,gBACrB01B,GAAentB,KAAK/R,OAAOwJ,cAG/B,OAAIuI,KAAK/R,OAAOgzC,eACLjhC,KAAK/R,OAGL+R,KAAK/R,OAAO6yC,4BAE3B,CACA,YAAAG,GACI,OAAO/1C,SAAS8U,KAAKm9B,gBACjBn9B,KAAKsgC,aACLtgC,KAAKtI,QAAQimC,aACb39B,KAAKzT,OACb,CACA,cAAAqvC,GACI,IAAIxhC,EACJ,MAAM29B,EAAO/3B,KAAK2gC,UACZC,EAAW11C,QAAQ8U,KAAK84B,eAAiB94B,OAAS+3B,EACxD,IAAIzS,GAAU,EAuBd,IAlBItlB,KAAKy6B,oBAA6C,QAAtBrgC,EAAK4F,KAAK/R,cAA2B,IAAPmM,OAAgB,EAASA,EAAGqgC,sBACtFnV,GAAU,GAMVsb,IACC5gC,KAAK06B,yBAA2B16B,KAAK26B,oBACtCrV,GAAU,GAMVtlB,KAAKygC,2BAA6Bz/B,GAAUO,YAC5C+jB,GAAU,GAEVA,EACA,OACJ,MAAQ/4B,OAAAA,EAAAA,SAAQsB,GAAamS,KAAKtI,QAWlC,GANAsI,KAAKw6B,gBAAkBtvC,QAAS8U,KAAK/R,QAAU+R,KAAK/R,OAAOusC,iBACvDx6B,KAAK21B,kBACL31B,KAAKkhC,kBACJlhC,KAAKw6B,kBACNx6B,KAAKsgC,YAActgC,KAAKm9B,oBAAiB,IAExCn9B,KAAKzT,SAAYA,IAAUsB,EAC5B,OAKJmpC,GAAYh3B,KAAKi/B,gBAAiBj/B,KAAKzT,OAAO0jC,WAI9C,MAAMkR,EAAiBnhC,KAAK+zB,UAAUtiC,EAChC2vC,EAAiBphC,KAAK+zB,UAAUriC,GlBvyBlD,SAAyBg8B,EAAKqG,EAAWsN,EAAUC,GAAqB,GACpE,MAAMC,EAAaF,EAASvvC,OAC5B,IAAKyvC,EACD,OAGJ,IAAIj8B,EACAhE,EAFJyyB,EAAUtiC,EAAIsiC,EAAUriC,EAAI,EAG5B,IAAA,IAAS8G,EAAI,EAAGA,EAAI+oC,EAAY/oC,IAAK,CACjC8M,EAAO+7B,EAAS7oC,GAChB8I,EAAQgE,EAAK0uB,gBAKb,MAAMtkC,EAAW4V,EAAK5V,SAClBA,GACAA,EAASkI,OACkB,aAA3BlI,EAASkI,MAAM4pC,UAGfF,GACAh8B,EAAK5N,QAAQ0nC,cACb95B,EAAKssB,QACLtsB,IAASA,EAAKwB,MACdwnB,GAAaZ,EAAK,CACdj8B,GAAI6T,EAAKssB,OAAOr3B,OAAO9I,EACvBC,GAAI4T,EAAKssB,OAAOr3B,OAAO7I,IAG3B4P,IAEAyyB,EAAUtiC,GAAK6P,EAAM7P,EAAEqB,MACvBihC,EAAUriC,GAAK4P,EAAM5P,EAAEoB,MAEvB26B,GAAcC,EAAKpsB,IAEnBggC,GAAsBvpC,GAAauN,EAAK7N,eACxC62B,GAAaZ,EAAKpoB,EAAK7N,cAE/B,CAKAs8B,EAAUtiC,EAAIk8B,GAAcoG,EAAUtiC,GACtCsiC,EAAUriC,EAAIi8B,GAAcoG,EAAUriC,EAC1C,CkB6vBY+vC,CAAgBzhC,KAAKi/B,gBAAiBj/B,KAAK+zB,UAAW/zB,KAAKo8B,KAAMwE,IAK7D7I,EAAKxrC,QACJwrC,EAAKl/B,QACgB,IAArBmH,KAAK+zB,UAAUtiC,GAAgC,IAArBuO,KAAK+zB,UAAUriC,IAC1CqmC,EAAKl/B,OAASk/B,EAAKxrC,OAAO0jC,WAE9B,MAAMp3B,OAAEA,GAAWk/B,EACnB,IAAKl/B,EAWD,YALImH,KAAK0hC,sBACL1hC,KAAKg0B,gBtBh2BL,CAChBviC,EAPoB,CACpBo6B,UAAW,EACX/4B,MAAO,EACPwH,OAAQ,EACRsxB,YAAa,GAIbl6B,EARoB,CACpBm6B,UAAW,EACX/4B,MAAO,EACPwH,OAAQ,EACRsxB,YAAa,IsBm2BG5rB,KAAK0hC,oBAAsB,OAC3B1hC,KAAK63B,mBAIR73B,KAAKg0B,kBACNh0B,KAAKg0B,gBtBv2BD,CAChBviC,EAPoB,CACpBo6B,UAAW,EACX/4B,MAAO,EACPwH,OAAQ,EACRsxB,YAAa,GAIbl6B,EARoB,CACpBm6B,UAAW,EACX/4B,MAAO,EACPwH,OAAQ,EACRsxB,YAAa,IsB02BD5rB,KAAK2hC,6BtBx2BD,CAChBlwC,EAPoB,CACpBo6B,UAAW,EACX/4B,MAAO,EACPwH,OAAQ,EACRsxB,YAAa,GAIbl6B,EARoB,CACpBm6B,UAAW,EACX/4B,MAAO,EACPwH,OAAQ,EACRsxB,YAAa,KsB42BL,MAAMgW,EAA0B5hC,KAAK0hC,oBAUrC5V,GAAa9rB,KAAKg0B,gBAAiBh0B,KAAKi/B,gBAAiBpmC,EAAQmH,KAAKvI,cACtEuI,KAAK0hC,oBAAsB1I,GAAyBh5B,KAAKg0B,gBAAiBh0B,KAAK+zB,WAC3E/zB,KAAK0hC,sBAAwBE,GAC7B5hC,KAAK+zB,UAAUtiC,IAAM0vC,GACrBnhC,KAAK+zB,UAAUriC,IAAM0vC,IACrBphC,KAAKg8B,cAAe,EACpBh8B,KAAK63B,iBACL73B,KAAKq8B,gBAAgB,mBAAoBxjC,IAK7CghC,GAAoBG,wBACxB,CACA,IAAApB,GACI54B,KAAKi8B,WAAY,CAErB,CACA,IAAA7D,GACIp4B,KAAKi8B,WAAY,CAErB,CACA,cAAApE,CAAegK,GAAY,GAEvB,GADA7hC,KAAKtI,QAAQmgC,gBAAkB73B,KAAKtI,QAAQmgC,iBACxCgK,EAAW,CACX,MAAMvM,EAAQt1B,KAAKu1B,WACnBD,GAASA,EAAMuC,gBACnB,CACI73B,KAAK84B,eAAiB94B,KAAK84B,aAAappC,WACxCsQ,KAAK84B,kBAAe,EAE5B,CACA,kBAAA8E,CAAmBt8B,EAAOo8B,GAA+B,GACrD,MAAMnF,EAAWv4B,KAAKu4B,SAChBuJ,EAAuBvJ,EACvBA,EAAS9gC,aACT,CAAA,EACAsqC,EAAc,IAAK/hC,KAAKvI,cACxB6oC,EtB15BE,CAChB7uC,EAPoB,CACpBo6B,UAAW,EACX/4B,MAAO,EACPwH,OAAQ,EACRsxB,YAAa,GAIbl6B,EARoB,CACpBm6B,UAAW,EACX/4B,MAAO,EACPwH,OAAQ,EACRsxB,YAAa,IsB65BA5rB,KAAKwgC,gBACLxgC,KAAKwgC,eAAe9oC,QAAQimC,aAC7B39B,KAAKm9B,eAAiBn9B,KAAK+gC,0BAAuB,GAEtD/gC,KAAK6gC,gCAAkCnD,EACvC,MAAMsE,EtB35BA,CACdvwC,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsB+5BvByvC,GAFiB1J,EAAWA,EAASz/B,YAAS,MAC/BkH,KAAKzT,OAASyT,KAAKzT,OAAOuM,YAAS,GAElDw8B,EAAQt1B,KAAKu1B,WACb2M,GAAgB5M,GAASA,EAAME,QAAQ1jC,QAAU,EACjDqwC,EAAyBj3C,QAAQ+2C,IAClCC,IAC0B,IAA3BliC,KAAKtI,QAAQihC,YACZ34B,KAAKo8B,KAAKrxC,KAAKq3C,KAEpB,IAAIC,EADJriC,KAAKk8B,kBAAoB,EAEzBl8B,KAAKsiC,eAAkBpnC,IACnB,MAAM4U,EAAW5U,EAAS,IL36B1C,IAAmBqJ,EAAGC,EK66CNqN,EAAQjC,EAAMC,EAAIhnB,EAjgBlB05C,GAAajC,EAAY7uC,EAAG6P,EAAM7P,EAAGqe,GACrCyyB,GAAajC,EAAY5uC,EAAG4P,EAAM5P,EAAGoe,GACrC9P,KAAKqgC,eAAeC,GAChBtgC,KAAKm9B,gBACLn9B,KAAK+gC,sBACL/gC,KAAKzT,QACLyT,KAAKwgC,gBACLxgC,KAAKwgC,eAAej0C,SACpB2/B,GAAqB8V,EAAgBhiC,KAAKzT,OAAO0jC,UAAWjwB,KAAKwgC,eAAej0C,OAAO0jC,WAyf3Fpe,EAxfW7R,KAAKm9B,eAwfRvtB,EAxfwB5P,KAAK+gC,qBAwfvBlxB,EAxf6CmyB,EAwfzCn5C,EAxfyDinB,EAyfvF0yB,GAAQ3wB,EAAOpgB,EAAGme,EAAKne,EAAGoe,EAAGpe,EAAG5I,GAChC25C,GAAQ3wB,EAAOngB,EAAGke,EAAKle,EAAGme,EAAGne,EAAG7I,GArfZw5C,IL17BL99B,EK27BevE,KAAKm9B,eL37BjB34B,EK27BiC69B,EL17B3C99B,EAAE9S,EAAEc,MAAQiS,EAAE/S,EAAEc,KACpBgS,EAAE9S,EAAEe,MAAQgS,EAAE/S,EAAEe,KAChB+R,EAAE7S,EAAEa,MAAQiS,EAAE9S,EAAEa,KAChBgS,EAAE7S,EAAEc,MAAQgS,EAAE9S,EAAEc,OKw7BAwN,KAAKy6B,mBAAoB,GAExB4H,IACDA,EtB57BN,CACd5wC,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,KsB87BrBwkC,GAAYqL,EAAoBriC,KAAKm9B,iBAErC8E,IACAjiC,KAAKw4B,gBAAkBuJ,ERj8B3C,SAAmBlpC,EAAQ4pC,EAAQ1K,EAAMjoB,EAAUqyB,EAAwBD,GACnEC,GACAtpC,EAAO9B,QAAUyH,GAAI,OAEJ,IAAjBu5B,EAAKhhC,QAAwBghC,EAAKhhC,QAAU,EAAG4/B,GAAgB7mB,IAC/DjX,EAAO6pC,YAAclkC,QAAuB,IAAnBikC,EAAO1rC,QAAwB0rC,EAAO1rC,QAAU,EAAG,EAAG8/B,GAAiB/mB,KAE3FoyB,IACLrpC,EAAO9B,QAAUyH,QAAuB,IAAnBikC,EAAO1rC,QAAwB0rC,EAAO1rC,QAAU,OAAoB,IAAjBghC,EAAKhhC,QAAwBghC,EAAKhhC,QAAU,EAAG+Y,IAK3H,IAAA,IAAStX,EAAI,EAAGA,EAAI89B,GAAY99B,IAAK,CACjC,MAAMmqC,EAAc,SAAStM,GAAQ79B,WACrC,IAAIoqC,EAAenM,GAAUgM,EAAQE,GACjCE,EAAapM,GAAUsB,EAAM4K,QACZ,IAAjBC,QAA6C,IAAfC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACArM,GAAKoM,KAAkBpM,GAAKqM,IAE5BhqC,EAAO8pC,GAAelwC,KAAKD,IAAIgM,GAAI+3B,GAASqM,GAAerM,GAASsM,GAAa/yB,GAAW,IACxFnc,EAAQ5C,KAAK8xC,IAAelvC,EAAQ5C,KAAK6xC,MACzC/pC,EAAO8pC,IAAgB,MAI3B9pC,EAAO8pC,GAAeE,EAE9B,EAIIJ,EAAOzsC,QAAU+hC,EAAK/hC,UACtB6C,EAAO7C,OAASwI,GAAIikC,EAAOzsC,QAAU,EAAG+hC,EAAK/hC,QAAU,EAAG8Z,GAElE,CQ05BoBgzB,CAAUf,EAAaD,EAAsB9hC,KAAKvI,aAAcqY,EAAUqyB,EAAwBD,IAEtGliC,KAAK8G,KAAKg4B,2BACV9+B,KAAK63B,iBACL73B,KAAKk8B,kBAAoBpsB,GAE7B9P,KAAKsiC,eAAetiC,KAAKtI,QAAQimC,WAAa,IAAO,EACzD,CACA,cAAAra,CAAe5rB,GACXsI,KAAKq8B,gBAAgB,kBACrBr8B,KAAK21B,kBAAoB31B,KAAK21B,iBAAiB3c,OAC3ChZ,KAAK84B,cAAgB94B,KAAK84B,aAAanD,kBACvC31B,KAAK84B,aAAanD,iBAAiB3c,OAEnChZ,KAAKkhC,mBACLngC,GAAYf,KAAKkhC,kBACjBlhC,KAAKkhC,sBAAmB,GAO5BlhC,KAAKkhC,iBAAmBrgC,GAAMlS,OAAO,KACjC4kC,GAAsBC,wBAAyB,EAC/CxzB,KAAK21B,iBIj+BrB,SAA4BnmC,EAAO4kB,EAAW1c,GAC1C,MAAMqrC,EAAgBzxC,EAAc9B,GAASA,EAAQq0B,GAAYr0B,GAEjE,OADAuzC,EAAct4C,MAAMq1B,GAAmB,GAAIijB,EAAe3uB,EAAW1c,IAC9DqrC,EAAch3C,SACzB,CJ69BwCi3C,CAAmB,EAr8BnC,IAq8BuD,IACxDtrC,EACHwiB,SAAWhf,IACP8E,KAAKsiC,eAAepnC,GACpBxD,EAAQwiB,UAAYxiB,EAAQwiB,SAAShf,IAEzC+e,WAAY,KACRviB,EAAQuiB,YAAcviB,EAAQuiB,aAC9Bja,KAAKijC,uBAGTjjC,KAAK84B,eACL94B,KAAK84B,aAAanD,iBAAmB31B,KAAK21B,kBAE9C31B,KAAKkhC,sBAAmB,GAEhC,CACA,iBAAA+B,GACQjjC,KAAK84B,eACL94B,KAAK84B,aAAanD,sBAAmB,EACrC31B,KAAK84B,aAAaR,qBAAkB,GAExC,MAAMhD,EAAQt1B,KAAKu1B,WACnBD,GAASA,EAAMuD,wBACf74B,KAAK84B,aACD94B,KAAK21B,iBACD31B,KAAKw4B,qBACD,EACZx4B,KAAKq8B,gBAAgB,oBACzB,CACA,eAAAS,GACQ98B,KAAK21B,mBACL31B,KAAKsiC,gBAAkBtiC,KAAKsiC,eAr+BpB,KAs+BRtiC,KAAK21B,iBAAiB3c,QAE1BhZ,KAAKijC,mBACT,CACA,uBAAAC,GACI,MAAMnL,EAAO/3B,KAAK2gC,UAClB,IAAIK,qBAAEA,EAAAnoC,OAAsBA,EAAQtM,OAAAA,EAAAA,aAAQkL,GAAiBsgC,EAC7D,GAAKiJ,GAAyBnoC,GAAWtM,EAAzC,CAOA,GAAIyT,OAAS+3B,GACT/3B,KAAKzT,QACLA,GACA42C,GAA0BnjC,KAAKtI,QAAQ0rC,cAAepjC,KAAKzT,OAAO0jC,UAAW1jC,EAAO0jC,WAAY,CAChGp3B,EAASmH,KAAKnH,QtB7gCZ,CACdpH,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsB+gCzB,MAAM6wC,EAAU9X,GAAWvrB,KAAKzT,OAAO0jC,UAAUx+B,GACjDoH,EAAOpH,EAAEc,IAAMwlC,EAAKl/B,OAAOpH,EAAEc,IAC7BsG,EAAOpH,EAAEe,IAAMqG,EAAOpH,EAAEc,IAAM8wC,EAC9B,MAAMC,EAAU/X,GAAWvrB,KAAKzT,OAAO0jC,UAAUv+B,GACjDmH,EAAOnH,EAAEa,IAAMwlC,EAAKl/B,OAAOnH,EAAEa,IAC7BsG,EAAOnH,EAAEc,IAAMqG,EAAOnH,EAAEa,IAAM+wC,CAClC,CACAtM,GAAYgK,EAAsBnoC,GAMlCy1B,GAAa0S,EAAsBvpC,GAOnCq0B,GAAa9rB,KAAK2hC,6BAA8B3hC,KAAKi/B,gBAAiB+B,EAAsBvpC,EA/BxF,CAgCR,CACA,kBAAAslC,CAAmBlvC,EAAUyX,GACpBtF,KAAKm8B,YAAY1rC,IAAI5C,IACtBmS,KAAKm8B,YAAYzrC,IAAI7C,EAAU,IAAI+pC,IAEzB53B,KAAKm8B,YAAY5rC,IAAI1C,GAC7BsS,IAAImF,GACV,MAAM3G,EAAS2G,EAAK5N,QAAQ6rC,uBAC5Bj+B,EAAK8vB,QAAQ,CACT11B,WAAYf,EAASA,EAAOe,gBAAa,EACzCy4B,sBAAuBx5B,GAAUA,EAAO6kC,4BAClC7kC,EAAO6kC,4BAA4Bl+B,QACnC,GAEd,CACA,MAAAswB,GACI,MAAMN,EAAQt1B,KAAKu1B,WACnB,OAAOD,GAAQA,EAAMyC,OAAS/3B,IAClC,CACA,OAAA2gC,GACI,IAAIvmC,EACJ,MAAMvM,SAAEA,GAAamS,KAAKtI,QAC1B,OAAO7J,IAAuC,QAA1BuM,EAAK4F,KAAKu1B,kBAA+B,IAAPn7B,OAAgB,EAASA,EAAG29B,OAAgB/3B,IACtG,CACA,WAAAyjC,GACI,IAAIrpC,EACJ,MAAMvM,SAAEA,GAAamS,KAAKtI,QAC1B,OAAO7J,EAAsC,QAA1BuM,EAAK4F,KAAKu1B,kBAA+B,IAAPn7B,OAAgB,EAASA,EAAG09B,cAAW,CAChG,CACA,QAAAvC,GACI,MAAM1nC,SAAEA,GAAamS,KAAKtI,QAC1B,GAAI7J,EACA,OAAOmS,KAAK8G,KAAKq1B,YAAY5rC,IAAI1C,EACzC,CACA,OAAAunC,EAAQ2F,WAAEA,EAAAr7B,WAAYA,wBAAYy4B,GAA2B,CAAA,GACzD,MAAM7C,EAAQt1B,KAAKu1B,WACfD,GACAA,EAAMF,QAAQp1B,KAAMm4B,GACpB4C,IACA/6B,KAAKg0B,qBAAkB,EACvBh0B,KAAK+6B,YAAa,GAElBr7B,GACAM,KAAKg1B,WAAW,CAAEt1B,cAC1B,CACA,QAAA21B,GACI,MAAMC,EAAQt1B,KAAKu1B,WACnB,QAAID,GACOA,EAAMD,SAASr1B,KAK9B,CACA,aAAAk+B,GACI,MAAMlwC,cAAEA,GAAkBgS,KAAKtI,QAC/B,IAAK1J,EACD,OAEJ,IAAI01C,GAAY,EAKhB,MAAMjsC,aAAEA,GAAiBzJ,EAQzB,IAPIyJ,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACbutC,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAA,EAEpB,IAAA,IAASnrC,EAAI,EAAGA,EAAIkhC,GAAc5nC,OAAQ0G,IAAK,CAC3C,MAAM/L,EAAM,SAAWitC,GAAclhC,GAEjCf,EAAahL,KACbk3C,EAAYl3C,GAAOgL,EAAahL,GAChCuB,EAAc41C,eAAen3C,EAAK,GAE1C,CAGAuB,EAAce,SAEd,IAAA,MAAWtC,KAAOk3C,EACd31C,EAAc41C,eAAen3C,EAAKk3C,EAAYl3C,IAIlDuB,EAAc6pC,gBAClB,CACA,mBAAA76B,CAAoBF,GAChB,IAAI1C,EAAI4X,EACR,IAAKhS,KAAKtQ,UAAYsQ,KAAK86B,MACvB,OACJ,IAAK96B,KAAKi8B,UACN,OAAOtC,GAEX,MAAMkK,EAAS,CACXjK,WAAY,IAEVjiC,EAAoBqI,KAAKm+B,uBAC/B,GAAIn+B,KAAK+6B,WAQL,OAPA/6B,KAAK+6B,YAAa,EAClB8I,EAAO9sC,QAAU,GACjB8sC,EAAOC,cACHxlC,GAAmBxB,aAA6C,EAASA,EAAUgnC,gBAAkB,GACzGD,EAAOxxC,UAAYsF,EACbA,EAAkBqI,KAAKvI,aAAc,IACrC,OACCosC,EAEX,MAAM9L,EAAO/3B,KAAK2gC,UAClB,IAAK3gC,KAAKg0B,kBAAoBh0B,KAAKzT,SAAWwrC,EAAKl/B,OAAQ,CACvD,MAAMkrC,EAAc,CAAA,EAepB,OAdI/jC,KAAKtI,QAAQ7J,WACbk2C,EAAYhtC,aACsB,IAA9BiJ,KAAKvI,aAAaV,QACZiJ,KAAKvI,aAAaV,QAClB,EACVgtC,EAAYD,cACRxlC,GAAmBxB,aAA6C,EAASA,EAAUgnC,gBAAkB,IAEzG9jC,KAAKg8B,eAAiBjkC,GAAaiI,KAAKvI,gBACxCssC,EAAY1xC,UAAYsF,EAClBA,EAAkB,CAAA,EAAI,IACtB,OACNqI,KAAKg8B,cAAe,GAEjB+H,CACX,CACA,MAAMC,EAAiBjM,EAAKS,iBAAmBT,EAAKtgC,aACpDuI,KAAKkjC,0BACLW,EAAOxxC,UAAY2mC,GAAyBh5B,KAAK2hC,6BAA8B3hC,KAAK+zB,UAAWiQ,GAC3FrsC,IACAksC,EAAOxxC,UAAYsF,EAAkBqsC,EAAgBH,EAAOxxC,YAEhE,MAAMZ,EAAEA,EAAAC,EAAGA,GAAMsO,KAAKg0B,gBACtB6P,EAAO/rC,gBAAkB,GAAc,IAAXrG,EAAE6I,WAA4B,IAAX5I,EAAE4I,YAC7Cy9B,EAAKS,gBAKLqL,EAAO9sC,QACHghC,IAAS/3B,KACiG,QAAnGgS,EAAuC,QAAjC5X,EAAK4pC,EAAejtC,eAA4B,IAAPqD,EAAgBA,EAAK4F,KAAKvI,aAAaV,eAA4B,IAAPib,EAAgBA,EAAK,EACjIhS,KAAKs4B,gBACDt4B,KAAKvI,aAAaV,QAClBitC,EAAetB,YAO7BmB,EAAO9sC,QACHghC,IAAS/3B,UACwB,IAA3BgkC,EAAejtC,QACXitC,EAAejtC,QACf,QAC2B,IAA/BitC,EAAetB,YACXsB,EAAetB,YACf,EAKlB,IAAA,MAAWj2C,KAAOuE,EAAiB,CAC/B,QAA4B,IAAxBgzC,EAAev3C,GACf,SACJ,MAAMonC,QAAEA,EAAAsC,QAASA,GAAYnlC,EAAgBvE,GAOvCw3C,EAAiC,SAArBJ,EAAOxxC,UACnB2xC,EAAev3C,GACfonC,EAAQmQ,EAAev3C,GAAMsrC,GACnC,GAAI5B,EAAS,CACT,MAAM+N,EAAM/N,EAAQrkC,OACpB,IAAA,IAAS0G,EAAI,EAAGA,EAAI0rC,EAAK1rC,IACrBqrC,EAAO1N,EAAQ39B,IAAMyrC,CAE7B,MAEIJ,EAAOp3C,GAAOw3C,CAEtB,CAYA,OANIjkC,KAAKtI,QAAQ7J,WACbg2C,EAAOC,cACH/L,IAAS/3B,KACH1B,GAAmBxB,aAA6C,EAASA,EAAUgnC,gBAAkB,GACrG,QAEPD,CACX,CACA,aAAAjF,GACI5+B,KAAKq4B,WAAar4B,KAAKu4B,cAAW,CACtC,CAEA,SAAA4L,GACInkC,KAAK8G,KAAK20B,MAAMl8B,QAAS+F,IAAW,IAAIlL,EAAI,OAAwC,QAAhCA,EAAKkL,EAAKqwB,wBAAqC,IAAPv7B,OAAgB,EAASA,EAAG4e,SACxHhZ,KAAK8G,KAAK20B,MAAMl8B,QAAQg/B,IACxBv+B,KAAK8G,KAAKq1B,YAAYz7B,OAC1B,EAER,CACA,SAASoyB,GAAaxtB,GAClBA,EAAKwtB,cACT,CACA,SAAS4L,GAAmBp5B,GACxB,IAAIlL,EACJ,MAAMm+B,GAAuC,QAA1Bn+B,EAAKkL,EAAK+yB,kBAA+B,IAAPj+B,OAAgB,EAASA,EAAGm+B,WAAajzB,EAAKizB,SACnG,GAAIjzB,EAAKswB,UACLtwB,EAAK/Y,QACLgsC,GACAjzB,EAAKk3B,aAAa,aAAc,CAChC,MAAQvM,UAAW1jC,EAAQuzC,YAAasE,GAAmB9+B,EAAK/Y,QAC1D62C,cAAEA,GAAkB99B,EAAK5N,QACzBkpC,EAAWrI,EAASz/B,SAAWwM,EAAK/Y,OAAOuM,OAG3B,SAAlBsqC,EACArW,GAAUvB,IACN,MAAM6Y,EAAezD,EACfrI,EAASuH,YAAYtU,GACrB+M,EAAStI,UAAUzE,GACnB15B,EAASy5B,GAAW8Y,GAC1BA,EAAa9xC,IAAMhG,EAAOi/B,GAAMj5B,IAChC8xC,EAAa7xC,IAAM6xC,EAAa9xC,IAAMT,IAGrCqxC,GAA0BC,EAAe7K,EAAStI,UAAW1jC,IAClEwgC,GAAUvB,IACN,MAAM6Y,EAAezD,EACfrI,EAASuH,YAAYtU,GACrB+M,EAAStI,UAAUzE,GACnB15B,EAASy5B,GAAWh/B,EAAOi/B,IACjC6Y,EAAa7xC,IAAM6xC,EAAa9xC,IAAMT,EAIlCwT,EAAK63B,iBAAmB73B,EAAKqwB,mBAC7BrwB,EAAKm1B,mBAAoB,EACzBn1B,EAAK63B,eAAe3R,GAAMh5B,IACtB8S,EAAK63B,eAAe3R,GAAMj5B,IAAMT,KAIhD,MAAMwyC,EtB7yCM,CAChB7yC,EAPoB,CACpBo6B,UAAW,EACX/4B,MAAO,EACPwH,OAAQ,EACRsxB,YAAa,GAIbl6B,EARoB,CACpBm6B,UAAW,EACX/4B,MAAO,EACPwH,OAAQ,EACRsxB,YAAa,IsBgzCTE,GAAawY,EAAa/3C,EAAQgsC,EAAStI,WAC3C,MAAMsU,EtB/yCM,CAChB9yC,EAPoB,CACpBo6B,UAAW,EACX/4B,MAAO,EACPwH,OAAQ,EACRsxB,YAAa,GAIbl6B,EARoB,CACpBm6B,UAAW,EACX/4B,MAAO,EACPwH,OAAQ,EACRsxB,YAAa,IsBkzCLgV,EACA9U,GAAayY,EAAaj/B,EAAK26B,eAAemE,GAAgB,GAAO7L,EAASuH,aAG9EhU,GAAayY,EAAah4C,EAAQgsC,EAAStI,WAE/C,MAAMoD,GAAoBoE,GAAY6M,GACtC,IAAItH,GAA2B,EAC/B,IAAK13B,EAAK+yB,WAAY,CAClB,MAAMmI,EAAiBl7B,EAAKw7B,6BAK5B,GAAIN,IAAmBA,EAAenI,WAAY,CAC9C,MAAQE,SAAUiM,EAAgBj4C,OAAQk4C,GAAiBjE,EAC3D,GAAIgE,GAAkBC,EAAc,CAChC,MAAMC,EtB5zCR,CACdjzC,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsB8zCrB05B,GAAqBwY,EAAkBnM,EAAStI,UAAWuU,EAAevU,WAC1E,MAAM+R,EtB9zCR,CACdvwC,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,IsBg0CrB05B,GAAqB8V,EAAgBz1C,EAAQk4C,EAAaxU,WACrDyH,GAAiBgN,EAAkB1C,KACpChF,GAA2B,GAE3BwD,EAAe9oC,QAAQimC,aACvBr4B,EAAK63B,eAAiB6E,EACtB18B,EAAKy7B,qBAAuB2D,EAC5Bp/B,EAAKk7B,eAAiBA,EAE9B,CACJ,CACJ,CACAl7B,EAAK+2B,gBAAgB,YAAa,CAC9B9vC,OAAAA,EACAgsC,WACAj3B,MAAOijC,EACPD,cACAjR,mBACA2J,4BAER,MAAA,GACS13B,EAAKswB,SAAU,CACpB,MAAM3M,eAAEA,GAAmB3jB,EAAK5N,QAChCuxB,GAAkBA,GACtB,CAMA3jB,EAAK5N,QAAQgI,gBAAa,CAC9B,CACA,SAASg8B,GAAoBp2B,GAIzBu0B,GAAoBC,aACfx0B,EAAKrX,SAQLqX,EAAK27B,iBACN37B,EAAKm1B,kBAAoBn1B,EAAKrX,OAAOwsC,mBAOzCn1B,EAAKo1B,0BAA4Bp1B,EAAKo1B,wBAA0BxvC,QAAQoa,EAAKm1B,mBACzEn1B,EAAKrX,OAAOwsC,mBACZn1B,EAAKrX,OAAOysC,0BAChBp1B,EAAKq1B,mBAAqBr1B,EAAKq1B,iBAAmBr1B,EAAKrX,OAAO0sC,kBAClE,CACA,SAASkB,GAAgBv2B,GACrBA,EAAKm1B,kBACDn1B,EAAKo1B,wBACDp1B,EAAKq1B,kBACD,CAChB,CACA,SAASiE,GAAct5B,GACnBA,EAAKs5B,eACT,CACA,SAASL,GAAkBj5B,GACvBA,EAAKi5B,mBACT,CACA,SAASC,GAAmBl5B,GACxBA,EAAKozB,eAAgB,CACzB,CACA,SAAS+F,GAAoBn5B,GACzB,MAAMtX,cAAEA,GAAkBsX,EAAK5N,QAC3B1J,GAAiBA,EAAc4X,WAAW++B,uBAC1C32C,EAAc0zB,OAAO,uBAEzBpc,EAAKg1B,gBACT,CACA,SAASwC,GAAgBx3B,GACrBA,EAAKw3B,kBACLx3B,EAAKg7B,YAAch7B,EAAK63B,eAAiB73B,EAAKzM,YAAS,EACvDyM,EAAKm1B,mBAAoB,CAC7B,CACA,SAASkB,GAAmBr2B,GACxBA,EAAKq2B,oBACT,CACA,SAASC,GAAet2B,GACpBA,EAAKs2B,gBACT,CACA,SAASsC,GAAc54B,GACnBA,EAAK44B,eACT,CACA,SAASW,GAAoBvJ,GACzBA,EAAMyD,oBACV,CACA,SAASwJ,GAAa1wB,EAAQvQ,EAAOzY,GACjCgpB,EAAOga,UAAYrtB,GAAI8C,EAAMuqB,UAAW,EAAGhjC,GAC3CgpB,EAAO/e,MAAQ0L,GAAI8C,EAAMxO,MAAO,EAAGjK,GACnCgpB,EAAOvX,OAASgH,EAAMhH,OACtBuX,EAAO+Z,YAActqB,EAAMsqB,WAC/B,CACA,SAAS4W,GAAQ3wB,EAAQjC,EAAMC,EAAIhnB,GAC/BgpB,EAAOtf,IAAMiM,GAAIoR,EAAKrd,IAAKsd,EAAGtd,IAAK1J,GACnCgpB,EAAOrf,IAAMgM,GAAIoR,EAAKpd,IAAKqd,EAAGrd,IAAK3J,EACvC,CAKA,SAASu5C,GAAoB98B,GACzB,OAAQA,EAAKkzB,sBAAwD,IAArClzB,EAAKkzB,gBAAgBkK,WACzD,CACA,MAAMrF,GAA0B,CAC5BhpB,SAAU,IACVzI,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBg5B,GAAqBC,GAAgC,oBAAdC,WACzCA,UAAUC,UAAUn7C,cAAciH,SAASg0C,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEnyC,KAAKQ,MACL2M,GACN,SAASigC,GAAUrU,GAEfA,EAAKj5B,IAAMyyC,GAAWxZ,EAAKj5B,KAC3Bi5B,EAAKh5B,IAAMwyC,GAAWxZ,EAAKh5B,IAC/B,CAKA,SAAS2wC,GAA0BC,EAAe7K,EAAUhsC,GACxD,MAA0B,aAAlB62C,GACe,oBAAlBA,IACI3X,GAAOkM,GAAYY,GAAWZ,GAAYprC,GAAS,GAChE,CKp9CA,MAAM04C,GAAyBhL,GAAqB,CAChDC,qBAAsB,CAACnwC,EAAK23B,IAAWpe,GAAYvZ,EAAK,SAAU23B,GAClE0Y,cAAe,KAAA,CACX3oC,EAAGtI,SAAS+7C,gBAAgBC,YAAch8C,SAASi8C,KAAKD,WACxDzzC,EAAGvI,SAAS+7C,gBAAgBG,WAAal8C,SAASi8C,KAAKC,YAE3DhL,kBAAmB,KAAM,ICNvB3I,GAAqB,CACvBljC,aAAS,GAEP82C,GAAqBrL,GAAqB,CAC5CG,cAAgB1qC,IAAA,CACZ+B,EAAG/B,EAASy1C,WACZzzC,EAAGhC,EAAS21C,YAEhBlL,cAAe,KACX,IAAKzI,GAAmBljC,QAAS,CAC7B,MAAM+2C,EAAe,IAAIN,GAAuB,IAChDM,EAAa51C,MAAMd,QACnB02C,EAAavQ,WAAW,CAAEoK,cAAc,IACxC1N,GAAmBljC,QAAU+2C,CACjC,CACA,OAAO7T,GAAmBljC,SAE9B8rC,eAAgB,CAAC5qC,EAAUF,KACvBE,EAASkI,MAAMvF,eAAsB,IAAV7C,EAAsBA,EAAQ,QAE7D6qC,kBAAoB3qC,GAAaxE,QAAuD,UAA/C2D,OAAO22C,iBAAiB91C,GAAU+1C,YClBzEx5C,GAAO,CACTI,IAAK,CACDgZ,QrBKR,cAAyBA,GACrB,WAAAtF,GACI2H,SAASC,WACT3H,KAAK0lC,0BAA4B9lC,EACrC,CACA,aAAA+lC,CAAcC,GACV5lC,KAAK6lC,QAAU,IAAIvc,GAAWsc,EAAkB5lC,KAAK8lC,oBAAqB,CACtEl9C,mBAAoBoX,KAAKsF,KAAKmrB,wBAC9BjH,cAAemF,GAAiB3uB,KAAKsF,OAE7C,CACA,iBAAAwgC,GACI,MAAMC,kBAAEA,aAAmBC,EAAAC,MAAYA,EAAAC,SAAOA,GAAalmC,KAAKsF,KAAKM,WACrE,MAAO,CACHmlB,eAAgBuI,GAAayS,GAC7B3b,QAASkJ,GAAa0S,GACtB3b,OAAQ4b,EACRvb,MAAO,CAAC7mB,EAAO8B,YACJ3F,KAAK6lC,QACRK,GACArlC,GAAMlS,OAAO,IAAMu3C,EAASriC,EAAO8B,KAInD,CACA,KAAAhW,GACIqQ,KAAK0lC,0BAA4BthC,GAAgBpE,KAAKsF,KAAK9W,QAAS,cAAgBqV,GAAU7D,KAAK2lC,cAAc9hC,GACrH,CACA,MAAAlV,GACIqR,KAAK6lC,SAAW7lC,KAAK6lC,QAAQ5a,eAAejrB,KAAK8lC,oBACrD,CACA,OAAAl2C,GACIoQ,KAAK0lC,4BACL1lC,KAAK6lC,SAAW7lC,KAAK6lC,QAAQpb,KACjC,IqBrCAx+B,KAAM,CACFoZ,QCNR,cAA0BA,GACtB,WAAAtF,CAAYuF,GACRoC,MAAMpC,GACNtF,KAAKmmC,oBAAsBvmC,GAC3BI,KAAKgrB,gBAAkBprB,GACvBI,KAAKic,SAAW,IAAI8S,GAA0BzpB,EAClD,CACA,KAAA3V,GAGI,MAAMy2C,aAAEA,GAAiBpmC,KAAKsF,KAAKM,WAC/BwgC,IACApmC,KAAKmmC,oBAAsBC,EAAatd,UAAU9oB,KAAKic,WAE3Djc,KAAKgrB,gBAAkBhrB,KAAKic,SAAS8W,gBAAkBnzB,EAC3D,CACA,OAAAhQ,GACIoQ,KAAKmmC,sBACLnmC,KAAKgrB,iBACT,GDZIqb,eAAgBf,GAChB33C,mBECF24C,GAAwB,uDAS9B,SAASC,GAAiB/3C,EAASqO,EAAS08B,EAAQ,GAEhD,MAAOvnC,EAAOw0C,GAVlB,SAA0Bh4C,GACtB,MAAMmgB,EAAQ23B,GAAsBG,KAAKj4C,GACzC,IAAKmgB,EACD,MAAO,CAAA,GACX,MAAM,CAAG3c,EAAOw0C,GAAY73B,EAC5B,MAAO,CAAC3c,EAAOw0C,EACnB,CAI8BE,CAAiBl4C,GAE3C,IAAKwD,EACD,OAEJ,MAAMwN,EAAW3Q,OAAO22C,iBAAiB3oC,GAAS8pC,iBAAiB30C,GACnE,GAAIwN,EAAU,CACV,MAAMonC,EAAUpnC,EAAS/G,OACzB,OAAO2oB,GAAkBwlB,GAAWh0C,WAAWg0C,GAAWA,CAC9D,CAAA,OACS10C,EAAmBs0C,GAEjBD,GAAiBC,EAAU3pC,EAAS08B,EAAQ,GAG5CiN,CAEf,CCjCA,MAAMK,OAAqB11C,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEE21C,GAAmBr6C,GAAQo6C,GAAep2C,IAAIhE,GAI9Cs6C,GAAiB18C,GAAMA,IAAMqI,GAAUrI,IAAMuJ,EAC7CozC,GAAmB,CAACC,EAAQC,IAAQt0C,WAAWq0C,EAAOxzC,MAAM,MAAMyzC,IAClEC,GAAyB,CAACC,EAAMC,IAAS,CAACC,GAASj1C,gBACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,MAAMk1C,EAAWl1C,EAAUsc,MAAM,sBACjC,GAAI44B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAAS50C,EAAUsc,MAAM,oBAC/B,OAAIs4B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAIr2C,IAAI,CAAC,IAAK,IAAK,MACnCs2C,GAAgCx2C,EAAmB2tB,OAAQnyB,IAAS+6C,GAAc/2C,IAAIhE,IAe5F,MAAMi7C,GAAmB,CAErB7yC,MAAO,EAAGpD,MAAOiE,cAAc,IAAKF,eAAe,OAAU/D,EAAEe,IAAMf,EAAEc,IAAMK,WAAW8C,GAAe9C,WAAW4C,GAClHT,OAAQ,EAAGrD,MAAO6D,aAAa,IAAKE,gBAAgB,OAAU/D,EAAEc,IAAMd,EAAEa,IAAMK,WAAW2C,GAAc3C,WAAW6C,GAClHP,IAAK,CAACoyC,GAASpyC,SAAUtC,WAAWsC,GACpCG,KAAM,CAACiyC,GAASjyC,UAAWzC,WAAWyC,GACtCD,OAAQ,EAAG1D,MAAOwD,SAAUtC,WAAWsC,IAAQxD,EAAEc,IAAMd,EAAEa,KACzD4C,MAAO,EAAG1D,MAAO4D,UAAWzC,WAAWyC,IAAS5D,EAAEe,IAAMf,EAAEc,KAE1Dd,EAAG01C,GAAuB,EAAG,IAC7Bz1C,EAAGy1C,GAAuB,EAAG,KAGjCO,GAAiB/wC,WAAa+wC,GAAiBj2C,EAC/Ci2C,GAAiB9wC,WAAa8wC,GAAiBh2C,EAC/C,MA6BMi2C,GAAmC,CAAC35C,EAAe6K,EAAQyB,EAAS,CAAA,EAAImF,EAAgB,MAC1F5G,EAAS,IAAKA,GACd4G,EAAgB,IAAKA,GACrB,MAAMmoC,EAAuB59C,OAAO0R,KAAK7C,GAAQ+lB,OAAOkoB,IAGxD,IAAIe,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GAkF7B,GAjFAH,EAAqBroC,QAAS9S,IAC1B,MAAM+C,EAAQxB,EAAcq2B,SAAS53B,GACrC,IAAKuB,EAAco2B,SAAS33B,GACxB,OACJ,IAAImjB,EAAOtV,EAAO7N,GACdu7C,EAAWhkB,GAAuBpU,GACtC,MAAMC,EAAKhX,EAAOpM,GAClB,IAAIw7C,EAKJ,GAAI7pC,GAAkByR,GAAK,CACvB,MAAMq4B,EAAer4B,EAAG/d,OAClBq2C,EAAsB,OAAVt4B,EAAG,GAAc,EAAI,EACvCD,EAAOC,EAAGs4B,GACVH,EAAWhkB,GAAuBpU,GAClC,IAAA,IAASpX,EAAI2vC,EAAW3vC,EAAI0vC,GAKV,OAAVr4B,EAAGrX,GAL+BA,IAOjCyvC,EAMDp9B,GAAUmZ,GAAuBnU,EAAGrX,MAAQyvC,GAL5CA,EAASjkB,GAAuBnU,EAAGrX,GAQ/C,MAEIyvC,EAASjkB,GAAuBnU,GAEpC,GAAIm4B,IAAaC,EAGb,GAAIlB,GAAciB,IAAajB,GAAckB,GAAS,CAClD,MAAMz5C,EAAUgB,EAAMe,MACC,iBAAZ/B,GACPgB,EAAMkB,IAAIkC,WAAWpE,IAEP,iBAAPqhB,EACPhX,EAAOpM,GAAOmG,WAAWid,GAEpBvlB,MAAMC,QAAQslB,IAAOo4B,IAAWr0C,IACrCiF,EAAOpM,GAAOojB,EAAGxD,IAAIzZ,YAE7B,MACUo1C,aAA2C,EAASA,EAAS31C,aAClE41C,aAAuC,EAASA,EAAO51C,aAC9C,IAATud,GAAqB,IAAPC,GAGF,IAATD,EACApgB,EAAMkB,IAAIu3C,EAAO51C,UAAUud,IAG3B/W,EAAOpM,GAAOu7C,EAAS31C,UAAUwd,IAMhCi4B,IACDD,EAvIpB,SAAyC75C,GACrC,MAAMo6C,EAAoB,GAW1B,OAVAX,GAA8BloC,QAAS9S,IACnC,MAAM+C,EAAQxB,EAAcq2B,SAAS53B,QACvB,IAAV+C,IACA44C,EAAkB/nC,KAAK,CAAC5T,EAAK+C,EAAMe,QACnCf,EAAMkB,IAAIjE,EAAI4E,WAAW,SAAW,EAAI,MAI5C+2C,EAAkBt2C,QAClB9D,EAAce,SACXq5C,CACX,CA2HwBC,CAAgCr6C,GACpC85C,GAAsC,GAE1CC,EAAqB1nC,KAAK5T,GAC1BgT,EAAchT,QACa,IAAvBgT,EAAchT,GACRgT,EAAchT,GACdoM,EAAOpM,GACjB+C,EAAM4zB,KAAKvT,MAInBk4B,EAAqBj2C,OAAQ,CAC7B,MAAMw2C,EAAUP,EAAqBj3C,QAAQ,WAAa,EACpDjC,OAAO05C,YACP,KACAC,EA3HmB,EAAC3vC,EAAQ7K,EAAey6C,KACrD,MAAMC,EAAa16C,EAAcugC,qBAC3B1xB,EAAU7O,EAAcQ,QACxBm6C,EAAuBnD,iBAAiB3oC,IACxC2kC,QAAEA,GAAYmH,EACdruC,EAAS,CAAA,EAGC,SAAZknC,GACAxzC,EAAc41C,eAAe,UAAW/qC,EAAO2oC,SAAW,SAK9DiH,EAAYlpC,QAAS9S,IACjB6N,EAAO7N,GAAOi7C,GAAiBj7C,GAAKi8C,EAAYC,KAGpD36C,EAAce,SACd,MAAM65C,EAAa56C,EAAcugC,qBAQjC,OAPAka,EAAYlpC,QAAS9S,IAGjB,MAAM+C,EAAQxB,EAAcq2B,SAAS53B,GACrC+C,GAASA,EAAM4zB,KAAK9oB,EAAO7N,IAC3BoM,EAAOpM,GAAOi7C,GAAiBj7C,GAAKm8C,EAAYD,KAE7C9vC,GAgGqBgwC,CAAyBhwC,EAAQ7K,EAAe+5C,GAaxE,OAXIF,EAAuB/1C,QACvB+1C,EAAuBtoC,QAAQ,EAAE9S,EAAK+C,MAClCxB,EAAcq2B,SAAS53B,GAAKiE,IAAIlB,KAIxCxB,EAAce,SAEV7F,GAAyB,OAAZo/C,GACbz5C,OAAOi6C,SAAS,CAAE5zC,IAAKozC,IAEpB,CAAEzvC,OAAQ2vC,EAAiB/oC,gBACtC,CAEI,MAAO,CAAE5G,SAAQ4G,kBAUzB,SAASspC,GAAe/6C,EAAe6K,EAAQyB,EAAQmF,GACnD,MA3MqB,CAAC5G,GACf7O,OAAO0R,KAAK7C,GAAQ9N,KAAK+7C,IA0MzBkC,CAAiBnwC,GAClB8uC,GAAiC35C,EAAe6K,EAAQyB,EAAQmF,GAChE,CAAE5G,SAAQ4G,gBACpB,CC5NA,MAAMwpC,GAAkB,CAACj7C,EAAe6K,EAAQyB,EAAQmF,KACpD,MAAMD,EFuCV,SAA6BxR,MAAoB6K,GAAU4G,GACvD,MAAM5C,EAAU7O,EAAcQ,QAC9B,KAAMqO,aAAmB+f,SACrB,MAAO,CAAE/jB,SAAQ4G,iBAGjBA,IACAA,EAAgB,IAAKA,IAGzBzR,EAAcsO,OAAOiD,QAAS/P,IAC1B,MAAMhB,EAAUgB,EAAMe,MACtB,IAAK2B,EAAmB1D,GACpB,OACJ,MAAMgR,EAAW+mC,GAAiB/3C,EAASqO,GACvC2C,GACAhQ,EAAMkB,IAAI8O,KAIlB,IAAA,MAAW/S,KAAOoM,EAAQ,CACtB,MAAMrK,EAAUqK,EAAOpM,GACvB,IAAKyF,EAAmB1D,GACpB,SACJ,MAAMgR,EAAW+mC,GAAiB/3C,EAASqO,GACtC2C,IAGL3G,EAAOpM,GAAO+S,EACTC,IACDA,EAAgB,CAAA,QAIO,IAAvBA,EAAchT,KACdgT,EAAchT,GAAO+B,GAE7B,CACA,MAAO,CAAEqK,SAAQ4G,gBACrB,CE9EqBypC,CAAoBl7C,EAAe6K,EAAQ4G,GAG5D,OAAOspC,GAAe/6C,EAFtB6K,EAAS2G,EAAS3G,OAE2ByB,EAD7CmF,EAAgBD,EAASC,gBCTvB0pC,GAAuB,CAAE36C,QAAS,MAClC46C,GAA2B,CAAE56C,SAAS,GCF5C,MAAM66C,OAAyB/iC,QCoBzBgjC,GAAet/C,OAAO0R,KAAKlP,GAC3B+8C,GAAcD,GAAax3C,OAC3B03C,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkB9+C,EAAamH,OAKrC,MAAM43C,GACF,WAAA3pC,EAAY9R,OAAEA,EAAApD,MAAQA,EAAAsD,gBAAOA,EAAAC,oBAAiBA,cAAqBL,GAAgB2J,EAAU,IAKzFsI,KAAKxR,QAAU,KAIfwR,KAAKvD,aAAetL,IAIpB6O,KAAK/U,eAAgB,EACrB+U,KAAKpV,uBAAwB,EAQ7BoV,KAAKulB,mBAAqB,KAM1BvlB,KAAK1D,WAAahM,IAIlB0P,KAAK1S,SAAW,CAAA,EAKhB0S,KAAK2pC,uBAAyBr5C,IAM9B0P,KAAK4pC,iBAAmB,CAAA,EAIxB5pC,KAAKkiB,OAAS,CAAA,EAMdliB,KAAK6pC,uBAAyB,CAAA,EAC9B7pC,KAAK8pC,aAAe,IAAM9pC,KAAK0hB,OAAO,SAAU1hB,KAAKvI,cACrDuI,KAAKjR,OAAS,KACLiR,KAAKxR,UAEVwR,KAAK+pC,eACL/pC,KAAKgqC,eAAehqC,KAAKxR,QAASwR,KAAK5C,YAAa4C,KAAKnV,MAAM+M,MAAOoI,KAAKjD,cAE/EiD,KAAK63B,eAAiB,IAAMh3B,GAAM9R,OAAOiR,KAAKjR,QAAQ,GAAO,GAC7D,MAAM0I,aAAEA,EAAA2F,YAAcA,GAAgBrP,EACtCiS,KAAKvI,aAAeA,EACpBuI,KAAKiqC,WAAa,IAAKxyC,GACvBuI,KAAKkqC,cAAgBr/C,EAAMQ,QAAU,IAAKoM,GAAiB,CAAA,EAC3DuI,KAAK5C,YAAcA,EACnB4C,KAAK/R,OAASA,EACd+R,KAAKnV,MAAQA,EACbmV,KAAK7R,gBAAkBA,EACvB6R,KAAKu5B,MAAQtrC,EAASA,EAAOsrC,MAAQ,EAAI,EACzCv5B,KAAK5R,oBAAsBA,EAC3B4R,KAAKtI,QAAUA,EACfsI,KAAKpV,sBAAwBA,EAAsBC,GACnDmV,KAAK/U,cAAgBA,EAAcJ,GAC/BmV,KAAK/U,gBACL+U,KAAK6lB,oBAAsB10B,KAE/B6O,KAAK4nB,uBAAyB18B,QAAQ+C,GAAUA,EAAOO,SAWvD,MAAMw2B,WAAEA,KAAemlB,GAAwBnqC,KAAKzC,4BAA4B1S,EAAO,IACvF,IAAA,MAAW4B,KAAO09C,EAAqB,CACnC,MAAM36C,EAAQ26C,EAAoB19C,QACR,IAAtBgL,EAAahL,IAAsB6E,EAAc9B,KACjDA,EAAMkB,IAAI+G,EAAahL,IAAM,GACzB00B,GAAwB6D,IACxBA,EAAW7kB,IAAI1T,GAG3B,CACJ,CAQA,2BAAA8Q,CAA4B6sC,EAAQC,GAChC,MAAO,CAAA,CACX,CACA,KAAA16C,CAAMD,GACFsQ,KAAKxR,QAAUkB,EACf25C,GAAmB34C,IAAIhB,EAAUsQ,MAC7BA,KAAKjD,aAAeiD,KAAKjD,WAAWrN,UACpCsQ,KAAKjD,WAAWpN,MAAMD,GAEtBsQ,KAAK/R,QAAU+R,KAAK/U,gBAAkB+U,KAAKpV,wBAC3CoV,KAAKsqC,sBAAwBtqC,KAAK/R,OAAOs8C,gBAAgBvqC,OAE7DA,KAAK1D,OAAOiD,QAAQ,CAAC/P,EAAO/C,IAAQuT,KAAKwqC,kBAAkB/9C,EAAK+C,IAC3D45C,GAAyB56C,SC1JtC,WAEI,GADA46C,GAAyB56C,SAAU,EAC9BtF,EAEL,GAAI2F,OAAO47C,WAAY,CACnB,MAAMC,EAAmB77C,OAAO47C,WAAW,4BACrCE,EAA8B,IAAOxB,GAAqB36C,QAAUk8C,EAAiBtgC,QAC3FsgC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIxB,GAAqB36C,SAAU,CAEvC,CD8IYq8C,GAEJ7qC,KAAKulB,mBAC4B,UAA7BvlB,KAAK5R,sBAE8B,WAA7B4R,KAAK5R,qBAED+6C,GAAqB36C,SAI/BwR,KAAK/R,QACL+R,KAAK/R,OAAOwO,SAAS0D,IAAIH,MAC7BA,KAAKrR,OAAOqR,KAAKnV,MAAOmV,KAAK7R,gBACjC,CACA,OAAAyB,GACIy5C,GAAmB5oC,OAAOT,KAAKxR,SAC/BwR,KAAKjD,YAAciD,KAAKjD,WAAWnN,UACnCmR,GAAYf,KAAK8pC,cACjB/oC,GAAYf,KAAKjR,QACjBiR,KAAK2pC,mBAAmBpqC,QAASe,GAAWA,KAC5CN,KAAKsqC,uBAAyBtqC,KAAKsqC,wBACnCtqC,KAAK/R,QAAU+R,KAAK/R,OAAOwO,SAASgE,OAAOT,MAC3C,IAAA,MAAWvT,KAAOuT,KAAKkiB,OACnBliB,KAAKkiB,OAAOz1B,GAAKiU,QAErB,IAAA,MAAWjU,KAAOuT,KAAK1S,SACnB0S,KAAK1S,SAASb,GAAKmD,UAEvBoQ,KAAKxR,QAAU,IACnB,CACA,iBAAAg8C,CAAkB/9C,EAAK+C,GACnB,MAAMs7C,EAAmB55C,EAAeT,IAAIhE,GACtCs+C,EAAiBv7C,EAAMqzB,GAAG,SAAWmoB,IACvChrC,KAAKvI,aAAahL,GAAOu+C,EACzBhrC,KAAKnV,MAAMqvB,UACPrZ,GAAMlS,OAAOqR,KAAK8pC,cAAc,GAAO,GACvCgB,GAAoB9qC,KAAKjD,aACzBiD,KAAKjD,WAAW49B,kBAAmB,KAGrCsQ,EAAwBz7C,EAAMqzB,GAAG,gBAAiB7iB,KAAK63B,gBAC7D73B,KAAK2pC,mBAAmBj5C,IAAIjE,EAAK,KAC7Bs+C,IACAE,KAER,CACA,gBAAA3kB,CAAiB4kB,GAIb,OAAKlrC,KAAKxR,SACLwR,KAAKmrC,0BACNnrC,KAAK5N,OAAS84C,EAAM94C,KAGjB4N,KAAKmrC,yBAAyBnrC,KAAKxR,QAAS08C,EAAM18C,SAF9C,CAGf,CACA,YAAAjB,EAAakP,SAAEA,KAAa2uC,GAAiB/7C,EAAUpC,EAAmBmC,GACtE,IAAIi8C,EACA19C,EAaJ,IAAA,IAAS6K,EAAI,EAAGA,EAAI+wC,GAAa/wC,IAAK,CAClC,MAAMxN,EAAOs+C,GAAa9wC,IACpB9L,UAAEA,EAAW2Y,QAASimC,EAAAjF,eAAoBA,EAAgB14C,cAAe49C,GAA4B/+C,EAAmBxB,GAC1Hq7C,IACAgF,EAA4BhF,GAC5B35C,EAAU0+C,MACLprC,KAAK1S,SAAStC,IAASsgD,IACxBtrC,KAAK1S,SAAStC,GAAQ,IAAIsgD,EAAmBtrC,OAE7CurC,IACA59C,EAAgB49C,GAG5B,CACA,IAAmB,SAAdvrC,KAAK5N,MAAiC,QAAd4N,KAAK5N,QAC7B4N,KAAKjD,YACNsuC,EAA2B,CAC3BrrC,KAAKjD,WAAa,IAAIsuC,EAA0BrrC,KAAKvI,aAAcuI,KAAK/R,QAAU+R,KAAK/R,OAAO8O,YAC9F,MAAMlP,SAAEA,EAAUtB,OAAAA,EAAQN,KAAAA,EAAAA,gBAAM8kC,EAAAqO,aAAiBA,EAAAzB,WAAcA,GAAgByN,EAC/EprC,KAAKjD,WAAWi4B,WAAW,CACvBnnC,WACAtB,OAAAA,EACAwyC,oBAAqB7zC,QAAQe,IACxB8kC,GAAmBjnC,EAAYinC,GACpC/iC,cAAegS,KACf63B,eAAgB,IAAM73B,KAAK63B,iBAQ3BuL,cAAiC,iBAAX72C,EAAsBA,EAAS,OACrDg3C,uBAAwBn0C,EACxBgwC,eACAzB,cAER,CACA,OAAOhwC,CACX,CACA,cAAAuB,GACI,IAAA,MAAWzC,KAAOuT,KAAK1S,SAAU,CAC7B,MAAMk+C,EAAUxrC,KAAK1S,SAASb,GAC1B++C,EAAQjmC,UACRimC,EAAQ78C,UAGR68C,EAAQ77C,QACR67C,EAAQjmC,WAAY,EAE5B,CACJ,CACA,YAAAwkC,GACI/pC,KAAKyrC,MAAMzrC,KAAK5C,YAAa4C,KAAKvI,aAAcuI,KAAKtI,QAASsI,KAAKnV,MACvE,CAMA,kBAAA0jC,GACI,OAAOvuB,KAAKxR,QACNwR,KAAK0rC,2BAA2B1rC,KAAKxR,QAASwR,KAAKnV,OpC3R/C,CACd4G,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,GoC8RrC,CACA,cAAAm5C,CAAel/C,GACX,OAAOuT,KAAKvI,aAAahL,EAC7B,CACA,cAAAm3C,CAAen3C,EAAK+C,GAChBwQ,KAAKvI,aAAahL,GAAO+C,CAC7B,CAQA,oBAAAu1B,CAAqBlsB,EAAQ+yC,GAAY,GACrC,OAAO5rC,KAAK6rC,iCAAiChzC,EAAQmH,KAAKnV,MAAO+gD,EACrE,CAKA,MAAAj9C,CAAO9D,EAAOsD,IACNtD,EAAM8M,mBAAqBqI,KAAKnV,MAAM8M,oBACtCqI,KAAK63B,iBAET73B,KAAKxC,UAAYwC,KAAKnV,MACtBmV,KAAKnV,MAAQA,EACbmV,KAAKmpB,oBAAsBnpB,KAAK7R,gBAChC6R,KAAK7R,gBAAkBA,EAIvB,IAAA,IAASqK,EAAI,EAAGA,EAAIgxC,GAAkB13C,OAAQ0G,IAAK,CAC/C,MAAM/L,EAAM+8C,GAAkBhxC,GAC1BwH,KAAK6pC,uBAAuBp9C,KAC5BuT,KAAK6pC,uBAAuBp9C,YACrBuT,KAAK6pC,uBAAuBp9C,IAEvC,MAAMq/C,EAAWjhD,EAAM,KAAO4B,GAC1Bq/C,IACA9rC,KAAK6pC,uBAAuBp9C,GAAOuT,KAAK6iB,GAAGp2B,EAAKq/C,GAExD,CACA9rC,KAAK4pC,iBE9Ub,SAAqC/sC,EAAS0N,EAAMC,GAChD,MAAMwa,WAAEA,GAAeza,EACvB,IAAA,MAAW9d,KAAO8d,EAAM,CACpB,MAAMwhC,EAAYxhC,EAAK9d,GACjBu/C,EAAYxhC,EAAK/d,GACvB,GAAI6E,EAAcy6C,GAKdlvC,EAAQynB,SAAS73B,EAAKs/C,GAClB5qB,GAAwB6D,IACxBA,EAAW7kB,IAAI1T,QASvB,GACS6E,EAAc06C,GAKnBnvC,EAAQynB,SAAS73B,EAAKo3B,GAAYkoB,EAAW,CAAEtuB,MAAO5gB,KAClDskB,GAAwB6D,IACxBA,EAAW1kB,OAAO7T,QAE1B,GACSu/C,IAAcD,EAMnB,GAAIlvC,EAAQunB,SAAS33B,GAAM,CACvB,MAAMw/C,EAAgBpvC,EAAQwnB,SAAS53B,IAEtCw/C,EAAcvpB,aAAeupB,EAAcv7C,IAAIq7C,EACpD,KACK,CACD,MAAMf,EAAcnuC,EAAQ8uC,eAAel/C,GAC3CoQ,EAAQynB,SAAS73B,EAAKo3B,QAA4B,IAAhBmnB,EAA4BA,EAAce,EAAW,CAAEtuB,MAAO5gB,IACpG,CAER,CAEA,IAAA,MAAWpQ,KAAO+d,OACI,IAAdD,EAAK9d,IACLoQ,EAAQqvC,YAAYz/C,GAE5B,OAAO8d,CACX,CFuRgC4hC,CAA4BnsC,KAAMA,KAAKzC,4BAA4B1S,EAAOmV,KAAKxC,WAAYwC,KAAK4pC,kBACpH5pC,KAAKosC,wBACLpsC,KAAKosC,wBAEb,CACA,QAAAxmC,GACI,OAAO5F,KAAKnV,KAChB,CAIA,UAAAwhD,CAAWrhD,GACP,OAAOgV,KAAKnV,MAAMM,SAAW6U,KAAKnV,MAAMM,SAASH,QAAQ,CAC7D,CAIA,oBAAAozB,GACI,OAAOpe,KAAKnV,MAAM6U,UACtB,CACA,qBAAA+wB,GACI,OAAOzwB,KAAKnV,MAAMjC,kBACtB,CACA,qBAAA0jD,GACI,OAAOtsC,KAAK/U,cACN+U,KACAA,KAAK/R,OACD+R,KAAK/R,OAAOq+C,6BACZ,CACd,CACA,iBAAAllB,CAAkBmlB,GAAgB,GAC9B,GAAIA,EACA,OAAOvsC,KAAK/R,OAAS+R,KAAK/R,OAAOm5B,yBAAsB,EAE3D,IAAKpnB,KAAKpV,sBAAuB,CAC7B,MAAMU,EAAU0U,KAAK/R,QACf+R,KAAK/R,OAAOm5B,qBACZ,CAAA,EAIN,YAH2B,IAAvBpnB,KAAKnV,MAAMQ,UACXC,EAAQD,QAAU2U,KAAKnV,MAAMQ,SAE1BC,CACX,CACA,MAAMA,EAAU,CAAA,EAChB,IAAA,IAASkN,EAAI,EAAGA,EAAIixC,GAAiBjxC,IAAK,CACtC,MAAMxN,EAAOL,EAAa6N,GACpB5M,EAAOoU,KAAKnV,MAAMG,IACpBZ,EAAewB,KAAkB,IAATA,KACxBN,EAAQN,GAAQY,EAExB,CACA,OAAON,CACX,CAIA,eAAAi/C,CAAgBvkC,GACZ,MAAMwmC,EAAqBxsC,KAAKssC,wBAChC,GAAIE,EAGA,OAFAA,EAAmB3mB,iBACf2mB,EAAmB3mB,gBAAgB1lB,IAAI6F,GACpC,IAAMwmC,EAAmB3mB,gBAAgBplB,OAAOuF,EAE/D,CAIA,QAAAse,CAAS73B,EAAK+C,GAENA,IAAUwQ,KAAK1D,OAAO/L,IAAI9D,KAC1BuT,KAAKksC,YAAYz/C,GACjBuT,KAAKwqC,kBAAkB/9C,EAAK+C,IAEhCwQ,KAAK1D,OAAO5L,IAAIjE,EAAK+C,GACrBwQ,KAAKvI,aAAahL,GAAO+C,EAAMe,KACnC,CAIA,WAAA27C,CAAYz/C,GACRuT,KAAK1D,OAAOmE,OAAOhU,GACnB,MAAMq2B,EAAc9iB,KAAK2pC,mBAAmBp5C,IAAI9D,GAC5Cq2B,IACAA,IACA9iB,KAAK2pC,mBAAmBlpC,OAAOhU,WAE5BuT,KAAKvI,aAAahL,GACzBuT,KAAKysC,2BAA2BhgD,EAAKuT,KAAK5C,YAC9C,CAIA,QAAAgnB,CAAS33B,GACL,OAAOuT,KAAK1D,OAAO7L,IAAIhE,EAC3B,CACA,QAAA43B,CAAS53B,EAAKiyB,GACV,GAAI1e,KAAKnV,MAAMyR,QAAU0D,KAAKnV,MAAMyR,OAAO7P,GACvC,OAAOuT,KAAKnV,MAAMyR,OAAO7P,GAE7B,IAAI+C,EAAQwQ,KAAK1D,OAAO/L,IAAI9D,GAK5B,YAJc,IAAV+C,QAAwC,IAAjBkvB,IACvBlvB,EAAQq0B,GAAYnF,EAAc,CAAEjB,MAAOzd,OAC3CA,KAAKskB,SAAS73B,EAAK+C,IAEhBA,CACX,CAMA,SAAAk9C,CAAUjgD,GACN,IAAI2N,EACJ,YAAkC,IAA3B4F,KAAKvI,aAAahL,IAAuBuT,KAAKxR,QAES,QAAvD4L,EAAK4F,KAAK2sC,uBAAuB3sC,KAAKnV,MAAO4B,UAAyB,IAAP2N,EAAgBA,EAAK4F,KAAK4sC,sBAAsB5sC,KAAKxR,QAAS/B,EAAKuT,KAAKtI,SADxIsI,KAAKvI,aAAahL,EAE5B,CAKA,aAAAogD,CAAcpgD,EAAK+C,GACfwQ,KAAKiqC,WAAWx9C,GAAO+C,CAC3B,CAKA,aAAAi5B,CAAch8B,GACV,IAAI2N,EACJ,MAAM/O,QAAEA,GAAY2U,KAAKnV,MACnBiiD,EAAsC,iBAAZzhD,GAA2C,iBAAZA,EACD,QAAvD+O,EAAK0D,GAAwBkC,KAAKnV,MAAOQ,UAA6B,IAAP+O,OAAgB,EAASA,EAAG3N,QAC5F,EAIN,GAAIpB,QAAgC,IAArByhD,EACX,OAAOA,EAMX,MAAMj0C,EAASmH,KAAK2sC,uBAAuB3sC,KAAKnV,MAAO4B,GACvD,YAAe,IAAXoM,GAAyBvH,EAAcuH,QAMR,IAA5BmH,KAAKkqC,cAAcz9C,SACD,IAArBqgD,OACE,EACA9sC,KAAKiqC,WAAWx9C,GARXoM,CASf,CACA,EAAAgqB,CAAGtf,EAAWrB,GAIV,OAHKlC,KAAKkiB,OAAO3e,KACbvD,KAAKkiB,OAAO3e,GAAa,IAAIie,IAE1BxhB,KAAKkiB,OAAO3e,GAAWpD,IAAI+B,EACtC,CACA,MAAAwf,CAAOne,KAAc+4B,GACbt8B,KAAKkiB,OAAO3e,IACZvD,KAAKkiB,OAAO3e,GAAWme,UAAU4a,EAEzC,EGrfJ,MAAMyQ,WAAyBrD,GAC3B,wBAAAyB,CAAyB5mC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEyoC,wBAAwBxoC,GAAS,GAAI,CAClD,CACA,sBAAAmoC,CAAuB9hD,EAAO4B,GAC1B,OAAO5B,EAAM+M,MAAQ/M,EAAM+M,MAAMnL,QAAO,CAC5C,CACA,0BAAAggD,CAA2BhgD,GAAKoL,KAAEA,EAAAD,MAAMA,WAC7BC,EAAKpL,UACLmL,EAAMnL,EACjB,CACA,gCAAAo/C,EAAiCnsC,WAAEA,EAAAD,cAAYA,KAAkB5G,IAAUK,gBAAEA,GAAmBqM,GAC5F,IAAIjL,EnDqFZ,SAAmBzB,EAAQ6G,EAAY1R,GACnC,MAAMsM,EAAS,CAAA,EACf,IAAA,MAAW7N,KAAOoM,EAAQ,CACtB,MAAMo0C,EAAmB1oB,GAAwB93B,EAAKiT,GACtD,QAAyB,IAArButC,EACA3yC,EAAO7N,GAAOwgD,MAEb,CACD,MAAMz9C,EAAQxB,EAAcq2B,SAAS53B,GACjC+C,IACA8K,EAAO7N,GAAO+C,EAAMe,MAE5B,CACJ,CACA,OAAO+J,CACX,CmDpGqB4yC,CAAUr0C,EAAQ6G,GAAc,CAAA,EAAIM,MAYjD,GARI9G,IACIuG,IACAA,EAAgBvG,EAAgBuG,IAChC5G,IACAA,EAASK,EAAgBL,IACzByB,IACAA,EAASpB,EAAgBoB,KAE7BiL,EAAW,EnDoBvB,SAAiCvX,EAAe6K,EAAQyB,GACpD,IAAIF,EAAI4X,EACR,MAAMm7B,EAAenjD,OAAO0R,KAAK7C,GAAQ+lB,OAAQnyB,IAASuB,EAAco2B,SAAS33B,IAC3E2gD,EAAeD,EAAar7C,OAClC,GAAKs7C,EAEL,IAAA,IAAS50C,EAAI,EAAGA,EAAI40C,EAAc50C,IAAK,CACnC,MAAM/L,EAAM0gD,EAAa30C,GACnB60C,EAAcx0C,EAAOpM,GAC3B,IAAI+C,EAAQ,KAKRlF,MAAMC,QAAQ8iD,KACd79C,EAAQ69C,EAAY,IAOV,OAAV79C,IACAA,EAAoG,QAA3FwiB,EAA4B,QAAtB5X,EAAKE,EAAO7N,UAAyB,IAAP2N,EAAgBA,EAAKpM,EAAc0+C,UAAUjgD,UAAyB,IAAPulB,EAAgBA,EAAKnZ,EAAOpM,IAMxI+C,UAEiB,iBAAVA,IACN4xB,GAAkB5xB,IAAUkwB,GAAkBlwB,IAE/CA,EAAQoD,WAAWpD,IAEb00B,GAAc10B,IAAUuiB,GAAQhhB,KAAKs8C,KAC3C79C,EAAQ0iB,GAAkBzlB,EAAK4gD,IAEnCr/C,EAAcs2B,SAAS73B,EAAKo3B,GAAYr0B,EAAO,CAAEiuB,MAAOzvB,UACpC,IAAhBsM,EAAO7N,KACP6N,EAAO7N,GAAO+C,GAEJ,OAAVA,GACAxB,EAAc6+C,cAAcpgD,EAAK+C,GACzC,CACJ,CmDjEY89C,CAAwBttC,KAAMnH,EAAQyB,GACtC,MAAM6X,EAAS82B,GAAgBjpC,KAAMnH,EAAQyB,EAAQmF,GACrDA,EAAgB0S,EAAO1S,cACvB5G,EAASsZ,EAAOtZ,MACpB,CACA,MAAO,CACH6G,aACAD,mBACG5G,EAEX,EC/BJ,MAAM00C,WAA0BR,GAC5B,WAAAhtC,GACI2H,SAASC,WACT3H,KAAK5N,KAAO,MAChB,CACA,qBAAAw6C,CAAsBl9C,EAAUjD,GAC5B,GAAIyE,EAAeT,IAAIhE,GAAM,CACzB,MAAM+gD,EAAchuB,GAAoB/yB,GACxC,OAAO+gD,GAAcA,EAAYz6C,SAAe,CACpD,CACK,CACD,MAAM06C,GAdQ5wC,EAcyBnN,EAbxCb,OAAO22C,iBAAiB3oC,IAcjBrN,GAASyC,EAAkBxF,GAC3BghD,EAAc9G,iBAAiBl6C,GAC/BghD,EAAchhD,KAAS,EAC7B,MAAwB,iBAAV+C,EAAqBA,EAAMiJ,OAASjJ,CACtD,CAnBR,IAA0BqN,CAoBtB,CACA,0BAAA6uC,CAA2Bh8C,GAAU9G,mBAAEA,IACnC,OAAO2lC,GAAmB7+B,EAAU9G,EACxC,CACA,KAAA6iD,CAAMruC,EAAa3F,EAAcC,EAAS7M,GACtC0M,GAAgB6F,EAAa3F,EAAcC,EAAS7M,EAAM8M,kBAC9D,CACA,2BAAA4F,CAA4B1S,EAAO2S,GAC/B,OAAOD,GAA4B1S,EAAO2S,EAC9C,CACA,sBAAA4uC,GACQpsC,KAAK0tC,oBACL1tC,KAAK0tC,2BACE1tC,KAAK0tC,mBAEhB,MAAMjxC,SAAEA,GAAauD,KAAKnV,MACtByG,EAAcmL,KACduD,KAAK0tC,kBAAoBjxC,EAASomB,GAAG,SAAW3nB,IACxC8E,KAAKxR,UACLwR,KAAKxR,QAAQm/C,YAAc,GAAGzyC,OAG9C,CACA,cAAA8uC,CAAet6C,EAAU0N,EAAaN,EAAWC,GAC7CH,GAAWlN,EAAU0N,EAAaN,EAAWC,EACjD,EC5CJ,MAAM6wC,WAAyBb,GAC3B,WAAAhtC,GACI2H,SAASC,WACT3H,KAAK5N,KAAO,MACZ4N,KAAK7E,UAAW,CACpB,CACA,sBAAAwxC,CAAuB9hD,EAAO4B,GAC1B,OAAO5B,EAAM4B,EACjB,CACA,qBAAAmgD,CAAsBl9C,EAAUjD,GAC5B,GAAIyE,EAAeT,IAAIhE,GAAM,CACzB,MAAM+gD,EAAchuB,GAAoB/yB,GACxC,OAAO+gD,GAAcA,EAAYz6C,SAAe,CACpD,CAEA,OADAtG,EAAOyQ,GAAoBzM,IAAIhE,GAA0BA,EAAnBhD,EAAYgD,GAC3CiD,EAASm+C,aAAaphD,EACjC,CACA,0BAAAi/C,GACI,MzClBU,CACdj6C,EAFe,CAASc,IAAK,EAAGC,IAAK,GAGrCd,EAHe,CAASa,IAAK,EAAGC,IAAK,GyCoBrC,CACA,2BAAA+K,CAA4B1S,EAAO2S,GAC/B,OAAOD,GAA4B1S,EAAO2S,EAC9C,CACA,KAAAiuC,CAAMruC,EAAa3F,EAAcC,EAAS7M,GACtC8P,GAAcyC,EAAa3F,EAAcC,EAASsI,KAAK7E,SAAUtQ,EAAM8M,kBAC3E,CACA,cAAAqyC,CAAet6C,EAAU0N,EAAaN,EAAWC,GAC7CI,GAAUzN,EAAU0N,EAAaN,EAAWC,EAChD,CACA,KAAApN,CAAMD,GACFsQ,KAAK7E,SAAWA,GAASzL,EAAS0T,SAClCsE,MAAM/X,MAAMD,EAChB,ECvCJ,MAAMo+C,GAAyB,CAACzgD,EAAWqK,IAChC9G,EAAevD,GAChB,IAAIugD,GAAiBl2C,EAAS,CAAEU,4BAA4B,IAC5D,IAAIm1C,GAAkB71C,EAAS,CAAEU,4BAA4B,ICEjEnL,GAAoB,IACnBg4B,MACAxd,MACAxb,MCTQ,CACXM,OAAQ,CACJ85C,eAAgBf,GAChB33C,oBDeFogD,GAAuB/9C,EAAkB,CAAC3C,EAAWsR,IEhB3D,SAA+BtR,GAAW8O,mBAAEA,GAAqB,GAASlP,EAAmBC,GAIzF,MAAO,IAHY0D,EAAevD,GAC5B0V,GACAM,GAGFpW,kBAAAA,EACAE,UAAW+O,GAAgBC,GAC3BjP,sBACAG,YAER,CFKsE2gD,CAAsB3gD,EAAWsR,EAAQ1R,GAAmB6gD,KGlBlI,SAASG,KACL,MAAM1oC,EAAYjX,EAAAA,QAAO,GAOzB,OANAlF,EAA0B,KACtBmc,EAAU/W,SAAU,EACb,KACH+W,EAAU/W,SAAU,IAEzB,IACI+W,CACX,CCLA,MAAM2oC,WAAwBC,EAAAA,UAC1B,uBAAAlZ,CAAwBz3B,GACpB,MAAMX,EAAUmD,KAAKnV,MAAMujD,SAAS5/C,QACpC,GAAIqO,GAAWW,EAAUwrB,YAAchpB,KAAKnV,MAAMm+B,UAAW,CACzD,MAAM/zB,EAAO+K,KAAKnV,MAAMwjD,QAAQ7/C,QAChCyG,EAAKF,OAAS8H,EAAQyxC,cAAgB,EACtCr5C,EAAKJ,MAAQgI,EAAQ0xC,aAAe,EACpCt5C,EAAKC,IAAM2H,EAAQ2xC,UACnBv5C,EAAKI,KAAOwH,EAAQ4xC,UACxB,CACA,OAAO,IACX,CAIA,kBAAAhZ,GAAuB,CACvB,MAAA1mC,GACI,OAAOiR,KAAKnV,MAAM4R,QACtB,EAEJ,SAASiyC,IAASjyC,SAAEA,EAAAusB,UAAUA,IAC1B,MAAMj5B,EAAKkmC,EAAAA,QACLlsC,EAAMuE,EAAAA,OAAO,MACb2G,EAAO3G,EAAAA,OAAO,CAChBuG,MAAO,EACPE,OAAQ,EACRG,IAAK,EACLG,KAAM,IAiCV,OAtBA3G,EAAAA,mBAAmB,KACf,MAAMmG,MAAEA,EAAAE,OAAOA,EAAAG,IAAQA,EAAAG,KAAKA,GAASJ,EAAKzG,QAC1C,GAAIw6B,IAAcj/B,EAAIyE,UAAYqG,IAAUE,EACxC,OACJhL,EAAIyE,QAAQmgD,QAAQC,YAAc7+C,EAClC,MAAM6H,EAAQzO,SAASwT,cAAc,SAarC,OAZAxT,SAAS0lD,KAAKC,YAAYl3C,GACtBA,EAAMm3C,OACNn3C,EAAMm3C,MAAMC,WAAW,oCACFj/C,yEAEZ8E,wCACCE,qCACHG,sCACCG,0CAIL,KACHlM,SAAS0lD,KAAKI,YAAYr3C,KAE/B,CAACoxB,IACI15B,EAAAA,cAAoB4+C,GAAiB,CAAEllB,YAAsBolB,SAAUrkD,EAAKskD,QAASp5C,GAAQi6C,EAAAA,aAAmBzyC,EAAU,CAAE1S,QACxI,CC9DA,MAAMolD,GAAgB,EAAG1yC,WAAUpR,UAAS29B,YAAWC,iBAAgB/4B,SAAQk/C,wBAAuBC,WAClG,MAAMC,EAAmBpxC,GAAYqxC,IAC/Bx/C,EAAKkmC,EAAAA,QACL3qC,EAAUI,EAAAA,QAAQ,KAAA,CACpBqE,GAAAA,EACA1E,UACA29B,YACA94B,SACA+4B,eAAiBumB,IACbF,EAAiB5+C,IAAI8+C,GAAS,GAC9B,IAAA,MAAWC,KAAcH,EAAiBhzC,SACtC,IAAKmzC,EACD,OAERxmB,GAAkBA,KAEtBI,SAAWmmB,IACPF,EAAiB5+C,IAAI8+C,GAAS,GACvB,IAAMF,EAAiB7uC,OAAO+uC,MAQ7CJ,OAAwB,EAAY,CAACpmB,IAiBrC,OAhBAt9B,EAAAA,QAAQ,KACJ4jD,EAAiB/vC,QAAQ,CAACmwC,EAAGjjD,IAAQ6iD,EAAiB5+C,IAAIjE,GAAK,KAChE,CAACu8B,IAKJ2mB,EAAAA,UAAgB,MACX3mB,IACIsmB,EAAiBr6C,MAClBg0B,GACAA,KACL,CAACD,IACS,cAATqmB,IACA5yC,EAAWnN,EAAAA,cAAoBo/C,GAAU,CAAE1lB,aAAwBvsB,IAE/DnN,EAAAA,cAAoBrG,EAAgBsG,SAAU,CAAEC,MAAOlE,GAAWmR,IAE9E,SAAS8yC,KACL,WAAWj/C,GACf,CC3CA,MAAMs/C,GAAe5pC,GAAUA,EAAMvZ,KAAO,GAiD5C,MAAMojD,GAAkB,EAAGpzC,WAAUvM,SAAQ7E,WAAU,EAAM49B,iBAAgB6mB,kBAAiBV,yBAAwB,EAAMC,OAAO,WAI/H,MAAMU,EAActkD,EAAAA,WAAWkB,GAAoBojD,aC3DvD,WACI,MAAMxqC,EAAY0oC,MACX+B,EAAmBC,GAAwBC,EAAAA,SAAS,GACrDH,EAActgD,EAAAA,YAAY,KAC5B8V,EAAU/W,SAAWyhD,EAAqBD,EAAoB,IAC/D,CAACA,IAMJ,MAAO,CADqBvgD,EAAAA,YAAY,IAAMoR,GAAMuhB,WAAW2tB,GAAc,CAACA,IACjDC,EACjC,CD+CsEG,GAAiB,GAC7E5qC,EAAY0oC,KAEZmC,EAjDV,SAAsB3zC,GAClB,MAAM4zC,EAAW,GAMjB,OAJAC,EAAAA,SAAS/wC,QAAQ9C,EAAWuJ,IACpBuqC,EAAAA,eAAevqC,IACfqqC,EAAShwC,KAAK2F,KAEfqqC,CACX,CAyC6BG,CAAa/zC,GACtC,IAAIg0C,EAAmBL,EACvB,MAAMM,EAAkBpiD,EAAAA,OAAO,IAAIgC,KAAO9B,QAGpCmiD,EAAkBriD,EAAAA,OAAOmiD,GAEzBG,EAActiD,EAAAA,OAAO,IAAIgC,KAAO9B,QAGhCy4B,EAAkB34B,EAAAA,QAAO,GE1EnC,IAA0B4T,EFqFtB,GAVA9Y,EAA0B,KACtB69B,EAAgBz4B,SAAU,EAnElC,SAA2BiO,EAAUm0C,GACjCn0C,EAAS8C,QAASyG,IACd,MAAMvZ,EAAMmjD,GAAY5pC,GACxB4qC,EAAYlgD,IAAIjE,EAAKuZ,IAE7B,CA+DQ6qC,CAAkBT,EAAkBQ,GACpCD,EAAgBniD,QAAUiiD,IE9ERvuC,EFgFL,KACb+kB,EAAgBz4B,SAAU,EAC1BoiD,EAAYlwC,QACZgwC,EAAgBhwC,SElFbpX,YAAU,IAAM,IAAM4Y,IAAY,IFoFrC+kB,EAAgBz4B,QAChB,OAAQc,gBAAoBwhD,EAAAA,SAAgB,KAAML,EAAiBpkC,IAAKrG,GAAW1W,EAAAA,cAAoB6/C,GAAe,CAAE1iD,IAAKmjD,GAAY5pC,GAAQgjB,WAAW,EAAM39B,UAASA,QAAU,EAAmB+jD,wBAA8CC,QAAcrpC,KAGxQyqC,EAAmB,IAAIA,GAGvB,MAAMM,EAAcJ,EAAgBniD,QAAQ6d,IAAIujC,IAC1CoB,EAAaZ,EAAiB/jC,IAAIujC,IAElCqB,EAAaF,EAAYj/C,OAC/B,IAAA,IAAS0G,EAAI,EAAGA,EAAIy4C,EAAYz4C,IAAK,CACjC,MAAM/L,EAAMskD,EAAYv4C,QACpBw4C,EAAWlgD,QAAQrE,IAAgBikD,EAAgBjgD,IAAIhE,IACvDikD,EAAgBhgD,IAAIjE,OAAK,EAEjC,CA4DA,MAzDa,SAAT4iD,GAAmBqB,EAAgBz7C,OACnCw7C,EAAmB,IAIvBC,EAAgBnxC,QAAQ,CAAC2xC,EAAWzkD,KAEhC,IAAgC,IAA5BukD,EAAWlgD,QAAQrE,GACnB,OACJ,MAAMuZ,EAAQ4qC,EAAYrgD,IAAI9D,GAC9B,IAAKuZ,EACD,OACJ,MAAMmrC,EAAiBJ,EAAYjgD,QAAQrE,GAC3C,IAAI2kD,EAAmBF,EACvB,IAAKE,EAAkB,CACnB,MAAMC,EAAS,KAEXX,EAAgBjwC,OAAOhU,GAIvB,MAAM6kD,EAAehnD,MAAMslB,KAAKghC,EAAYl1C,QAAQkjB,OAAQ2yB,IAAcP,EAAWngD,SAAS0gD,IAa9F,GAXAD,EAAa/xC,QAASiyC,GAAgBZ,EAAYnwC,OAAO+wC,IAEzDb,EAAgBniD,QAAU4hD,EAAiBxxB,OAAQ6yB,IAC/C,MAAMC,EAAkB9B,GAAY6B,GACpC,OAEAC,IAAoBjlD,GAEhB6kD,EAAazgD,SAAS6gD,MAGzBhB,EAAgBz7C,KAAM,CACvB,IAA0B,IAAtBsQ,EAAU/W,QACV,OACJuhD,IACA9mB,GAAkBA,GACtB,GAEJmoB,EAAoB9hD,EAAAA,cAAoB6/C,GAAe,CAAE1iD,IAAKmjD,GAAY5pC,GAAQgjB,WAAW,EAAOC,eAAgBooB,EAAQnhD,SAAgBk/C,wBAA8CC,QAAcrpC,GACxM0qC,EAAgBhgD,IAAIjE,EAAK2kD,EAC7B,CACAX,EAAiBjwC,OAAO2wC,EAAgB,EAAGC,KAI/CX,EAAmBA,EAAiBpkC,IAAKrG,IACrC,MAAMvZ,EAAMuZ,EAAMvZ,IAClB,OAAOikD,EAAgBjgD,IAAIhE,GAAQuZ,EAAU1W,EAAAA,cAAoB6/C,GAAe,CAAE1iD,IAAKmjD,GAAY5pC,GAAQgjB,WAAW,EAAMomB,wBAA8CC,QAAcrpC,KAOpL1W,EAAAA,cAAoBwhD,EAAAA,SAAgB,KAAMJ,EAAgBz7C,KAC5Dw7C,EACAA,EAAiBpkC,IAAKrG,GAAU2rC,EAAAA,aAAa3rC","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210]}